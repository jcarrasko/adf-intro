/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AlfrescoApiService, LogService } from '@alfresco/adf-core';
import { EventEmitter, OnChanges } from '@angular/core';
/**
 * <adf-webscript-get [scriptPath]="string"
 *                         [scriptArgs]="Object"
 *                         [contextRoot]="string"
 *                         [servicePath]="string"
 *                         [contentType]="JSON|HTML|DATATABLE"
 *                         (success)="customMethod($event)>
 * </adf-webscript-get>
 *
 * This component, provide a get webscript viewer
 *
 * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)
 * @InputParam {Object} scriptArgs arguments to pass to Web Script
 * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'
 * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'
 * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT
 *
 * @Output - success - The event is emitted when the data are recived
 *
 * @returns {WebscriptComponent} .
 */
export declare class WebscriptComponent implements OnChanges {
    private apiService;
    private logService;
    scriptPath: string;
    scriptArgs: any;
    showData: boolean;
    contextRoot: string;
    servicePath: string;
    contentType: string;
    success: EventEmitter<{}>;
    data: any;
    showError: boolean;
    constructor(apiService: AlfrescoApiService, logService: LogService);
    ngOnChanges(changes: any): Promise<{}>;
    /**
     * show the data in a ng2-alfresco-datatable
     *
     * @param data
     *
     * @retutns the data as datatable
     */
    showDataAsDataTable(data: any): any;
    clean(): void;
    isDataTableContent(): boolean;
}
