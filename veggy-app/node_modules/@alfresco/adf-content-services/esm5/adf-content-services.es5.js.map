{"version":3,"file":"adf-content-services.es5.js","sources":["~/@alfresco/adf-content-services/adf-content-services.ts","~/@alfresco/adf-content-services/public-api.ts","~/@alfresco/adf-content-services/index.ts","~/@alfresco/adf-content-services/content-metadata/index.ts","~/@alfresco/adf-content-services/content-metadata/public-api.ts","~/@alfresco/adf-content-services/folder-directive/index.ts","~/@alfresco/adf-content-services/folder-directive/public-api.ts","~/@alfresco/adf-content-services/dialogs/index.ts","~/@alfresco/adf-content-services/dialogs/public-api.ts","~/@alfresco/adf-content-services/content-node-selector/index.ts","~/@alfresco/adf-content-services/content-node-selector/public-api.ts","~/@alfresco/adf-content-services/version-manager/index.ts","~/@alfresco/adf-content-services/version-manager/public-api.ts","~/@alfresco/adf-content-services/breadcrumb/index.ts","~/@alfresco/adf-content-services/breadcrumb/public-api.ts","~/@alfresco/adf-content-services/site-dropdown/index.ts","~/@alfresco/adf-content-services/site-dropdown/public-api.ts","~/@alfresco/adf-content-services/search/index.ts","~/@alfresco/adf-content-services/search/public-api.ts","~/@alfresco/adf-content-services/upload/index.ts","~/@alfresco/adf-content-services/upload/public-api.ts","~/@alfresco/adf-content-services/document-list/index.ts","~/@alfresco/adf-content-services/document-list/public-api.ts","~/@alfresco/adf-content-services/document-list/models/permissions-style.model.ts","~/@alfresco/adf-content-services/document-list/models/document-library.model.ts","~/@alfresco/adf-content-services/webscript/index.ts","~/@alfresco/adf-content-services/webscript/public-api.ts","~/@alfresco/adf-content-services/tag/index.ts","~/@alfresco/adf-content-services/tag/public-api.ts","~/@alfresco/adf-content-services/social/index.ts","~/@alfresco/adf-content-services/social/public-api.ts","~/@alfresco/adf-content-services/content.module.ts","~/@alfresco/adf-content-services/content-metadata/content-metadata.module.ts","~/@alfresco/adf-content-services/content-metadata/content-metadata-card.component.ts","~/@alfresco/adf-content-services/content-metadata/content-metadata.component.ts","~/@alfresco/adf-content-services/content-metadata/content-metadata.service.ts","~/@alfresco/adf-content-services/folder-directive/folder-directive.module.ts","~/@alfresco/adf-content-services/folder-directive/folder-edit.directive.ts","~/@alfresco/adf-content-services/folder-directive/folder-create.directive.ts","~/@alfresco/adf-content-services/dialogs/dialog.module.ts","~/@alfresco/adf-content-services/dialogs/folder.dialog.ts","~/@alfresco/adf-content-services/dialogs/folder-name.validators.ts","~/@alfresco/adf-content-services/dialogs/download-zip.dialog.ts","~/@alfresco/adf-content-services/content-node-selector/content-node-selector.module.ts","~/@alfresco/adf-content-services/version-manager/version-manager.module.ts","~/@alfresco/adf-content-services/version-manager/version-list.component.ts","~/@alfresco/adf-content-services/version-manager/version-manager.component.ts","~/@alfresco/adf-content-services/version-manager/version-upload.component.ts","~/@alfresco/adf-content-services/breadcrumb/breadcrumb.module.ts","~/@alfresco/adf-content-services/breadcrumb/dropdown-breadcrumb.component.ts","~/@alfresco/adf-content-services/breadcrumb/breadcrumb.component.ts","~/@alfresco/adf-content-services/site-dropdown/sites-dropdown.module.ts","~/@alfresco/adf-content-services/site-dropdown/sites-dropdown.component.ts","~/@alfresco/adf-content-services/search/search.module.ts","~/@alfresco/adf-content-services/search/components/search-control.component.ts","~/@alfresco/adf-content-services/search/components/search.component.ts","~/@alfresco/adf-content-services/search/components/search-trigger.directive.ts","~/@alfresco/adf-content-services/document-list/document-list.module.ts","~/@alfresco/adf-content-services/document-list/components/no-permission/no-permission-content.directive.ts","~/@alfresco/adf-content-services/document-list/components/empty-folder/empty-folder-content.directive.ts","~/@alfresco/adf-content-services/document-list/components/content-column/content-column.component.ts","~/@alfresco/adf-content-services/document-list/components/content-column/content-column-list.component.ts","~/@alfresco/adf-content-services/document-list/components/content-action/content-action.component.ts","~/@alfresco/adf-content-services/document-list/services/folder-actions.service.ts","~/@alfresco/adf-content-services/document-list/services/document-actions.service.ts","~/@alfresco/adf-content-services/document-list/services/node-actions.service.ts","~/@alfresco/adf-content-services/content-node-selector/content-node-selector.component.ts","../../../../node_modules/src/operators/index.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/takeUntil.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/debounceTime.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/OuterSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","~/@alfresco/adf-content-services/content-node-selector/content-node-selector.service.ts","~/@alfresco/adf-content-services/document-list/components/content-action/content-action-list.component.ts","~/@alfresco/adf-content-services/document-list/components/document-list.component.ts","~/@alfresco/adf-content-services/document-list/components/node.event.ts","~/@alfresco/adf-content-services/document-list/services/document-list.service.ts","~/@alfresco/adf-content-services/document-list/models/content-action.model.ts","~/@alfresco/adf-content-services/document-list/data/share-datatable-adapter.ts","~/@alfresco/adf-content-services/document-list/data/share-data-row.model.ts","~/@alfresco/adf-content-services/document-list/models/preset.model.ts","~/@alfresco/adf-content-services/upload/upload.module.ts","~/@alfresco/adf-content-services/upload/directives/file-draggable.directive.ts","~/@alfresco/adf-content-services/upload/components/upload-drag-area.component.ts","~/@alfresco/adf-content-services/upload/components/upload-button.component.ts","~/@alfresco/adf-content-services/document-list/models/permissions.model.ts","~/@alfresco/adf-content-services/upload/components/file-uploading-list-row.component.ts","~/@alfresco/adf-content-services/upload/components/file-uploading-dialog.component.ts","~/@alfresco/adf-content-services/upload/components/file-uploading-list.component.ts","~/@alfresco/adf-content-services/webscript/webscript.module.ts","~/@alfresco/adf-content-services/webscript/webscript.component.ts","~/@alfresco/adf-content-services/tag/tag.module.ts","~/@alfresco/adf-content-services/tag/tag-node-list.component.ts","~/@alfresco/adf-content-services/tag/tag-list.component.ts","~/@alfresco/adf-content-services/tag/tag-actions.component.ts","~/@alfresco/adf-content-services/tag/services/tag.service.ts","~/@alfresco/adf-content-services/social/social.module.ts","~/@alfresco/adf-content-services/social/rating.component.ts","~/@alfresco/adf-content-services/social/like.component.ts","~/@alfresco/adf-content-services/social/services/rating.service.ts","~/@alfresco/adf-content-services/material.module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ContentModule,SocialModule,TagModule,WebScriptModule,DocumentListModule,UploadModule,ALFRESCO_SEARCH_DIRECTIVES,ALFRESCO_SEARCH_PROVIDERS,SearchModule,SitesDropdownModule,BreadcrumbModule,VersionManagerModule,ContentNodeSelectorModule,DialogModule,FolderDirectiveModule,ContentMetadataModule,RatingComponent,LikeComponent,RatingService,TagActionsComponent,TagListComponent,TagNodeListComponent,TagService,WebscriptComponent,PaginationStrategy,DocumentListComponent,NodeEntityEvent,NodeEntryEvent,ContentColumnComponent,ContentColumnListComponent,ContentActionComponent,ContentActionListComponent,EmptyFolderContentDirective,NoPermissionContentDirective,ShareDataTableAdapter,ShareDataRow,ImageResolver,RowFilter,FolderActionsService,DocumentActionsService,DocumentListService,NodeActionsService,ContentActionModel,ContentActionHandler,DocumentActionModel,FolderActionModel,NodePaging,NodePagingList,NodeMinimalEntry,Pagination,NodeMinimal,UserInfo,ContentInfo,PathInfoEntity,PathElementEntity,NodeProperties,PermissionModel,PermissionStyleModel,UploadButtonComponent,FileUploadingDialogComponent,UploadDragAreaComponent,FileUploadingListComponent,FileUploadingListRowComponent,FileDraggableDirective,SearchComponent,SearchControlComponent,SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR,SearchTriggerDirective,DropdownSitesComponent,BreadcrumbComponent,DropdownBreadcrumbComponent,VersionListComponent,VersionManagerComponent,VersionUploadComponent,ContentNodeSelectorComponentData,ContentNodeSelectorComponent,ContentNodeSelectorService,DownloadZipDialogComponent,FolderDialogComponent,FolderCreateDirective,FolderEditDirective,ContentMetadataComponent,ContentMetadataService} from './public-api';\n\nexport {BreadcrumbComponent as ɵbg} from './breadcrumb/breadcrumb.component';\nexport {DropdownBreadcrumbComponent as ɵbh} from './breadcrumb/dropdown-breadcrumb.component';\nexport {ContentMetadataCardComponent as ɵbq} from './content-metadata/content-metadata-card.component';\nexport {ContentMetadataComponent as ɵbo} from './content-metadata/content-metadata.component';\nexport {ContentMetadataService as ɵbp} from './content-metadata/content-metadata.service';\nexport {ContentNodeSelectorComponent as ɵbl} from './content-node-selector/content-node-selector.component';\nexport {ContentNodeSelectorComponentData as ɵbn} from './content-node-selector/content-node-selector.component-data.interface';\nexport {ContentNodeSelectorService as ɵbm} from './content-node-selector/content-node-selector.service';\nexport {DownloadZipDialogComponent as ɵbr} from './dialogs/download-zip.dialog';\nexport {FolderDialogComponent as ɵbs} from './dialogs/folder.dialog';\nexport {ContentActionListComponent as ɵbc} from './document-list/components/content-action/content-action-list.component';\nexport {ContentActionComponent as ɵy} from './document-list/components/content-action/content-action.component';\nexport {ContentColumnListComponent as ɵx} from './document-list/components/content-column/content-column-list.component';\nexport {ContentColumnComponent as ɵw} from './document-list/components/content-column/content-column.component';\nexport {DocumentListComponent as ɵu} from './document-list/components/document-list.component';\nexport {EmptyFolderContentDirective as ɵbd} from './document-list/components/empty-folder/empty-folder-content.directive';\nexport {NoPermissionContentDirective as ɵbe} from './document-list/components/no-permission/no-permission-content.directive';\nexport {DocumentActionsService as ɵz} from './document-list/services/document-actions.service';\nexport {DocumentListService as ɵv} from './document-list/services/document-list.service';\nexport {FolderActionsService as ɵbb} from './document-list/services/folder-actions.service';\nexport {NodeActionsService as ɵba} from './document-list/services/node-actions.service';\nexport {FolderCreateDirective as ɵbt} from './folder-directive/folder-create.directive';\nexport {FolderEditDirective as ɵbu} from './folder-directive/folder-edit.directive';\nexport {MaterialModule as ɵb,modules as ɵa} from './material.module';\nexport {SearchControlComponent as ɵl} from './search/components/search-control.component';\nexport {SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR as ɵm,SearchTriggerDirective as ɵn} from './search/components/search-trigger.directive';\nexport {SearchComponent as ɵk} from './search/components/search.component';\nexport {DropdownSitesComponent as ɵbf} from './site-dropdown/sites-dropdown.component';\nexport {LikeComponent as ɵe} from './social/like.component';\nexport {RatingComponent as ɵc} from './social/rating.component';\nexport {RatingService as ɵd} from './social/services/rating.service';\nexport {TagService as ɵg} from './tag/services/tag.service';\nexport {TagActionsComponent as ɵf} from './tag/tag-actions.component';\nexport {TagListComponent as ɵh} from './tag/tag-list.component';\nexport {TagNodeListComponent as ɵi} from './tag/tag-node-list.component';\nexport {FileUploadingDialogComponent as ɵr} from './upload/components/file-uploading-dialog.component';\nexport {FileUploadingListRowComponent as ɵt} from './upload/components/file-uploading-list-row.component';\nexport {FileUploadingListComponent as ɵs} from './upload/components/file-uploading-list.component';\nexport {UploadButtonComponent as ɵq} from './upload/components/upload-button.component';\nexport {UploadDragAreaComponent as ɵp} from './upload/components/upload-drag-area.component';\nexport {FileDraggableDirective as ɵo} from './upload/directives/file-draggable.directive';\nexport {VersionListComponent as ɵbk} from './version-manager/version-list.component';\nexport {VersionManagerComponent as ɵbj} from './version-manager/version-manager.component';\nexport {VersionUploadComponent as ɵbi} from './version-manager/version-upload.component';\nexport {WebscriptComponent as ɵj} from './webscript/webscript.component';","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentModule,SocialModule,TagModule,WebScriptModule,DocumentListModule,UploadModule,ALFRESCO_SEARCH_DIRECTIVES,ALFRESCO_SEARCH_PROVIDERS,SearchModule,SitesDropdownModule,BreadcrumbModule,VersionManagerModule,ContentNodeSelectorModule,DialogModule,FolderDirectiveModule,ContentMetadataModule,RatingComponent,LikeComponent,RatingService,TagActionsComponent,TagListComponent,TagNodeListComponent,TagService,WebscriptComponent,PaginationStrategy,DocumentListComponent,NodeEntityEvent,NodeEntryEvent,ContentColumnComponent,ContentColumnListComponent,ContentActionComponent,ContentActionListComponent,EmptyFolderContentDirective,NoPermissionContentDirective,ShareDataTableAdapter,ShareDataRow,ImageResolver,RowFilter,FolderActionsService,DocumentActionsService,DocumentListService,NodeActionsService,ContentActionModel,ContentActionHandler,DocumentActionModel,FolderActionModel,NodePaging,NodePagingList,NodeMinimalEntry,Pagination,NodeMinimal,UserInfo,ContentInfo,PathInfoEntity,PathElementEntity,NodeProperties,PermissionModel,PermissionStyleModel,UploadButtonComponent,FileUploadingDialogComponent,UploadDragAreaComponent,FileUploadingListComponent,FileUploadingListRowComponent,FileDraggableDirective,SearchComponent,SearchControlComponent,SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR,SearchTriggerDirective,DropdownSitesComponent,BreadcrumbComponent,DropdownBreadcrumbComponent,VersionListComponent,VersionManagerComponent,VersionUploadComponent,ContentNodeSelectorComponentData,ContentNodeSelectorComponent,ContentNodeSelectorService,DownloadZipDialogComponent,FolderDialogComponent,FolderCreateDirective,FolderEditDirective,ContentMetadataComponent,ContentMetadataService} from './index';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentModule} from './content.module';\n\nexport {SocialModule} from './social/social.module';\nexport {TagModule} from './tag/tag.module';\nexport {WebScriptModule} from './webscript/webscript.module';\nexport {DocumentListModule} from './document-list/document-list.module';\nexport {UploadModule} from './upload/upload.module';\nexport {ALFRESCO_SEARCH_DIRECTIVES,ALFRESCO_SEARCH_PROVIDERS,SearchModule} from './search/search.module';\nexport {SitesDropdownModule} from './site-dropdown/sites-dropdown.module';\nexport {BreadcrumbModule} from './breadcrumb/breadcrumb.module';\nexport {VersionManagerModule} from './version-manager/version-manager.module';\nexport {ContentNodeSelectorModule} from './content-node-selector/content-node-selector.module';\nexport {DialogModule} from './dialogs/dialog.module';\nexport {FolderDirectiveModule} from './folder-directive/folder-directive.module';\nexport {ContentMetadataModule} from './content-metadata/content-metadata.module';\n\nexport {RatingComponent,LikeComponent,RatingService} from './social';\nexport {TagActionsComponent,TagListComponent,TagNodeListComponent,TagService} from './tag';\nexport {WebscriptComponent} from './webscript';\nexport {PaginationStrategy,DocumentListComponent,NodeEntityEvent,NodeEntryEvent,ContentColumnComponent,ContentColumnListComponent,ContentActionComponent,ContentActionListComponent,EmptyFolderContentDirective,NoPermissionContentDirective,ShareDataTableAdapter,ShareDataRow,ImageResolver,RowFilter,FolderActionsService,DocumentActionsService,DocumentListService,NodeActionsService,ContentActionModel,ContentActionHandler,DocumentActionModel,FolderActionModel,NodePaging,NodePagingList,NodeMinimalEntry,Pagination,NodeMinimal,UserInfo,ContentInfo,PathInfoEntity,PathElementEntity,NodeProperties,PermissionModel,PermissionStyleModel} from './document-list';\nexport {UploadButtonComponent,FileUploadingDialogComponent,UploadDragAreaComponent,FileUploadingListComponent,FileUploadingListRowComponent,FileDraggableDirective} from './upload';\nexport {SearchComponent,SearchControlComponent,SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR,SearchTriggerDirective} from './search';\nexport {DropdownSitesComponent} from './site-dropdown';\nexport {BreadcrumbComponent,DropdownBreadcrumbComponent} from './breadcrumb';\nexport {VersionListComponent,VersionManagerComponent,VersionUploadComponent} from './version-manager';\nexport {ContentNodeSelectorComponentData,ContentNodeSelectorComponent,ContentNodeSelectorService} from './content-node-selector';\nexport {DownloadZipDialogComponent,FolderDialogComponent} from './dialogs';\nexport {FolderCreateDirective,FolderEditDirective} from './folder-directive';\nexport {ContentMetadataComponent,ContentMetadataService} from './content-metadata';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentMetadataComponent,ContentMetadataService} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentMetadataComponent} from './content-metadata.component';\nexport {ContentMetadataService} from './content-metadata.service';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {FolderCreateDirective,FolderEditDirective} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {FolderCreateDirective} from './folder-create.directive';\nexport {FolderEditDirective} from './folder-edit.directive';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {DownloadZipDialogComponent,FolderDialogComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {DownloadZipDialogComponent} from './download-zip.dialog';\nexport {FolderDialogComponent} from './folder.dialog';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentNodeSelectorComponentData,ContentNodeSelectorComponent,ContentNodeSelectorService} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ContentNodeSelectorComponentData} from './content-node-selector.component-data.interface';\nexport {ContentNodeSelectorComponent} from './content-node-selector.component';\nexport {ContentNodeSelectorService} from './content-node-selector.service';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {VersionListComponent,VersionManagerComponent,VersionUploadComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {VersionListComponent} from './version-list.component';\nexport {VersionManagerComponent} from './version-manager.component';\nexport {VersionUploadComponent} from './version-upload.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {BreadcrumbComponent,DropdownBreadcrumbComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {BreadcrumbComponent} from './breadcrumb.component';\nexport {DropdownBreadcrumbComponent} from './dropdown-breadcrumb.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {DropdownSitesComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {DropdownSitesComponent} from './sites-dropdown.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {SearchComponent,SearchControlComponent,SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR,SearchTriggerDirective} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {SearchComponent} from './components/search.component';\nexport {SearchControlComponent} from './components/search-control.component';\nexport {SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR,SearchTriggerDirective} from './components/search-trigger.directive';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {UploadButtonComponent,FileUploadingDialogComponent,UploadDragAreaComponent,FileUploadingListComponent,FileUploadingListRowComponent,FileDraggableDirective} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {UploadButtonComponent} from './components/upload-button.component';\nexport {FileUploadingDialogComponent} from './components/file-uploading-dialog.component';\nexport {UploadDragAreaComponent} from './components/upload-drag-area.component';\nexport {FileUploadingListComponent} from './components/file-uploading-list.component';\nexport {FileUploadingListRowComponent} from './components/file-uploading-list-row.component';\n\nexport {FileDraggableDirective} from './directives/file-draggable.directive';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {PaginationStrategy,DocumentListComponent,NodeEntityEvent,NodeEntryEvent,ContentColumnComponent,ContentColumnListComponent,ContentActionComponent,ContentActionListComponent,EmptyFolderContentDirective,NoPermissionContentDirective,ShareDataTableAdapter,ShareDataRow,ImageResolver,RowFilter,FolderActionsService,DocumentActionsService,DocumentListService,NodeActionsService,ContentActionModel,ContentActionHandler,DocumentActionModel,FolderActionModel,NodePaging,NodePagingList,NodeMinimalEntry,Pagination,NodeMinimal,UserInfo,ContentInfo,PathInfoEntity,PathElementEntity,NodeProperties,PermissionModel,PermissionStyleModel} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {PaginationStrategy,DocumentListComponent} from './components/document-list.component';\nexport {NodeEntityEvent,NodeEntryEvent} from './components/node.event';\nexport {ContentColumnComponent} from './components/content-column/content-column.component';\nexport {ContentColumnListComponent} from './components/content-column/content-column-list.component';\nexport {ContentActionComponent} from './components/content-action/content-action.component';\nexport {ContentActionListComponent} from './components/content-action/content-action-list.component';\nexport {EmptyFolderContentDirective} from './components/empty-folder/empty-folder-content.directive';\nexport {NoPermissionContentDirective} from './components/no-permission/no-permission-content.directive';\n\n// data\nexport {ShareDataTableAdapter} from './data/share-datatable-adapter';\nexport {ShareDataRow} from './data/share-data-row.model';\nexport {ImageResolver} from './data/image-resolver.model';\nexport {RowFilter} from './data/row-filter.model';\n\n// services\nexport {FolderActionsService} from './services/folder-actions.service';\nexport {DocumentActionsService} from './services/document-actions.service';\nexport {DocumentListService} from './services/document-list.service';\nexport {NodeActionsService} from './services/node-actions.service';\n\n// models\nexport {ContentActionModel,ContentActionHandler,DocumentActionModel,FolderActionModel} from './models/content-action.model';\nexport {NodePaging,NodePagingList,NodeMinimalEntry,Pagination,NodeMinimal,UserInfo,ContentInfo,PathInfoEntity,PathElementEntity,NodeProperties} from './models/document-library.model';\nexport {PermissionModel} from './models/permissions.model';\nexport {PermissionStyleModel} from './models/permissions-style.model';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { PermissionsEnum } from '@alfresco/adf-core';\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n/**\n * @param {?} css\n * @param {?} permission\n * @param {?=} isFile\n * @param {?=} isFolder\n */\nconstructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n\nfunction PermissionStyleModel_tsickle_Closure_declarations() {\n/** @type {?} */\nPermissionStyleModel.prototype.css;\n/** @type {?} */\nPermissionStyleModel.prototype.permission;\n/** @type {?} */\nPermissionStyleModel.prototype.isFolder;\n/** @type {?} */\nPermissionStyleModel.prototype.isFile;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nfunction NodePaging_tsickle_Closure_declarations() {\n/** @type {?} */\nNodePaging.prototype.list;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nfunction NodePagingList_tsickle_Closure_declarations() {\n/** @type {?} */\nNodePagingList.prototype.pagination;\n/** @type {?} */\nNodePagingList.prototype.entries;\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nfunction NodeMinimalEntry_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeMinimalEntry.prototype.entry;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nfunction Pagination_tsickle_Closure_declarations() {\n/** @type {?} */\nPagination.prototype.count;\n/** @type {?} */\nPagination.prototype.hasMoreItems;\n/** @type {?} */\nPagination.prototype.totalItems;\n/** @type {?} */\nPagination.prototype.skipCount;\n/** @type {?} */\nPagination.prototype.maxItems;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n}\n\nfunction NodeMinimal_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeMinimal.prototype.id;\n/** @type {?} */\nNodeMinimal.prototype.parentId;\n/** @type {?} */\nNodeMinimal.prototype.name;\n/** @type {?} */\nNodeMinimal.prototype.nodeType;\n/** @type {?} */\nNodeMinimal.prototype.isFolder;\n/** @type {?} */\nNodeMinimal.prototype.isFile;\n/** @type {?} */\nNodeMinimal.prototype.modifiedAt;\n/** @type {?} */\nNodeMinimal.prototype.modifiedByUser;\n/** @type {?} */\nNodeMinimal.prototype.createdAt;\n/** @type {?} */\nNodeMinimal.prototype.createdByUser;\n/** @type {?} */\nNodeMinimal.prototype.content;\n/** @type {?} */\nNodeMinimal.prototype.path;\n/** @type {?} */\nNodeMinimal.prototype.properties;\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nfunction UserInfo_tsickle_Closure_declarations() {\n/** @type {?} */\nUserInfo.prototype.displayName;\n/** @type {?} */\nUserInfo.prototype.id;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nfunction ContentInfo_tsickle_Closure_declarations() {\n/** @type {?} */\nContentInfo.prototype.mimeType;\n/** @type {?} */\nContentInfo.prototype.mimeTypeName;\n/** @type {?} */\nContentInfo.prototype.sizeInBytes;\n/** @type {?} */\nContentInfo.prototype.encoding;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nfunction PathInfoEntity_tsickle_Closure_declarations() {\n/** @type {?} */\nPathInfoEntity.prototype.elements;\n/** @type {?} */\nPathInfoEntity.prototype.isComplete;\n/** @type {?} */\nPathInfoEntity.prototype.name;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nfunction PathElementEntity_tsickle_Closure_declarations() {\n/** @type {?} */\nPathElementEntity.prototype.id;\n/** @type {?} */\nPathElementEntity.prototype.name;\n}\n\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {WebscriptComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {WebscriptComponent} from './webscript.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TagActionsComponent,TagListComponent,TagNodeListComponent,TagService} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TagActionsComponent} from './tag-actions.component';\nexport {TagListComponent} from './tag-list.component';\nexport {TagNodeListComponent} from './tag-node-list.component';\n\nexport {TagService} from './services/tag.service';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {RatingComponent,LikeComponent,RatingService} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {RatingComponent} from './rating.component';\nexport {LikeComponent} from './like.component';\n\nexport {RatingService} from './services/rating.service';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nexport class ContentModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CoreModule,\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        BrowserAnimationsModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        VersionManagerModule,\n        ContentNodeSelectorModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        CoreModule,\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        VersionManagerModule,\n        ContentNodeSelectorModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        MaterialModule\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ContentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nContentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { CardViewModule } from '@alfresco/adf-core';\n\nimport { ContentMetadataComponent } from './content-metadata.component';\nimport { ContentMetadataCardComponent } from './content-metadata-card.component';\nexport class ContentMetadataModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FlexLayoutModule,\n        CardViewModule\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ContentMetadataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nContentMetadataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentMetadataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nconst /** @type {?} */ PROPERTY_COUNTER_WHILE_COLLAPSED = 5;\nexport class ContentMetadataCardComponent {\n    \n    node: MinimalNodeEntryEntity;\n\n    editable: boolean = false;\n    expanded: boolean = false;\n/**\n * @return {?}\n */\ntoggleEdit(): void {\n        this.editable = !this.editable;\n    }\n/**\n * @return {?}\n */\ntoggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n/**\n * @return {?}\n */\nget maxPropertiesToShow(): number {\n        return this.expanded ? Infinity : PROPERTY_COUNTER_WHILE_COLLAPSED;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-content-metadata-card',\n    template: `\n      <mat-card *ngIf=\"node\">\n          <mat-card-content>\n              <adf-content-metadata [node]=\"node\" [editable]=\"editable\" [maxPropertiesToShow]=\"maxPropertiesToShow\"></adf-content-metadata>\n          </mat-card-content>\n          <mat-card-footer class=\"adf-viewer-default-sidebar-card-footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n              <div>\n                  <button mat-icon-button>\n                      <mat-icon>star_border</mat-icon>\n                  </button>\n                  <button mat-icon-button (click)=\"toggleEdit()\">\n                      <mat-icon>mode_edit</mat-icon>\n                  </button>\n              </div>\n              <button mat-button (click)=\"toggleExpanded()\">\n                  <ng-container *ngIf=\"!expanded\">\n                      <span>{{ 'ADF_VIEWER.SIDEBAR.METADATA.MORE_INFORMATION' | translate }}</span>\n                      <mat-icon>keyboard_arrow_down</mat-icon>\n                  </ng-container>\n                  <ng-container *ngIf=\"expanded\">\n                      <span>{{ 'ADF_VIEWER.SIDEBAR.METADATA.LESS_INFORMATION' | translate }}</span>\n                      <mat-icon>keyboard_arrow_up</mat-icon>\n                  </ng-container>\n              </button>\n          </mat-card-footer>\n      </mat-card>\n    `,\n    styles: [`\n\n    `],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-viewer-default-sidebar' }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'node': [{ type: Input },],\n};\n}\n\nfunction ContentMetadataCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentMetadataCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentMetadataCardComponent.ctorParameters;\n/** @type {?} */\nContentMetadataCardComponent.propDecorators;\n/** @type {?} */\nContentMetadataCardComponent.prototype.node;\n/** @type {?} */\nContentMetadataCardComponent.prototype.editable;\n/** @type {?} */\nContentMetadataCardComponent.prototype.expanded;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { CardViewItem, CardViewUpdateService, FileSizePipe, NodesApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from './content-metadata.service';\nexport class ContentMetadataComponent implements OnChanges, OnInit {\n\n    \n    node: MinimalNodeEntryEntity;\n\n    \n    editable: boolean = false;\n\n    \n    maxPropertiesToShow: number = Infinity;\n\n    properties: CardViewItem[] = [];\n/**\n * @param {?} contentMetadataService\n * @param {?} cardViewUpdateService\n * @param {?} nodesApi\n */\nconstructor(private contentMetadataService: ContentMetadataService,\nprivate cardViewUpdateService: CardViewUpdateService,\nprivate nodesApi: NodesApiService) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.cardViewUpdateService.itemUpdated$\n            .switchMap(this.saveNode.bind(this))\n            .subscribe(\n                node => this.node = node,\n                error => this.handleError(error)\n            );\n    }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n        this.recalculateProperties();\n    }\n/**\n * @param {?} __0\n * @return {?}\n */\nprivate saveNode({ changed: nodeBody }): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApi.updateNode(this.node.id, nodeBody);\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error): void {\n        /*tslint:disable-next-line*/\n        console.log(error);\n    }\n/**\n * @return {?}\n */\nprivate recalculateProperties(): void {\n        let /** @type {?} */ basicProperties = this.contentMetadataService.getBasicProperties(this.node);\n\n        if (this.maxPropertiesToShow) {\n            basicProperties = basicProperties.slice(0, this.maxPropertiesToShow);\n        }\n\n        this.properties = [...basicProperties];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-content-metadata',\n    template: `\n      <div class=\"adf-metadata-properties\">\n          <adf-card-view [properties]=\"properties\" [editable]=\"editable\"></adf-card-view>\n      </div>\n    `,\n    styles: [`\n\n    `],\n    host: { 'class': 'adf-content-metadata' },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [ CardViewUpdateService ],\n    viewProviders: [ ContentMetadataService, FileSizePipe ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentMetadataService, },\n{type: CardViewUpdateService, },\n{type: NodesApiService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'node': [{ type: Input },],\n'editable': [{ type: Input },],\n'maxPropertiesToShow': [{ type: Input },],\n};\n}\n\nfunction ContentMetadataComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentMetadataComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentMetadataComponent.ctorParameters;\n/** @type {?} */\nContentMetadataComponent.propDecorators;\n/** @type {?} */\nContentMetadataComponent.prototype.node;\n/** @type {?} */\nContentMetadataComponent.prototype.editable;\n/** @type {?} */\nContentMetadataComponent.prototype.maxPropertiesToShow;\n/** @type {?} */\nContentMetadataComponent.prototype.properties;\n/** @type {?} */\nContentMetadataComponent.prototype.contentMetadataService;\n/** @type {?} */\nContentMetadataComponent.prototype.cardViewUpdateService;\n/** @type {?} */\nContentMetadataComponent.prototype.nodesApi;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\nexport class ContentMetadataService {\n/**\n * @param {?} fileSizePipe\n */\nconstructor(private fileSizePipe: FileSizePipe) {}\n/**\n * @param {?} node\n * @return {?}\n */\ngetBasicProperties(node: MinimalNodeEntryEntity) {\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: node.properties['cm:title'],\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: node.content.sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: node.content.mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: node.properties['cm:author'],\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: node.properties['cm:description'],\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FileSizePipe, },\n];\n}\n\nfunction ContentMetadataService_tsickle_Closure_declarations() {\n/** @type {?} */\nContentMetadataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentMetadataService.ctorParameters;\n/** @type {?} */\nContentMetadataService.prototype.fileSizePipe;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\nexport class FolderDirectiveModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FolderDirectiveModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFolderDirectiveModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFolderDirectiveModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    \n    folder: MinimalNodeEntryEntity;\n/**\n * @param {?} event\n * @return {?}\n */\nonClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n/**\n * @param {?} dialogRef\n * @param {?} elementRef\n * @param {?} content\n */\nconstructor(\npublic dialogRef: MatDialog,\npublic elementRef: ElementRef,\npublic content: ContentService\n    ) {}\n/**\n * @return {?}\n */\nprivate get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: { folder },\n            width: `${width}px`\n        };\n    }\n/**\n * @return {?}\n */\nprivate openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const /** @type {?} */ dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[adf-edit-folder]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n{type: ElementRef, },\n{type: ContentService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'folder': [{ type: Input, args: ['adf-edit-folder', ] },],\n'onClick': [{ type: HostListener, args: ['click', [ '$event' ], ] },],\n};\n}\n\nfunction FolderEditDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFolderEditDirective.DIALOG_WIDTH;\n/** @type {?} */\nFolderEditDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFolderEditDirective.ctorParameters;\n/** @type {?} */\nFolderEditDirective.propDecorators;\n/** @type {?} */\nFolderEditDirective.prototype.folder;\n/** @type {?} */\nFolderEditDirective.prototype.dialogRef;\n/** @type {?} */\nFolderEditDirective.prototype.elementRef;\n/** @type {?} */\nFolderEditDirective.prototype.content;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst /** @type {?} */ DEFAULT_FOLDER_PARENT_ID = '-my-';\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    \n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n/**\n * @param {?} event\n * @return {?}\n */\nonClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n/**\n * @param {?} dialogRef\n * @param {?} content\n */\nconstructor(\npublic dialogRef: MatDialog,\npublic content: ContentService\n    ) {}\n/**\n * @return {?}\n */\nprivate get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId } = this;\n\n        return {\n            data: { parentNodeId },\n            width: `${width}px`\n        };\n    }\n/**\n * @return {?}\n */\nprivate openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const /** @type {?} */ dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[adf-create-folder]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n{type: ContentService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'parentNodeId': [{ type: Input, args: ['adf-create-folder', ] },],\n'onClick': [{ type: HostListener, args: ['click', [ '$event' ], ] },],\n};\n}\n\nfunction FolderCreateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFolderCreateDirective.DIALOG_WIDTH;\n/** @type {?} */\nFolderCreateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFolderCreateDirective.ctorParameters;\n/** @type {?} */\nFolderCreateDirective.propDecorators;\n/** @type {?} */\nFolderCreateDirective.prototype.parentNodeId;\n/** @type {?} */\nFolderCreateDirective.prototype.dialogRef;\n/** @type {?} */\nFolderCreateDirective.prototype.content;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { FolderDialogComponent } from './folder.dialog';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NodesApiService, NotificationService, TranslationService } from '@alfresco/adf-core';\nexport class DialogModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent\n    ],\n    providers: [\n        NodesApiService,\n        NotificationService,\n        TranslationService\n    ],\n    exports: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DialogModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodesApiService, NotificationService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\nexport class FolderDialogComponent implements OnInit {\n    form: FormGroup;\n    folder: MinimalNodeEntryEntity = null;\n/**\n * @param {?} formBuilder\n * @param {?} dialog\n * @param {?} nodesApi\n * @param {?} translation\n * @param {?} notification\n * @param {?} data\n */\nconstructor(\nprivate formBuilder: FormBuilder,\nprivate dialog: MatDialogRef<FolderDialogComponent>,\nprivate nodesApi: NodesApiService,\nprivate translation: TranslationService,\nprivate notification: NotificationService,\npublic data: any\n    ) {}\n/**\n * @return {?}\n */\nget editing(): boolean {\n        return !!this.data.folder;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        const { folder } = this.data;\n        let /** @type {?} */ name = '';\n        let /** @type {?} */ description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const /** @type {?} */ validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n/**\n * @return {?}\n */\nget name(): string {\n        let { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n/**\n * @return {?}\n */\nget description(): string {\n        let { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n/**\n * @return {?}\n */\nprivate get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n/**\n * @return {?}\n */\nprivate create(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties });\n    }\n/**\n * @return {?}\n */\nprivate edit(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n/**\n * @return {?}\n */\nsubmit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: MinimalNodeEntryEntity) => dialog.close(folder),\n                (error) => this.handleError(error)\n            );\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): any {\n        let /** @type {?} */ i18nMessageString = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                i18nMessageString = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch ( /** @type {?} */err) { /* Do nothing, keep the original message */ }\n\n        this.translation.get(i18nMessageString).subscribe(message => {\n            this.notification.openSnackMessage(message, 3000);\n        });\n\n        return error;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-folder-dialog',\n    styles: [`\n      .adf-fill-remaining-space {\n        -webkit-box-flex: 1;\n            -ms-flex: 1 1 auto;\n                flex: 1 1 auto; }\n\n      .adf-full-width {\n        width: 100%; }\n    `],\n    template: `\n      <h2 mat-dialog-title>\n          {{\n          (editing\n          ? 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE'\n          : 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE'\n          ) | translate\n          }}\n      </h2>\n\n      <mat-dialog-content>\n          <form [formGroup]=\"form\" (submit)=\"submit()\">\n              <mat-input-container class=\"adf-full-width\">\n                  <input\n                      placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL' | translate }}\"\n                      matInput\n                      required\n                      [formControl]=\"form.controls['name']\"\n                  />\n\n                  <mat-hint *ngIf=\"form.controls['name'].dirty\">\n                      <span *ngIf=\"form.controls['name'].errors?.required\">\n                          {{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED' | translate }}\n                      </span>\n\n                      <span *ngIf=\"!form.controls['name'].errors?.required && form.controls['name'].errors?.message\">\n                          {{ form.controls['name'].errors?.message | translate }}\n                      </span>\n                  </mat-hint>\n              </mat-input-container>\n\n              <br />\n              <br />\n\n              <mat-input-container class=\"adf-full-width\">\n                  <textarea\n                      matInput\n                      placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL' | translate }}\"\n                      rows=\"4\"\n                      [formControl]=\"form.controls['description']\"></textarea>\n              </mat-input-container>\n          </form>\n      </mat-dialog-content>\n\n      <mat-dialog-actions class=\"adf-dialog-buttons\">\n          <span class=\"adf-fill-remaining-space\"></span>\n\n          <button\n              mat-button\n              mat-dialog-close>\n              {{ 'CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL' | translate }}\n          </button>\n\n          <button class=\"adf-dialog-action-button\"\n                  mat-button\n                  (click)=\"submit()\"\n                  [disabled]=\"!form.valid\">\n              {{\n              (editing\n              ? 'CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL'\n              : 'CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL'\n              ) | translate\n              }}\n          </button>\n      </mat-dialog-actions>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormBuilder, },\n{type: MatDialogRef, },\n{type: NodesApiService, },\n{type: TranslationService, },\n{type: NotificationService, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA, ] }, ]},\n];\n}\n\nfunction FolderDialogComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFolderDialogComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFolderDialogComponent.ctorParameters;\n/** @type {?} */\nFolderDialogComponent.prototype.form;\n/** @type {?} */\nFolderDialogComponent.prototype.folder;\n/** @type {?} */\nFolderDialogComponent.prototype.formBuilder;\n/** @type {?} */\nFolderDialogComponent.prototype.dialog;\n/** @type {?} */\nFolderDialogComponent.prototype.nodesApi;\n/** @type {?} */\nFolderDialogComponent.prototype.translation;\n/** @type {?} */\nFolderDialogComponent.prototype.notification;\n/** @type {?} */\nFolderDialogComponent.prototype.data;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { FormControl } from '@angular/forms';\n\nconst /** @type {?} */ I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const /** @type {?} */ specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const /** @type {?} */ isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function forbidEndingDot({ value }: FormControl) {\n    const /** @type {?} */ isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const /** @type {?} */ isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, MinimalNodeEntity } from 'alfresco-js-api';\nimport { LogService, AlfrescoApiService } from '@alfresco/adf-core';\nexport class DownloadZipDialogComponent implements OnInit {\nprivate cancelled = false;\n/**\n * @param {?} apiService\n * @param {?} dialogRef\n * @param {?} data\n * @param {?} logService\n */\nconstructor(private apiService: AlfrescoApiService,\nprivate dialogRef: MatDialogRef<DownloadZipDialogComponent>,\nprivate data: { nodeIds?: string[] },\nprivate logService: LogService) {\n    }\n/**\n * @return {?}\n */\nprivate get downloadsApi() {\n        return this.apiService.getInstance().core.downloadsApi;\n    }\n/**\n * @return {?}\n */\nprivate get nodesApi() {\n        return this.apiService.getInstance().core.nodesApi;\n    }\n/**\n * @return {?}\n */\nprivate get contentApi() {\n        return this.apiService.getInstance().content;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            // change timeout to have a delay for demo purposes\n            setTimeout(() => {\n                if (!this.cancelled) {\n                    this.downloadZip(this.data.nodeIds);\n                } else {\n                    this.logService.log('Cancelled');\n                }\n            }, 0);\n        }\n    }\n/**\n * @return {?}\n */\ncancelDownload() {\n        this.cancelled = true;\n        this.dialogRef.close(false);\n    }\n/**\n * @param {?} nodeIds\n * @return {?}\n */\ndownloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            const /** @type {?} */ promise: any = this.downloadsApi.createDownload({ nodeIds });\n\n            promise.on('progress', progress => this.logService.log('Progress', progress));\n            promise.on('error', error => this.logService.error('Error', error));\n            promise.on('abort', data => this.logService.log('Abort', data));\n\n            promise.on('success', (data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const /** @type {?} */ url = this.contentApi.getContentUrl(data.entry.id, true);\n                    // the call is needed only to get the name of the package\n                    this.nodesApi.getNode(data.entry.id).then((downloadNode: MinimalNodeEntity) => {\n                        this.logService.log(downloadNode);\n                        const /** @type {?} */ fileName = downloadNode.entry.name;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n/**\n * @param {?} downloadId\n * @param {?} url\n * @param {?} fileName\n * @return {?}\n */\nwaitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadsApi.getDownload(downloadId).then((d: DownloadEntry) => {\n            if (d.entry) {\n                if (d.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n/**\n * @param {?} url\n * @param {?} fileName\n * @return {?}\n */\ndownload(url: string, fileName: string) {\n        if (url && fileName) {\n            const /** @type {?} */ link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-download-zip-dialog',\n    template: `\n      <h1 matDialogTitle>{{ 'CORE.DIALOG.DOWNLOAD_ZIP.TITLE' | translate }}</h1>\n      <div mat-dialog-content>\n          <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div mat-dialog-actions>\n          <span class=\"spacer\"></span>\n          <button mat-button color=\"primary\" (click)=\"cancelDownload()\">\n              {{ 'CORE.DIALOG.DOWNLOAD_ZIP.ACTIONS.CANCEL' | translate }}\n          </button>\n      </div>\n    `,\n    styles: [`\n      .spacer {\n        -webkit-box-flex: 1;\n            -ms-flex: 1 1 auto;\n                flex: 1 1 auto; }\n\n      .adf-download-zip-dialog .mat-dialog-actions .mat-button-wrapper {\n        text-transform: uppercase; }\n    `],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: MatDialogRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA, ] }, ]},\n{type: LogService, },\n];\n}\n\nfunction DownloadZipDialogComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDownloadZipDialogComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDownloadZipDialogComponent.ctorParameters;\n/** @type {?} */\nDownloadZipDialogComponent.prototype.cancelled;\n/** @type {?} */\nDownloadZipDialogComponent.prototype.apiService;\n/** @type {?} */\nDownloadZipDialogComponent.prototype.dialogRef;\n/** @type {?} */\nDownloadZipDialogComponent.prototype.data;\n/** @type {?} */\nDownloadZipDialogComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { PaginationModule, ToolbarModule, DirectiveModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nexport class ContentNodeSelectorModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        DirectiveModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ToolbarModule,\n        DocumentListModule,\n        PaginationModule\n    ],\n    exports: [\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorComponent\n    ],\n    providers: [\n        ContentNodeSelectorService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ContentNodeSelectorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nContentNodeSelectorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentNodeSelectorModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nexport class VersionManagerModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        UploadModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ],\n    providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VersionManagerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVersionManagerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVersionManagerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { VersionsApi } from 'alfresco-js-api';\nexport class VersionListComponent implements OnChanges {\nprivate versionsApi: VersionsApi;\n    versions: any = [];\n    isLoading: boolean = true;\n\n    \n    id: string;\n/**\n * @param {?} alfrescoApi\n */\nconstructor(private alfrescoApi: AlfrescoApiService) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n/**\n * @return {?}\n */\nngOnChanges() {\n        this.loadVersionHistory();\n    }\n/**\n * @param {?} versionId\n * @return {?}\n */\nrestore(versionId) {\n        this.versionsApi\n            .revertVersion(this.id, versionId, { majorVersion: true, comment: ''})\n            .then(this.loadVersionHistory.bind(this));\n    }\n/**\n * @return {?}\n */\nprivate loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.id).then((data) => {\n            this.versions = data.list.entries;\n            this.isLoading = false;\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-version-list',\n    template: `\n      <mat-list class=\"adf-version-list\" *ngIf=\"!isLoading; else loading_template\">\n          <mat-list-item *ngFor=\"let version of versions\">\n              <mat-icon mat-list-icon>insert_drive_file</mat-icon>\n              <h4 mat-line class=\"adf-version-list-item-name\">{{version.entry.name}}</h4>\n              <p mat-line>\n                  <span class=\"adf-version-list-item-version\">{{version.entry.id}}</span> -\n                  <span class=\"adf-version-list-item-date\">{{version.entry.modifiedAt | date}}</span>\n              </p>\n              <p mat-line class=\"adf-version-list-item-comment\">{{version.entry.versionComment}}</p>\n\n              <mat-menu #versionMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                  <button mat-menu-item (click)=\"restore(version.entry.id)\"> Restore </button>\n              </mat-menu>\n\n              <button mat-icon-button [matMenuTriggerFor]=\"versionMenu\">\n                  <mat-icon>more_vert</mat-icon>\n              </button>\n          </mat-list-item>\n      </mat-list>\n\n      <ng-template #loading_template>\n          <mat-progress-bar data-automation-id=\"version-history-loading-bar\" mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\n      </ng-template>\n    `,\n    styles: [`\n      .adf-version-list .mat-list-item {\n        border-bottom: 1px solid #d8d8d8; }\n\n      .adf-version-list-item-version {\n        font-weight: bold; }\n\n      .adf-version-list-item-date {\n        opacity: 0.6; }\n\n      .adf-version-list-item-comment {\n        opacity: 0.5; }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\nfunction VersionListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVersionListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVersionListComponent.ctorParameters;\n/** @type {?} */\nVersionListComponent.propDecorators;\n/** @type {?} */\nVersionListComponent.prototype.versionsApi;\n/** @type {?} */\nVersionListComponent.prototype.versions;\n/** @type {?} */\nVersionListComponent.prototype.isLoading;\n/** @type {?} */\nVersionListComponent.prototype.id;\n/** @type {?} */\nVersionListComponent.prototype.alfrescoApi;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nexport class VersionManagerComponent {\n\n    \n    node: MinimalNodeEntryEntity;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-version-manager',\n    template: `\n      <div class=\"adf-new-version-uploader-container\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <adf-version-upload [node]=\"node\"></adf-version-upload>\n      </div>\n      <div class=\"adf-version-list-container\">\n          <adf-version-list [id]=\"node.id\"></adf-version-list>\n      </div>\n    `,\n    styles: [`\n      .adf-button.upload-new-version {\n        -webkit-box-shadow: none;\n                box-shadow: none; }\n\n      .adf-new-version-uploader-container {\n        border-bottom: 1px solid #d8d8d8;\n        padding: 16px 0; }\n    `],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'node': [{ type: Input },],\n};\n}\n\nfunction VersionManagerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVersionManagerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVersionManagerComponent.ctorParameters;\n/** @type {?} */\nVersionManagerComponent.propDecorators;\n/** @type {?} */\nVersionManagerComponent.prototype.node;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nexport class VersionUploadComponent {\n\n    \n    node: MinimalNodeEntryEntity;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-version-upload',\n    template: `\n      <adf-upload-button\n          data-automation-id=\"adf-new-version-file-upload\"\n          class=\"adf-new-version-file-upload\"\n          staticTitle=\"Upload new version\"\n          [rootFolderId]=\"node.parentId\"\n          tooltip=\"Restriction: upload file with the same name to create a new version of it\"\n          [versioning]=\"true\">\n      </adf-upload-button>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-upload'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'node': [{ type: Input },],\n};\n}\n\nfunction VersionUploadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVersionUploadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVersionUploadComponent.ctorParameters;\n/** @type {?} */\nVersionUploadComponent.propDecorators;\n/** @type {?} */\nVersionUploadComponent.prototype.node;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nexport class BreadcrumbModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity } from 'alfresco-js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    \n    selectbox: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this.recalculateNodes();\n    }\n/**\n * Calculate the current and previous nodes from the route array\n * @return {?}\n */\nprivate recalculateNodes(): void {\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n/**\n * Opens the selectbox overlay\n * @return {?}\n */\nopen(): void {\n        if (this.selectbox) {\n            this.selectbox.open();\n        }\n    }\n/**\n * Return if route has more than one element (means: we are not in the root directory)\n * @return {?}\n */\nhasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-dropdown-breadcrumb',\n    template: `\n      <ng-container *ngIf=\"route.length > 0\">\n\n          <button\n              tabindex=\"0\"\n              class=\"adf-dropdown-breadcumb-trigger\"\n              (click)=\"open()\"\n              data-automation-id=\"dropdown-breadcrumb-trigger\">\n              <mat-icon [class.isRoot]=\"!hasPreviousNodes()\">folder</mat-icon>\n          </button>\n          <mat-icon class=\"adf-dropddown-breadcrumb-item-chevron\">chevron_right</mat-icon>\n\n          <mat-select\n              *ngIf=\"hasPreviousNodes()\"\n              class=\"adf-dropdown-breadcrumb-path\"\n              tabindex=\"0\"\n              data-automation-id=\"dropdown-breadcrumb-path\" >\n\n              <mat-option\n                  *ngFor=\"let node of previousNodes;\"\n                  (click)=\"onRoutePathClick(node, $event)\"\n                  class=\"adf-dropdown-breadcrumb-path-option\"\n                  tabindex=\"0\"\n                  data-automation-class=\"dropdown-breadcrumb-path-option\">\n                  {{ node.name }}\n              </mat-option>\n          </mat-select>\n\n          <span\n              class=\"adf-current-folder\"\n              [class.isRoot]=\"!hasPreviousNodes()\"\n              data-automation-id=\"current-folder\">{{ currentNode.name }}</span>\n      </ng-container>\n    `,\n    styles: [`\n\n    `],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectbox': [{ type: ViewChild, args: [MatSelect, ] },],\n};\n}\n\nfunction DropdownBreadcrumbComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownBreadcrumbComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownBreadcrumbComponent.ctorParameters;\n/** @type {?} */\nDropdownBreadcrumbComponent.propDecorators;\n/** @type {?} */\nDropdownBreadcrumbComponent.prototype.selectbox;\n/** @type {?} */\nDropdownBreadcrumbComponent.prototype.currentNode;\n/** @type {?} */\nDropdownBreadcrumbComponent.prototype.previousNodes;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list';\nexport class BreadcrumbComponent implements OnChanges {\n\n    \n    folderNode: MinimalNodeEntryEntity = null;\n\n    \n    root: string = null;\n\n    \n    rootId: string = null;\n\n    \n    target: DocumentListComponent;\n\n    route: PathElementEntity[] = [];\n/**\n * @return {?}\n */\nget hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    \n    navigate: EventEmitter<PathElementEntity> = new EventEmitter<PathElementEntity>();\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            const /** @type {?} */ node: MinimalNodeEntryEntity = changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nparseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const /** @type {?} */ route = /** @type {?} */(( <PathElementEntity[]> (node.path.elements || []).slice()));\n\n            route.push( /** @type {?} */((<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            })));\n\n            const /** @type {?} */ rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n/**\n * @param {?} route\n * @param {?} nodeId\n * @return {?}\n */\nprivate getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let /** @type {?} */ result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n/**\n * @param {?} route\n * @param {?=} event\n * @return {?}\n */\nonRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.loadFolderByNodeId(route.id);\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-breadcrumb',\n    template: `\n      <div *ngIf=\"folderNode\" data-automation-id=\"breadcrumb\" class=\"adf-breadcrumb-container\">\n          <li *ngFor=\"let item of route; let last = last\"\n              [class.active]=\"last\"\n              [ngSwitch]=\"last\"\n              title=\"{{ item.name | translate }}\"\n              class=\"adf-breadcrumb-item\">\n\n              <a *ngSwitchDefault href=\"#\" [attr.data-automation-id]=\"'breadcrumb_' + item.name\"\n                 class=\"adf-breadcrumb-item-anchor\"\n                 (click)=\"onRoutePathClick(item, $event)\">\n                  {{ item.name | translate }}\n              </a>\n\n              <div *ngSwitchCase=\"true\" class=\"adf-breadcrumb-item-current\">\n                  {{ item.name | translate }}\n              </div>\n\n              <mat-icon class=\"adf-breadcrumb-item-chevron\" *ngIf=\"!last\">\n                  chevron_right\n              </mat-icon>\n          </li>\n      </div>\n      <div *ngIf=\"!folderNode && hasRoot\">\n          <li class=\"adf-breadcrumb-item\">\n              <div class=\"adf-breadcrumb-item-current\">\n                  {{ root | translate }}\n              </div>\n          </li>\n      </div>\n    `,\n    styles: [`\n\n    `],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'folderNode': [{ type: Input },],\n'root': [{ type: Input },],\n'rootId': [{ type: Input },],\n'target': [{ type: Input },],\n'navigate': [{ type: Output },],\n};\n}\n\nfunction BreadcrumbComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbComponent.propDecorators;\n/** @type {?} */\nBreadcrumbComponent.prototype.folderNode;\n/** @type {?} */\nBreadcrumbComponent.prototype.root;\n/** @type {?} */\nBreadcrumbComponent.prototype.rootId;\n/** @type {?} */\nBreadcrumbComponent.prototype.target;\n/** @type {?} */\nBreadcrumbComponent.prototype.route;\n/** @type {?} */\nBreadcrumbComponent.prototype.navigate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nexport class SitesDropdownModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ],\n    providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SitesDropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSitesDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSitesDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { SiteModel, SitesService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nexport class DropdownSitesComponent implements OnInit {\n\n    \n    hideMyFiles: boolean = false;\n\n    \n    siteList: any[] = null;\n\n    \n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    \n    change: EventEmitter<SiteModel> = new EventEmitter();\npublic MY_FILES_VALUE = 'default';\npublic siteSelected: string;\n/**\n * @param {?} sitesService\n */\nconstructor(private sitesService: SitesService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.siteList) {\n            this.setDefaultSiteList();\n        }\n    }\n/**\n * @return {?}\n */\nselectedSite() {\n        let /** @type {?} */ siteFound;\n        if (this.siteSelected === this.MY_FILES_VALUE) {\n            siteFound = new SiteModel();\n        }else {\n           siteFound = this.siteList.find( site => site.guid === this.siteSelected);\n        }\n        this.change.emit(siteFound);\n    }\n/**\n * @return {?}\n */\nsetDefaultSiteList() {\n        this.siteList = [];\n        this.sitesService.getSites().subscribe((result) => {\n                this.siteList = result;\n            },\n            (error) => {});\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-sites-dropdown',\n    styles: [`\n\n    `],\n    template: `\n      <div id=\"site-dropdown-container\" class=\"adf-site-dropdown-container\">\n          <mat-form-field>\n              <mat-select\n                  class=\"adf-site-dropdown-list-element\"\n                  id=\"site-dropdown\"\n                  placeholder=\"{{placeholder | translate}}\"\n                  floatPlaceholder=\"never\"\n                  data-automation-id=\"site-my-files-select\"\n                  [(ngModel)]=\"siteSelected\"\n                  (ngModelChange)=\"selectedSite()\">\n                  <mat-option *ngIf=\"!hideMyFiles\" data-automation-id=\"site-my-files-option\" id=\"default_site_option\" [value]=\"MY_FILES_VALUE\">{{'DROPDOWN.MY_FILES_OPTION' | translate}}</mat-option>\n                  <mat-option *ngFor=\"let site of siteList\" [value]=\"site.guid\">\n                      {{ site.title | translate }}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SitesService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hideMyFiles': [{ type: Input },],\n'siteList': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'change': [{ type: Output },],\n};\n}\n\nfunction DropdownSitesComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownSitesComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownSitesComponent.ctorParameters;\n/** @type {?} */\nDropdownSitesComponent.propDecorators;\n/** @type {?} */\nDropdownSitesComponent.prototype.hideMyFiles;\n/** @type {?} */\nDropdownSitesComponent.prototype.siteList;\n/** @type {?} */\nDropdownSitesComponent.prototype.placeholder;\n/** @type {?} */\nDropdownSitesComponent.prototype.change;\n/** @type {?} */\nDropdownSitesComponent.prototype.MY_FILES_VALUE;\n/** @type {?} */\nDropdownSitesComponent.prototype.siteSelected;\n/** @type {?} */\nDropdownSitesComponent.prototype.sitesService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { PipeModule, SearchService } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\n\nexport const /** @type {?} */ ALFRESCO_SEARCH_DIRECTIVES: [any] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective\n];\n\nexport const /** @type {?} */ ALFRESCO_SEARCH_PROVIDERS: [any] = [\n    SearchService\n];\nexport class SearchModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        PipeModule,\n        TranslateModule\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES\n    ],\n    providers: [\n        ...ALFRESCO_SEARCH_PROVIDERS\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef } from '@angular/core';\nimport { MinimalNodeEntity, QueryBody } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    \n    expandable: boolean = true;\n\n    \n    highlight: boolean = false;\n\n    \n    inputType: string = 'text';\n\n    \n    autocomplete: boolean = false;\n\n    \n    liveSearchEnabled: boolean = true;\n\n    \n    liveSearchMaxResults: number = 5;\n\n    \n    customQueryBody: QueryBody;\n\n    \n    submit: EventEmitter<any> = new EventEmitter();\n\n    \n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    \n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    \n    searchAutocomplete: SearchComponent;\n\n    \n    searchInput: ElementRef;\nprivate listResultElement: QueryList<MatListItem>;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\nprivate toggleSearch = new Subject<any>();\nprivate focusSubject = new Subject<FocusEvent>();\n/**\n * @param {?} authService\n * @param {?} thumbnailService\n */\nconstructor(public authService: AuthenticationService,\nprivate thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().debounceTime(100).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n/**\n * @param {?} animationDoneEvent\n * @return {?}\n */\napplySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.unsubscribe();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.unsubscribe();\n            this.toggleSearch = null;\n        }\n    }\n/**\n * @return {?}\n */\nisLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsearchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n/**\n * @return {?}\n */\ngetAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n/**\n * @param {?} node\n * @return {?}\n */\ngetMimeTypeIcon(node: MinimalNodeEntity): string {\n        let /** @type {?} */ mimeType;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n/**\n * @return {?}\n */\nisSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n/**\n * @return {?}\n */\ntoggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nelementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonFocus($event): void {\n        this.focusSubject.next($event);\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonBlur($event): void {\n        this.focusSubject.next($event);\n    }\n/**\n * @return {?}\n */\nactivateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n/**\n * @return {?}\n */\nselectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            let /** @type {?} */ firstElement: MatListItem = /** @type {?} */(( <MatListItem> this.listResultElement.first));\n            firstElement._getHostElement().focus();\n        }\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonRowArrowDown($event: KeyboardEvent): void {\n        let /** @type {?} */ nextElement: any = this.getNextElementSibling( /** @type {?} */((<Element> $event.target)));\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonRowArrowUp($event: KeyboardEvent): void {\n        let /** @type {?} */ previousElement: any = this.getPreviousElementSibling( /** @type {?} */((<Element> $event.target)));\n        if (previousElement) {\n            previousElement.focus();\n        }else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n/**\n * @return {?}\n */\nprivate setupFocusEventHandlers() {\n        let /** @type {?} */ focusEvents: Observable<FocusEvent> = this.focusSubject.asObservable()\n            .debounceTime(50);\n        focusEvents.filter(($event: any) => {\n            return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n        }).subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-search-control',\n    template: `\n      <div class=\"adf-search-container\">\n          <div *ngIf=\"isLoggedIn()\" [@transitionMessages]=\"subscriptAnimationState\" (@transitionMessages.done)=\"applySearchFocus($event)\">\n              <a mat-icon-button\n                  *ngIf=\"expandable\"\n                  id=\"adf-search-button\"\n                  class=\"adf-search-button\"\n                  (click)=\"toggleSearchBar($event)\"\n                  (keyup.enter)=\"toggleSearchBar($event)\">\n                  <mat-icon aria-label=\"search button\">search</mat-icon>\n              </a>\n              <mat-form-field class=\"adf-input-form-field-divider\">\n                  <input matInput #searchInput\n                      [type]=\"inputType\"\n                      [autocomplete]=\"getAutoComplete()\"\n                      id=\"adf-control-input\"\n                      [(ngModel)]=\"searchTerm\"\n                      (focus)=\"activateToolbar($event)\"\n                      (blur)=\"onBlur($event)\"\n                      (keyup.escape)=\"toggleSearchBar()\"\n                      (keyup.arrowdown)=\"selectFirstResult()\"\n                      (ngModelChange)=\"inputChange($event)\"\n                      [searchAutocomplete]=\"auto\"\n                      (keyup.enter)=\"searchSubmit($event)\">\n              </mat-form-field>\n          </div>\n      </div>\n\n      <adf-search #auto=\"searchAutocomplete\"\n                  class=\"adf-search-result-autocomplete\"\n                  [queryBody]=\"customQueryBody\"\n                  [maxResults]=\"liveSearchMaxResults\">\n          <ng-template let-data>\n              <mat-list *ngIf=\"isSearchBarActive()\" id=\"autocomplete-search-result-list\">\n                  <mat-list-item\n                      *ngFor=\"let item of data?.list?.entries; let idx = index\"\n                      id=\"result_option_{{idx}}\"\n                      [tabindex]=\"0\"\n                      (focus)=\"onFocus($event)\"\n                      (blur)=\"onBlur($event)\"\n                      (keyup.arrowdown)=\"onRowArrowDown($event)\"\n                      (keyup.arrowup)=\"onRowArrowUp($event)\"\n                      class=\"adf-search-autocomplete-item\"\n                      (click)=\"elementClicked(item)\"\n                      (keyup.enter)=\"elementClicked(item)\">\n                      <mat-icon mat-list-icon>\n                          <img [src]=\"getMimeTypeIcon(item)\" />\n                      </mat-icon>\n                      <h4 mat-line id=\"result_name_{{idx}}\"\n                          *ngIf=\"highlight; else elseBlock\"\n                          class=\"adf-search-fixed-text\"\n                          [innerHtml]=\"item.entry.name | highlight: searchTerm\">\n                          {{ item?.entry.name }}\n                      </h4>\n                      <ng-template #elseBlock>\n                          <h4 class=\"adf-search-fixed-text\" mat-line id=\"result_name_{{idx}}\" [innerHtml]=\"item.entry.name\"></h4>\n                      </ng-template>\n                      <p mat-line class=\"adf-search-fixed-text\"> {{item?.entry.createdByUser.displayName}} </p>\n                  </mat-list-item>\n                  <mat-list-item\n                      id=\"search_no_result\"\n                      data-automation-id=\"search_no_result_found\"\n                      *ngIf=\"data?.list?.entries.length === 0\">\n                      <p mat-line class=\"adf-search-fixed-text\">{{ 'SEARCH.RESULTS.NONE' | translate:{searchTerm: searchTerm} }}</p>\n                  </mat-list-item>\n              </mat-list>\n          </ng-template>\n      </adf-search>\n    `,\n    styles: [`\n\n    `],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(81%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthenticationService, },\n{type: ThumbnailService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expandable': [{ type: Input },],\n'highlight': [{ type: Input },],\n'inputType': [{ type: Input },],\n'autocomplete': [{ type: Input },],\n'liveSearchEnabled': [{ type: Input },],\n'liveSearchMaxResults': [{ type: Input },],\n'customQueryBody': [{ type: Input },],\n'submit': [{ type: Output },],\n'searchChange': [{ type: Output },],\n'optionClicked': [{ type: Output },],\n'searchAutocomplete': [{ type: ViewChild, args: [SearchComponent, ] },],\n'searchInput': [{ type: ViewChild, args: ['searchInput', ] },],\n'listResultElement': [{ type: ViewChildren, args: [MatListItem, ] },],\n};\n}\n\nfunction SearchControlComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchControlComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchControlComponent.ctorParameters;\n/** @type {?} */\nSearchControlComponent.propDecorators;\n/** @type {?} */\nSearchControlComponent.prototype.expandable;\n/** @type {?} */\nSearchControlComponent.prototype.highlight;\n/** @type {?} */\nSearchControlComponent.prototype.inputType;\n/** @type {?} */\nSearchControlComponent.prototype.autocomplete;\n/** @type {?} */\nSearchControlComponent.prototype.liveSearchEnabled;\n/** @type {?} */\nSearchControlComponent.prototype.liveSearchMaxResults;\n/** @type {?} */\nSearchControlComponent.prototype.customQueryBody;\n/** @type {?} */\nSearchControlComponent.prototype.submit;\n/** @type {?} */\nSearchControlComponent.prototype.searchChange;\n/** @type {?} */\nSearchControlComponent.prototype.optionClicked;\n/** @type {?} */\nSearchControlComponent.prototype.searchAutocomplete;\n/** @type {?} */\nSearchControlComponent.prototype.searchInput;\n/** @type {?} */\nSearchControlComponent.prototype.listResultElement;\n/** @type {?} */\nSearchControlComponent.prototype.searchTerm;\n/** @type {?} */\nSearchControlComponent.prototype.subscriptAnimationState;\n/** @type {?} */\nSearchControlComponent.prototype.toggleSearch;\n/** @type {?} */\nSearchControlComponent.prototype.focusSubject;\n/** @type {?} */\nSearchControlComponent.prototype.authService;\n/** @type {?} */\nSearchControlComponent.prototype.thumbnailService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging, QueryBody } from 'alfresco-js-api';\nimport { Subject } from 'rxjs/Subject';\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    \n    panel: ElementRef;\n\n    \n    template: TemplateRef<any>;\n\n    \n    displayWith: ((value: any) => string) | null = null;\n\n    \n    maxResults: number = 20;\n\n    \n    skipResults: number = 0;\n\n    \n    searchTerm: string = '';\n\n    \n    queryBody: QueryBody;\n/**\n * @param {?} classList\n * @return {?}\n */\nset classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach(className => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    \n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    \n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n/**\n * @return {?}\n */\nget isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n/**\n * @param {?} searchService\n * @param {?} changeDetectorRef\n * @param {?} _elementRef\n */\nconstructor(private searchService: SearchService,\nprivate changeDetectorRef: ChangeDetectorRef,\nprivate _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .debounceTime(200)\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.setVisibility();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes) {\n        this.resetResults();\n\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        } else if (changes.queryBody && changes.queryBody.currentValue) {\n            this.loadSearchResults();\n        } else {\n            this.loadSearchResults(this.searchTerm);\n        }\n    }\n/**\n * @return {?}\n */\nresetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n/**\n * @return {?}\n */\nreload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n/**\n * @return {?}\n */\nprivate cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n/**\n * @param {?} searchOpts\n * @return {?}\n */\nprivate hasValidSearchQuery(searchOpts: QueryBody) {\n        return searchOpts && searchOpts.query && searchOpts.query.query;\n    }\n/**\n * @param {?=} searchTerm\n * @return {?}\n */\nprivate loadSearchResults(searchTerm?: string) {\n        let /** @type {?} */ searchOpts: QueryBody = this.getQueryBody(searchTerm);\n\n        if (this.hasValidSearchQuery(searchOpts)) {\n            this.searchService\n                .search(searchOpts)\n                .subscribe(\n                    results => {\n                        this.results = /** @type {?} */(( <NodePaging> results));\n                        this.resultLoaded.emit(this.results);\n                        this.isOpen = true;\n                        this.setVisibility();\n                    },\n                    error => {\n                        if (error.status !== 400) {\n                            this.results = null;\n                            this.error.emit(error);\n                        }\n                    });\n        } else {\n            this.cleanResults();\n        }\n    }\n/**\n * @param {?} searchTerm\n * @return {?}\n */\nprivate getQueryBody(searchTerm: string): QueryBody {\n        if (this.queryBody) {\n            if (!this.queryBody.query.query && searchTerm) {\n                this.queryBody.query.query = searchTerm;\n            }\n            return this.queryBody;\n        } else {\n            return this.generateDefaultSearchNode(searchTerm);\n        }\n    }\n/**\n * @param {?} searchTerm\n * @return {?}\n */\nprivate generateDefaultSearchNode(searchTerm: string): QueryBody {\n        let /** @type {?} */ defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `${searchTerm}* OR name:${searchTerm}*` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: this.maxResults.toString(),\n                skipCount: this.skipResults.toString()\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n/**\n * @return {?}\n */\nhidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n/**\n * @return {?}\n */\nsetVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n        this.changeDetectorRef.markForCheck();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-search',\n    template: `\n      <div role=\"listbox\" id=\"adf-search-results-content\" [ngClass]=\"_classList\" #panel>\n          <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{ $implicit: results }\">\n          </ng-template>\n      </div>\n    `,\n    styles: [`\n\n    `],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchService, },\n{type: ChangeDetectorRef, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n'displayWith': [{ type: Input },],\n'maxResults': [{ type: Input },],\n'skipResults': [{ type: Input },],\n'searchTerm': [{ type: Input },],\n'queryBody': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'resultLoaded': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction SearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchComponent.ctorParameters;\n/** @type {?} */\nSearchComponent.propDecorators;\n/** @type {?} */\nSearchComponent.prototype.panel;\n/** @type {?} */\nSearchComponent.prototype.template;\n/** @type {?} */\nSearchComponent.prototype.displayWith;\n/** @type {?} */\nSearchComponent.prototype.maxResults;\n/** @type {?} */\nSearchComponent.prototype.skipResults;\n/** @type {?} */\nSearchComponent.prototype.searchTerm;\n/** @type {?} */\nSearchComponent.prototype.queryBody;\n/** @type {?} */\nSearchComponent.prototype.resultLoaded;\n/** @type {?} */\nSearchComponent.prototype.error;\n/** @type {?} */\nSearchComponent.prototype.showPanel;\n/** @type {?} */\nSearchComponent.prototype.results;\n/** @type {?} */\nSearchComponent.prototype._isOpen;\n/** @type {?} */\nSearchComponent.prototype.keyPressedStream;\n/** @type {?} */\nSearchComponent.prototype._classList;\n/** @type {?} */\nSearchComponent.prototype.searchService;\n/** @type {?} */\nSearchComponent.prototype.changeDetectorRef;\n/** @type {?} */\nSearchComponent.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchComponent } from './search.component';\n\nexport const /** @type {?} */ SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n\n    \n    searchPanel: SearchComponent;\nprivate _panelOpen: boolean = false;\nprivate closingActionsSubscription: Subscription;\nprivate escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n/**\n * @param {?} element\n * @param {?} ngZone\n * @param {?} changeDetectorRef\n * @param {?} document\n */\nconstructor(private element: ElementRef,\nprivate ngZone: NgZone,\nprivate changeDetectorRef: ChangeDetectorRef,\nprivate document: any) { }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.escapeEventStream) {\n            this.escapeEventStream.unsubscribe();\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n/**\n * @return {?}\n */\nopenPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n/**\n * @return {?}\n */\nclosePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n/**\n * @return {?}\n */\nget panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n/**\n * @return {?}\n */\nprivate get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return Observable.of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).filter((event: MouseEvent | TouchEvent) => {\n            const /** @type {?} */ clickTarget = /** @type {?} */(( event.target as HTMLElement));\n            return this._panelOpen &&\n                clickTarget !== this.element.nativeElement;\n        });\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeydown(event: KeyboardEvent): void {\n        const /** @type {?} */ keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            let /** @type {?} */ inputValue: string = ( /** @type {?} */((event.target as HTMLInputElement))).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate isPanelOptionClicked(event: MouseEvent) {\n        let /** @type {?} */ isPanelOption: boolean = false;\n        if ( event ) {\n            let /** @type {?} */ clickTarget = /** @type {?} */(( event.target as HTMLElement));\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n/**\n * @return {?}\n */\nprivate subscribeToClosingActions(): Subscription {\n        const /** @type {?} */ firstStable = this.ngZone.onStable.asObservable();\n        const /** @type {?} */ optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .switchMap(() => {\n                this.searchPanel.setVisibility();\n                return this.panelClosingActions;\n            })\n            .subscribe(event => this.setValueAndClose(event));\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate setTriggerValue(value: any): void {\n        const /** @type {?} */ toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const /** @type {?} */ inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event)) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        'autocomplete': 'off',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '[attr.aria-owns]': 'autocomplete?.id',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchPanel': [{ type: Input, args: ['searchAutocomplete', ] },],\n};\n}\n\nfunction SearchTriggerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTriggerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTriggerDirective.ctorParameters;\n/** @type {?} */\nSearchTriggerDirective.propDecorators;\n/** @type {?} */\nSearchTriggerDirective.prototype.searchPanel;\n/** @type {?} */\nSearchTriggerDirective.prototype._panelOpen;\n/** @type {?} */\nSearchTriggerDirective.prototype.closingActionsSubscription;\n/** @type {?} */\nSearchTriggerDirective.prototype.escapeEventStream;\n/** @type {?} */\nSearchTriggerDirective.prototype.onChange;\n/** @type {?} */\nSearchTriggerDirective.prototype.onTouched;\n/** @type {?} */\nSearchTriggerDirective.prototype.element;\n/** @type {?} */\nSearchTriggerDirective.prototype.ngZone;\n/** @type {?} */\nSearchTriggerDirective.prototype.changeDetectorRef;\n/** @type {?} */\nSearchTriggerDirective.prototype.document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule, PaginationModule, ToolbarModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { EmptyFolderContentDirective } from './components/empty-folder/empty-folder-content.directive';\nimport { NoPermissionContentDirective } from './components/no-permission/no-permission-content.directive';\n\nimport { DocumentActionsService } from './services/document-actions.service';\nimport { DocumentListService } from './services/document-list.service';\nimport { FolderActionsService } from './services/folder-actions.service';\nimport { NodeActionsService } from './services/node-actions.service';\nexport class DocumentListModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ToolbarModule,\n        CommonModule,\n        DataTableModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule,\n        TranslateModule,\n        PaginationModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ],\n    providers: [\n        DocumentListService,\n        FolderActionsService,\n        DocumentActionsService,\n        NodeActionsService\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DocumentListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDocumentListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDocumentListModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    \n    template: any;\n/**\n * @param {?} documentList\n */\nconstructor(private documentList: DocumentListComponent) {\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'no-permission-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentListComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction NoPermissionContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNoPermissionContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoPermissionContentDirective.ctorParameters;\n/** @type {?} */\nNoPermissionContentDirective.propDecorators;\n/** @type {?} */\nNoPermissionContentDirective.prototype.template;\n/** @type {?} */\nNoPermissionContentDirective.prototype.documentList;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    \n    template: any;\n/**\n * @param {?} documentList\n */\nconstructor(private documentList: DocumentListComponent) {\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'empty-folder-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentListComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction EmptyFolderContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEmptyFolderContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEmptyFolderContentDirective.ctorParameters;\n/** @type {?} */\nEmptyFolderContentDirective.propDecorators;\n/** @type {?} */\nEmptyFolderContentDirective.prototype.template;\n/** @type {?} */\nEmptyFolderContentDirective.prototype.documentList;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    \n    key: string;\n\n    \n    type: string = 'text';\n\n    \n    format: string;\n\n    \n    sortable: boolean = false;\n\n    \n    title: string = '';\n\n    \n    template: any;\n/**\n * Title to be used for screen readers.\n */\nsrTitle: string;\n\n    \n    cssClass: string;\n/**\n * @param {?} list\n * @param {?} logService\n */\nconstructor(private list: ContentColumnListComponent,\nprivate logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.register();\n    }\n/**\n * @return {?}\n */\nregister(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'content-column',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentColumnListComponent, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'key': [{ type: Input },],\n'type': [{ type: Input },],\n'format': [{ type: Input },],\n'sortable': [{ type: Input },],\n'title': [{ type: Input },],\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n'srTitle': [{ type: Input, args: ['sr-title', ] },],\n'cssClass': [{ type: Input, args: ['class', ] },],\n};\n}\n\nfunction ContentColumnComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentColumnComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentColumnComponent.ctorParameters;\n/** @type {?} */\nContentColumnComponent.propDecorators;\n/** @type {?} */\nContentColumnComponent.prototype.key;\n/** @type {?} */\nContentColumnComponent.prototype.type;\n/** @type {?} */\nContentColumnComponent.prototype.format;\n/** @type {?} */\nContentColumnComponent.prototype.sortable;\n/** @type {?} */\nContentColumnComponent.prototype.title;\n/** @type {?} */\nContentColumnComponent.prototype.template;\n/**\n * Title to be used for screen readers.\n * @type {?}\n */\nContentColumnComponent.prototype.srTitle;\n/** @type {?} */\nContentColumnComponent.prototype.cssClass;\n/** @type {?} */\nContentColumnComponent.prototype.list;\n/** @type {?} */\nContentColumnComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\nexport class ContentColumnListComponent {\n/**\n * @param {?} documentList\n * @param {?} logService\n */\nconstructor(private documentList: DocumentListComponent,\nprivate logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n/**\n * Registers column model within the parent document list component.\n * @param {?} column Column definition model to register.\n * @return {?}\n */\nregisterColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let /** @type {?} */ columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'content-columns',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentListComponent, },\n{type: LogService, },\n];\n}\n\nfunction ContentColumnListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentColumnListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentColumnListComponent.ctorParameters;\n/** @type {?} */\nContentColumnListComponent.prototype.documentList;\n/** @type {?} */\nContentColumnListComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nexport class ContentActionComponent implements OnInit, OnChanges {\n\n    \n    title: string = 'Action';\n\n    \n    icon: string;\n\n    \n    handler: string;\n\n    \n    target: string;\n\n    \n    permission: string;\n\n    \n    disableWithNoPermission: boolean;\n\n    \n    disabled: boolean = false;\n\n    \n    execute = new EventEmitter();\n\n    \n    permissionEvent = new EventEmitter();\n\n    \n    error = new EventEmitter();\n\n    \n    success = new EventEmitter();\n\n    model: ContentActionModel;\n/**\n * @param {?} list\n * @param {?} documentActions\n * @param {?} folderActions\n */\nconstructor(\nprivate list: ContentActionListComponent,\nprivate documentActions: DocumentActionsService,\nprivate folderActions: FolderActionsService) {\n        this.model = new ContentActionModel();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: this.target,\n            disabled: this.disabled\n        });\n\n        if (this.handler) {\n            this.model.handler = this.getSystemHandler(this.target, this.handler);\n        }\n\n        if (this.execute) {\n            this.model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register();\n    }\n/**\n * @return {?}\n */\nregister(): boolean {\n        if (this.list) {\n            return this.list.registerAction(this.model);\n        }\n        return false;\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes) {\n        // update localizable properties\n        this.model.title = this.title;\n    }\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\ngetSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            let /** @type {?} */ ltarget = target.toLowerCase();\n\n            if (ltarget === 'document') {\n                if (this.documentActions) {\n                    this.documentActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.documentActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.documentActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (ltarget === 'folder') {\n                if (this.folderActions) {\n                    this.folderActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.folderActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.folderActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentActionListComponent, },\n{type: DocumentActionsService, },\n{type: FolderActionsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input },],\n'icon': [{ type: Input },],\n'handler': [{ type: Input },],\n'target': [{ type: Input },],\n'permission': [{ type: Input },],\n'disableWithNoPermission': [{ type: Input },],\n'disabled': [{ type: Input },],\n'execute': [{ type: Output },],\n'permissionEvent': [{ type: Output },],\n'error': [{ type: Output },],\n'success': [{ type: Output },],\n};\n}\n\nfunction ContentActionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentActionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentActionComponent.ctorParameters;\n/** @type {?} */\nContentActionComponent.propDecorators;\n/** @type {?} */\nContentActionComponent.prototype.title;\n/** @type {?} */\nContentActionComponent.prototype.icon;\n/** @type {?} */\nContentActionComponent.prototype.handler;\n/** @type {?} */\nContentActionComponent.prototype.target;\n/** @type {?} */\nContentActionComponent.prototype.permission;\n/** @type {?} */\nContentActionComponent.prototype.disableWithNoPermission;\n/** @type {?} */\nContentActionComponent.prototype.disabled;\n/** @type {?} */\nContentActionComponent.prototype.execute;\n/** @type {?} */\nContentActionComponent.prototype.permissionEvent;\n/** @type {?} */\nContentActionComponent.prototype.error;\n/** @type {?} */\nContentActionComponent.prototype.success;\n/** @type {?} */\nContentActionComponent.prototype.model;\n/** @type {?} */\nContentActionComponent.prototype.list;\n/** @type {?} */\nContentActionComponent.prototype.documentActions;\n/** @type {?} */\nContentActionComponent.prototype.folderActions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport'rxjs/add/observable/throw';\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\nprivate handlers: { [id: string]: ContentActionHandler; } = {};\n/**\n * @param {?} nodeActionsService\n * @param {?} documentListService\n * @param {?} contentService\n */\nconstructor(private nodeActionsService: NodeActionsService,\nprivate documentListService: DocumentListService,\nprivate contentService: ContentService) {\n        this.setupActionHandlers();\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ngetHandler(key: string): ContentActionHandler {\n        if (key) {\n            let /** @type {?} */ lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} handler\n * @return {?}\n */\nsetHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let /** @type {?} */ lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\ncanExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n/**\n * @return {?}\n */\nprivate setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n/**\n * @param {?} obj\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const /** @type {?} */ actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n/**\n * @param {?} obj\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const /** @type {?} */ actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n/**\n * @param {?} actionObservable\n * @param {?} type\n * @param {?} action\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n/**\n * @param {?} obj\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate deleteNode(obj: any, target?: any, permission?: string): Observable<any> {\n        let /** @type {?} */ handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(obj)) {\n            if (this.contentService.hasPermission(obj.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(obj.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(obj.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NodeActionsService, },\n{type: DocumentListService, },\n{type: ContentService, },\n];\n}\n\nfunction FolderActionsService_tsickle_Closure_declarations() {\n/** @type {?} */\nFolderActionsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFolderActionsService.ctorParameters;\n/** @type {?} */\nFolderActionsService.prototype.permissionEvent;\n/** @type {?} */\nFolderActionsService.prototype.error;\n/** @type {?} */\nFolderActionsService.prototype.success;\n/** @type {?} */\nFolderActionsService.prototype.handlers;\n/** @type {?} */\nFolderActionsService.prototype.nodeActionsService;\n/** @type {?} */\nFolderActionsService.prototype.documentListService;\n/** @type {?} */\nFolderActionsService.prototype.contentService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport'rxjs/add/observable/throw';\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\nprivate handlers: { [id: string]: ContentActionHandler; } = {};\n/**\n * @param {?} nodeActionsService\n * @param {?=} documentListService\n * @param {?=} contentService\n */\nconstructor(private nodeActionsService: NodeActionsService,\nprivate documentListService?: DocumentListService,\nprivate contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ngetHandler(key: string): ContentActionHandler {\n        if (key) {\n            let /** @type {?} */ lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} handler\n * @return {?}\n */\nsetHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let /** @type {?} */ lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\ncanExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n/**\n * @return {?}\n */\nprivate setupActionHandlers() {\n        this.handlers['download'] = this.download.bind(this);\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate download(node: MinimalNodeEntity): Observable<boolean> {\n        if (this.canExecuteAction(node) && this.contentService) {\n            let /** @type {?} */ link = document.createElement('a');\n            document.body.appendChild(link);\n            link.setAttribute('download', node.entry.name);\n            link.href = this.contentService.getContentUrl(node);\n            link.click();\n            document.body.removeChild(link);\n            return Observable.of(true);\n        }\n        return Observable.of(false);\n    }\n/**\n * @param {?} node\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate copyNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const /** @type {?} */ actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n/**\n * @param {?} node\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate moveNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const /** @type {?} */ actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n/**\n * @param {?} actionObservable\n * @param {?} type\n * @param {?} action\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n/**\n * @param {?} node\n * @param {?=} target\n * @param {?=} permission\n * @return {?}\n */\nprivate deleteNode(node: any, target?: any, permission?: string): Observable<any> {\n        let /** @type {?} */ handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(node.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'content', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NodeActionsService, },\n{type: DocumentListService, },\n{type: ContentService, },\n];\n}\n\nfunction DocumentActionsService_tsickle_Closure_declarations() {\n/** @type {?} */\nDocumentActionsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDocumentActionsService.ctorParameters;\n/** @type {?} */\nDocumentActionsService.prototype.permissionEvent;\n/** @type {?} */\nDocumentActionsService.prototype.error;\n/** @type {?} */\nDocumentActionsService.prototype.success;\n/** @type {?} */\nDocumentActionsService.prototype.handlers;\n/** @type {?} */\nDocumentActionsService.prototype.nodeActionsService;\n/** @type {?} */\nDocumentActionsService.prototype.documentListService;\n/** @type {?} */\nDocumentActionsService.prototype.contentService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { ContentService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs/Subject';\nimport { ContentNodeSelectorComponent } from '../../content-node-selector/content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from '../../content-node-selector/content-node-selector.component-data.interface';\nimport { ShareDataRow } from '../data/share-data-row.model';\nimport { DocumentListService } from './document-list.service';\nexport class NodeActionsService {\n/**\n * @param {?} dialog\n * @param {?=} documentListService\n * @param {?=} contentService\n */\nconstructor(private dialog: MatDialog,\nprivate documentListService?: DocumentListService,\nprivate contentService?: ContentService) {}\n/**\n * Copy content node\n * \n * @param {?} contentEntry node to copy\n * @param {?=} permission permission which is needed to apply the action\n * @return {?}\n */\npublic copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n/**\n * Copy folder node\n * \n * @param {?} contentEntry node to copy\n * @param {?=} permission permission which is needed to apply the action\n * @return {?}\n */\npublic copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n/**\n * Move content node\n * \n * @param {?} contentEntry node to move\n * @param {?=} permission permission which is needed to apply the action\n * @return {?}\n */\npublic moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n/**\n * Move folder node\n * \n * @param {?} contentEntry node to move\n * @param {?=} permission permission which is needed to apply the action\n * @return {?}\n */\npublic moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n/**\n * General method for performing the given operation (copy|move)\n * \n * @param {?} action the action to perform (copy|move)\n * @param {?} type type of the content (content|folder)\n * @param {?} contentEntry the contentEntry which has to have the action performed on\n * @param {?=} permission permission which is needed to apply the action\n * @return {?}\n */\nprivate doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const /** @type {?} */ observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n            const /** @type {?} */ data: ContentNodeSelectorComponentData = {\n                title: `${action} '${contentEntry.name}' to ...`,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                imageResolver: this.imageResolver.bind(this),\n                select: new EventEmitter<MinimalNodeEntryEntity[]>()\n            };\n\n            this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: 'adf-content-node-selector-dialog', width: '630px' });\n\n            data.select.subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const /** @type {?} */ selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                        observable.next.bind(observable, `OPERATION.SUCCES.${type.toUpperCase()}.${action.toUpperCase()}`),\n                        observable.error.bind(observable)\n                    );\n                this.dialog.closeAll();\n            });\n\n            return observable;\n        } else {\n            observable.error(new Error(JSON.stringify({ error: { statusCode: 403 } })));\n            return observable;\n        }\n    }\n/**\n * @param {?} currentNodeId\n * @param {?} row\n * @return {?}\n */\nprivate rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const /** @type {?} */ node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n/**\n * @param {?} row\n * @param {?} col\n * @return {?}\n */\nprivate imageResolver(row: ShareDataRow, col: DataColumn): string|null {\n        const /** @type {?} */ entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n{type: DocumentListService, },\n{type: ContentService, },\n];\n}\n\nfunction NodeActionsService_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeActionsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNodeActionsService.ctorParameters;\n/** @type {?} */\nNodeActionsService.prototype.dialog;\n/** @type {?} */\nNodeActionsService.prototype.documentListService;\n/** @type {?} */\nNodeActionsService.prototype.contentService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    AlfrescoApiService,\n    ContentService,\n    HighlightDirective,\n    SiteModel,\n    UserPreferencesService\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination, Site } from 'alfresco-js-api';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\n\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nexport class ContentNodeSelectorComponent implements OnInit {\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    chosenNode: MinimalNodeEntryEntity | Site | null = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy;\n    pagination: Pagination;\n    skipCount: number = 0;\n    infiniteScroll: boolean = false;\n    buttonActionName: string;\n\n    \n    title: string;\n\n    \n    actionName: string;\n\n    \n    currentFolderId: string | null = null;\n\n    \n    dropdownHideMyFiles: boolean = false;\n\n    \n    dropdownSiteList: any[] = null;\n\n    \n    rowFilter: RowFilter = null;\n\n    \n    imageResolver: ImageResolver = null;\n\n    \n    pageSize: number;\n\n    \n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    \n    documentList: DocumentListComponent;\n\n    \n    highlighter: HighlightDirective;\n\n    debounceSearch: number= 200;\n\n    searchInput: FormControl = new FormControl();\n/**\n * @param {?} contentNodeSelectorService\n * @param {?} contentService\n * @param {?} apiService\n * @param {?} preferences\n * @param {?=} data\n * @param {?=} containingDialog\n */\nconstructor(private contentNodeSelectorService: ContentNodeSelectorService,\nprivate contentService: ContentService,\nprivate apiService: AlfrescoApiService,\nprivate preferences: UserPreferencesService,\n                  data?: ContentNodeSelectorComponentData,\nprivate containingDialog?: MatDialogRef<ContentNodeSelectorComponent>) {\n        if (data) {\n            this.title = data.title;\n            this.actionName = data.actionName;\n            this.select = data.select;\n            this.currentFolderId = data.currentFolderId;\n            this.dropdownHideMyFiles = data.dropdownHideMyFiles;\n            this.dropdownSiteList = data.dropdownSiteList;\n            this.rowFilter = data.rowFilter;\n            this.imageResolver = data.imageResolver;\n        }\n        this.buttonActionName = this.actionName ? `NODE_SELECTOR.${this.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n\n        if (this.containingDialog) {\n            this.inDialog = true;\n        }\n\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n\n        this.pageSize = this.preferences.paginationSize;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n        this.paginationStrategy = PaginationStrategy.Infinite;\n    }\n/**\n * Updates the site attribute and starts a new search\n * \n * @param {?} chosenSite Sitemodel to search within\n * @return {?}\n */\nsiteChanged(chosenSite: SiteModel): void {\n        this.siteId = chosenSite.guid;\n        this.updateResults();\n    }\n/**\n * Updates the searchTerm attribute and starts a new search\n * \n * @param {?} searchTerm string value to search against\n * @return {?}\n */\nsearch(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n/**\n * Returns whether breadcrumb has to be shown or not\n * @return {?}\n */\nneedBreadcrumbs() {\n        const /** @type {?} */ whenInFolderNavigation = !this.showingSearchResults, /** @type {?} */\n            whenInSelectingSearchResult = this.showingSearchResults && this.chosenNode;\n\n        return whenInFolderNavigation || whenInSelectingSearchResult;\n    }\n/**\n * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n * @return {?}\n */\nget breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        if (this.showingSearchResults && this.chosenNode) {\n            return this.chosenNode;\n        } else {\n            return this.documentList.folderNode;\n        }\n    }\n/**\n * Clear the search input\n * @return {?}\n */\nclear(): void {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n        this.folderIdToShow = this.currentFolderId;\n    }\n/**\n * Update the result list depending on the criterias\n * @return {?}\n */\nprivate updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.folderIdToShow = this.siteId || this.currentFolderId;\n        } else {\n            this.startNewSearch();\n        }\n    }\n/**\n * Load the first page of a new search result\n * @return {?}\n */\nprivate startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n/**\n * Loads the next batch of search results\n * \n * @param {?} event Pagination object\n * @return {?}\n */\ngetNextPageOfSearch(event: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = event.skipCount;\n        this.querySearch();\n    }\n/**\n * Perform the call to searchService with the proper parameters\n * @return {?}\n */\nprivate querySearch(): void {\n        this.loadingSearchResults = true;\n\n        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n            .subscribe(this.showSearchResults.bind(this));\n    }\n/**\n * Show the results of the search\n * \n * @param {?} results Search results\n * @return {?}\n */\nprivate showSearchResults(results: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = results;\n        } else {\n            this.documentList.data.loadPage(results, true);\n        }\n\n        this.pagination = results.list.pagination;\n        this.highlight();\n    }\n/**\n * Hightlight the actual searchterm in the next frame\n * @return {?}\n */\nhighlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n/**\n * Invoked when user selects a node\n * \n * @param {?} event CustomEvent for node-select\n * @return {?}\n */\nonNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n/**\n * Sets showingSearchResults state to be able to differentiate between search results or folder results\n * @return {?}\n */\nonFolderChange(): void {\n        this.skipCount = 0;\n        this.infiniteScroll = false;\n        this.showingSearchResults = false;\n    }\n/**\n * Attempts to set the currently loaded node\n * @param {?} nodePage\n * @return {?}\n */\nonFolderLoaded(nodePage: NodePaging): void {\n        this.attemptNodeSelection(this.documentList.folderNode);\n        this.pagination = nodePage.list.pagination;\n    }\n/**\n * Selects node as chosen if it has the right permission, clears the selection otherwise\n * \n * @param {?} entry\n * @return {?}\n */\nprivate attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.contentService.hasPermission(entry, 'create')) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n/**\n * Clears the chosen node\n * @return {?}\n */\nresetChosenNode(): void {\n        this.chosenNode = null;\n    }\n/**\n * Emit event with the chosen node\n * @return {?}\n */\nchoose(): void {\n        const /** @type {?} */ entry: any = this.chosenNode;\n\n        if (entry && entry.guid) {\n            const /** @type {?} */ options = {\n                include: ['path', 'properties', 'allowableOperations']\n            };\n            this.apiService.nodesApi.getNode(entry.guid, options)\n                .then(chosenSiteNode => {\n                    this.select.next([chosenSiteNode.entry]);\n                });\n\n        } else {\n            this.select.next([this.chosenNode]);\n\n        }\n    }\n/**\n * Close the dialog\n * @return {?}\n */\nclose(): void {\n        this.containingDialog.close();\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nonNodeDoubleClick(e: CustomEvent) {\n        const /** @type {?} */ node: any = e.detail.node.entry;\n\n        if (node && node.guid) {\n            const /** @type {?} */ options = {\n                maxItems: this.pageSize,\n                skipCount: this.skipCount,\n                include: ['path', 'properties', 'allowableOperations']\n            };\n\n            this.apiService.nodesApi.getNode(node.guid, options)\n                .then(documentLibrary => {\n                    this.documentList.performCustomSourceNavigation(documentLibrary);\n                });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-content-node-selector',\n    styles: [`\n\n    `],\n    template: `\n      <header matDialogTitle\n              class=\"adf-content-node-selector-title\"\n              data-automation-id=\"content-node-selector-title\">{{title}}\n      </header>\n\n      <section matDialogContent\n               class=\"adf-content-node-selector-content\"\n               (node-select)=\"onNodeSelect($event)\">\n\n          <mat-form-field floatPlaceholder=\"never\" class=\"adf-content-node-selector-content-input\">\n              <input matInput\n                     id=\"searchInput\"\n                     [formControl]=\"searchInput\"\n                     type=\"text\"\n                     placeholder=\"Search\"\n                     [value]=\"searchTerm\"\n                     data-automation-id=\"content-node-selector-search-input\">\n\n              <mat-icon *ngIf=\"searchTerm.length > 0\"\n                        matSuffix (click)=\"clear()\"\n                        class=\"adf-content-node-selector-content-input-icon\"\n                        data-automation-id=\"content-node-selector-search-clear\">clear\n              </mat-icon>\n\n              <mat-icon *ngIf=\"searchTerm.length === 0\"\n                        matSuffix\n                        class=\"adf-content-node-selector-content-input-icon\"\n                        data-automation-id=\"content-node-selector-search-icon\">search\n              </mat-icon>\n\n          </mat-form-field>\n\n          <adf-sites-dropdown\n              (change)=\"siteChanged($event)\"\n              [placeholder]=\"'NODE_SELECTOR.SELECT_LOCATION'\"\n              [hideMyFiles]=\"dropdownHideMyFiles\"\n              [siteList]=\"dropdownSiteList\"\n              data-automation-id=\"content-node-selector-sites-combo\"></adf-sites-dropdown>\n\n          <adf-toolbar>\n              <adf-toolbar-title>\n                  <adf-dropdown-breadcrumb *ngIf=\"needBreadcrumbs()\"\n                                           class=\"adf-content-node-selector-content-breadcrumb\"\n                                           (navigate)=\"clear()\"\n                                           [target]=\"documentList\"\n                                           [folderNode]=\"breadcrumbFolderNode\"\n                                           data-automation-id=\"content-node-selector-content-breadcrumb\">\n                  </adf-dropdown-breadcrumb>\n              </adf-toolbar-title>\n          </adf-toolbar>\n\n          <div class=\"adf-content-node-selector-content-list\" data-automation-id=\"content-node-selector-content-list\">\n              <adf-document-list\n                  #documentList\n                  adf-highlight\n                  adf-highlight-selector=\".cell-value adf-datatable-cell .adf-datatable-cell-value\"\n                  [node]=\"nodes\"\n                  [maxItems]=\"pageSize\"\n                  [skipCount]=\"skipCount\"\n                  [enableInfiniteScrolling]=\"infiniteScroll\"\n                  [rowFilter]=\"rowFilter\"\n                  [imageResolver]=\"imageResolver\"\n                  [currentFolderId]=\"folderIdToShow\"\n                  selectionMode=\"single\"\n                  [contextMenuActions]=\"false\"\n                  [contentActions]=\"false\"\n                  [allowDropFiles]=\"false\"\n                  (folderChange)=\"onFolderChange()\"\n                  (ready)=\"onFolderLoaded($event)\"\n                  (node-dblclick)=\"onNodeDoubleClick($event)\"\n                  data-automation-id=\"content-node-selector-document-list\">\n                  <empty-folder-content>\n                      <ng-template>\n                          <div>{{ 'NODE_SELECTOR.NO_RESULTS' | translate }}</div>\n                      </ng-template>\n                  </empty-folder-content>\n              </adf-document-list>\n\n              <adf-infinite-pagination\n                  [pagination]=\"pagination\"\n                  [pageSize]=\"pageSize\"\n                  [loading]=\"loadingSearchResults\"\n                  (loadMore)=\"getNextPageOfSearch($event)\"\n                  data-automation-id=\"content-node-selector-search-pagination\">\n                  {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\n              </adf-infinite-pagination>\n          </div>\n\n      </section>\n\n      <footer matDialogActions class=\"adf-content-node-selector-actions\">\n\n          <button *ngIf=\"inDialog\"\n                  mat-button\n                  class=\"adf-content-node-selector-actions-cancel\"\n                  (click)=\"close()\"\n                  data-automation-id=\"content-node-selector-actions-cancel\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\n          </button>\n\n          <button mat-button\n                  [disabled]=\"!chosenNode\"\n                  class=\"adf-content-node-selector-actions-choose\"\n                  (click)=\"choose()\"\n                  data-automation-id=\"content-node-selector-actions-choose\">{{ buttonActionName | translate }}\n          </button>\n\n      </footer>\n    `,\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentNodeSelectorService, },\n{type: ContentService, },\n{type: AlfrescoApiService, },\n{type: UserPreferencesService, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA, ] }, ]},\n{type: MatDialogRef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input },],\n'actionName': [{ type: Input },],\n'currentFolderId': [{ type: Input },],\n'dropdownHideMyFiles': [{ type: Input },],\n'dropdownSiteList': [{ type: Input },],\n'rowFilter': [{ type: Input },],\n'imageResolver': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'select': [{ type: Output },],\n'documentList': [{ type: ViewChild, args: [DocumentListComponent, ] },],\n'highlighter': [{ type: ViewChild, args: [HighlightDirective, ] },],\n};\n}\n\nfunction ContentNodeSelectorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentNodeSelectorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentNodeSelectorComponent.ctorParameters;\n/** @type {?} */\nContentNodeSelectorComponent.propDecorators;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.nodes;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.siteId;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.searchTerm;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.showingSearchResults;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.loadingSearchResults;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.inDialog;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.chosenNode;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.folderIdToShow;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.paginationStrategy;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.pagination;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.skipCount;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.infiniteScroll;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.buttonActionName;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.title;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.actionName;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.currentFolderId;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.dropdownHideMyFiles;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.dropdownSiteList;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.rowFilter;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.imageResolver;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.pageSize;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.select;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.documentList;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.highlighter;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.debounceSearch;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.searchInput;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.contentNodeSelectorService;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.contentService;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.apiService;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.preferences;\n/** @type {?} */\nContentNodeSelectorComponent.prototype.containingDialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export { audit } from './audit';\nexport { auditTime } from './auditTime';\nexport { buffer } from './buffer';\nexport { bufferCount } from './bufferCount';\nexport { bufferTime } from './bufferTime';\nexport { bufferToggle } from './bufferToggle';\nexport { bufferWhen } from './bufferWhen';\nexport { catchError } from './catchError';\nexport { combineAll } from './combineAll';\nexport { combineLatest } from './combineLatest';\nexport { concat } from './concat';\nexport { concatAll } from './concatAll';\nexport { concatMap } from './concatMap';\nexport { concatMapTo } from './concatMapTo';\nexport { count } from './count';\nexport { debounce } from './debounce';\nexport { debounceTime } from './debounceTime';\nexport { defaultIfEmpty } from './defaultIfEmpty';\nexport { delay } from './delay';\nexport { delayWhen } from './delayWhen';\nexport { dematerialize } from './dematerialize';\nexport { distinct } from './distinct';\nexport { distinctUntilChanged } from './distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './distinctUntilKeyChanged';\nexport { elementAt } from './elementAt';\nexport { every } from './every';\nexport { exhaust } from './exhaust';\nexport { exhaustMap } from './exhaustMap';\nexport { expand } from './expand';\nexport { filter } from './filter';\nexport { finalize } from './finalize';\nexport { find } from './find';\nexport { findIndex } from './findIndex';\nexport { first } from './first';\nexport { groupBy } from './groupBy';\nexport { ignoreElements } from './ignoreElements';\nexport { isEmpty } from './isEmpty';\nexport { last } from './last';\nexport { map } from './map';\nexport { mapTo } from './mapTo';\nexport { materialize } from './materialize';\nexport { max } from './max';\nexport { merge } from './merge';\nexport { mergeAll } from './mergeAll';\nexport { mergeMap } from './mergeMap';\nexport { mergeMap as flatMap } from './mergeMap';\nexport { mergeMapTo } from './mergeMapTo';\nexport { mergeScan } from './mergeScan';\nexport { min } from './min';\nexport { multicast } from './multicast';\nexport { observeOn } from './observeOn';\nexport { onErrorResumeNext } from './onErrorResumeNext';\nexport { pairwise } from './pairwise';\nexport { partition } from './partition';\nexport { pluck } from './pluck';\nexport { publish } from './publish';\nexport { publishBehavior } from './publishBehavior';\nexport { publishLast } from './publishLast';\nexport { publishReplay } from './publishReplay';\nexport { race } from './race';\nexport { reduce } from './reduce';\nexport { repeat } from './repeat';\nexport { repeatWhen } from './repeatWhen';\nexport { retry } from './retry';\nexport { retryWhen } from './retryWhen';\nexport { refCount } from './refCount';\nexport { sample } from './sample';\nexport { sampleTime } from './sampleTime';\nexport { scan } from './scan';\nexport { sequenceEqual } from './sequenceEqual';\nexport { share } from './share';\nexport { shareReplay } from './shareReplay';\nexport { single } from './single';\nexport { skip } from './skip';\nexport { skipLast } from './skipLast';\nexport { skipUntil } from './skipUntil';\nexport { skipWhile } from './skipWhile';\nexport { startWith } from './startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './subscribeOn';\nexport { switchAll } from './switchAll';\nexport { switchMap } from './switchMap';\nexport { switchMapTo } from './switchMapTo';\nexport { take } from './take';\nexport { takeLast } from './takeLast';\nexport { takeUntil } from './takeUntil';\nexport { takeWhile } from './takeWhile';\nexport { tap } from './tap';\nexport { throttle } from './throttle';\nexport { throttleTime } from './throttleTime';\nexport { timeInterval } from './timeInterval';\nexport { timeout } from './timeout';\nexport { timeoutWith } from './timeoutWith';\nexport { timestamp } from './timestamp';\nexport { toArray } from './toArray';\nexport { window } from './window';\nexport { windowCount } from './windowCount';\nexport { windowTime } from './windowTime';\nexport { windowToggle } from './windowToggle';\nexport { windowWhen } from './windowWhen';\nexport { withLatestFrom } from './withLatestFrom';\nexport { zip } from './zip';\nexport { zipAll } from './zipAll';\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  protected _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      } else if (this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  protected _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  _isComplete = false;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  protected _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(): Subscription;\n  subscribe(observer: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\n/**\n * Internal service used by ContentNodeSelector component.\n */\nexport class ContentNodeSelectorService {\n/**\n * @param {?} searchService\n */\nconstructor(private searchService: SearchService) {\n    }\n/**\n * Performs a search for content node selection\n * \n * @param {?} searchTerm    The term to search for\n * @param {?} rootNodeId    The root is to start the search from\n * @param {?=} skipCount     From where to start the loading\n * @param {?=} maxItems      How many items to load\n * @return {?}\n */\npublic search(searchTerm: string, rootNodeId: string, skipCount: number = 0, maxItems: number = 25): Observable<NodePaging> {\n\n        let /** @type {?} */ defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: `${maxItems}`,\n                skipCount: `${skipCount}`\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        if (rootNodeId) {\n            defaultSearchNode.scope = rootNodeId;\n        }\n\n        return this.searchService.search(defaultSearchNode);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchService, },\n];\n}\n\nfunction ContentNodeSelectorService_tsickle_Closure_declarations() {\n/** @type {?} */\nContentNodeSelectorService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentNodeSelectorService.ctorParameters;\n/** @type {?} */\nContentNodeSelectorService.prototype.searchService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\nexport class ContentActionListComponent {\n/**\n * @param {?} documentList\n */\nconstructor(private documentList: DocumentListComponent) {\n    }\n/**\n * Registers action handler within the parent document list component.\n * @param {?} action Action model to register.\n * @return {?}\n */\nregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'content-actions',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentListComponent, },\n];\n}\n\nfunction ContentActionListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nContentActionListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContentActionListComponent.ctorParameters;\n/** @type {?} */\nContentActionListComponent.prototype.documentList;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {\n    DataCellEvent,\n    DataColumn,\n    DataRowActionEvent,\n    DataSorting,\n    DataTableComponent,\n    ObjectDataColumn,\n    PaginatedComponent,\n    PaginationQueryParams\n} from '@alfresco/adf-core';\nimport { AlfrescoApiService, AppConfigService, DataColumnListComponent, UserPreferencesService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {\n    DeletedNodesPaging,\n    MinimalNodeEntity,\n    MinimalNodeEntryEntity,\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    Pagination\n} from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\n\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { Subscription } from 'rxjs/Subscription';\nexport type PaginationStrategy = number;\nexport let PaginationStrategy: any = {};\nPaginationStrategy.Finite = 0;\nPaginationStrategy.Infinite = 1;\nPaginationStrategy[PaginationStrategy.Finite] = \"Finite\";\nPaginationStrategy[PaginationStrategy.Infinite] = \"Infinite\";\n\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n     columnList: DataColumnListComponent;\n\n    \n    permissionsStyle: PermissionStyleModel[] = [];\n\n    \n    locationFormat: string = '/';\n\n    \n    navigate: boolean = true;\n\n    \n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    \n    thumbnails: boolean = false;\n\n    \n    selectionMode: string = 'single'; // null|single|multiple\n\n    \n    multiselect: boolean = false;\n\n    \n    contentActions: boolean = false;\n\n    \n    contentActionsPosition: string = 'right'; // left|right\n\n    \n    contextMenuActions: boolean = false;\n\n    \n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    \n    allowDropFiles: boolean = false;\n\n    \n    sorting: string[];\n\n    \n    rowStyle: string;\n\n    \n    rowStyleClass: string;\n\n    \n    loading: boolean = false;\n\n    \n    rowFilter: any | null = null;\n\n    \n    imageResolver: any | null = null;\n\n    // The identifier of a node. You can also use one of these well-known aliases: -my- | -shared- | -root-\n    \n    currentFolderId: string = null;\n\n    \n    folderNode: MinimalNodeEntryEntity = null;\n\n    \n    node: NodePaging = null;\n\n    \n    maxItems: number;\n\n    \n    skipCount: number = 0;\n\n    \n    enableInfiniteScrolling: boolean = false;\n\n    \n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    \n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    \n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    \n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    \n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    \n    error: EventEmitter<any> = new EventEmitter();\n\n    \n    dataTable: DataTableComponent;\n\n    errorMessage;\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    infiniteLoading: boolean = false;\n    noPermission: boolean = false;\n    selection = new Array<MinimalNodeEntity>();\n\n    pagination = new Subject<Pagination>();\nprivate layoutPresets = {};\nprivate currentNodeAllowableOperations: string[] = [];\nprivate CREATE_PERMISSION = 'create';\nprivate contextActionHandlerSubscription: Subscription;\n/**\n * @param {?} documentListService\n * @param {?} ngZone\n * @param {?} elementRef\n * @param {?} apiService\n * @param {?} appConfig\n * @param {?} preferences\n */\nconstructor(private documentListService: DocumentListService,\nprivate ngZone: NgZone,\nprivate elementRef: ElementRef,\nprivate apiService: AlfrescoApiService,\nprivate appConfig: AppConfigService,\nprivate preferences: UserPreferencesService) {\n        this.maxItems = this.preferences.paginationSize;\n\n        this.pagination.next(<Pagination> {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            totalItems: 0,\n            hasMoreItems: false\n        });\n    }\n/**\n * @param {?} node\n * @return {?}\n */\ngetContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let /** @type {?} */ actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n/**\n * @param {?} action\n * @return {?}\n */\ncontextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n/**\n * @return {?}\n */\nget hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, null, this.getDefaultSorting());\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.contextActionHandlerSubscription = this.contextActionHandler.subscribe(val => this.contextActionCallback(val));\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        let /** @type {?} */ schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => /** @type {?} */(( <DataColumn> c)));\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, schema, this.getDefaultSorting());\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let /** @type {?} */ columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.isSkipCountChanged(changes) ||\n            this.isMaxItemsChanged(changes)) {\n            this.reload(this.enableInfiniteScrolling);\n        }\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.loadFolder();\n        } else if (changes.currentFolderId && changes.currentFolderId.currentValue) {\n            if (changes.currentFolderId.previousValue !== changes.currentFolderId.currentValue) {\n                this.folderNode = null;\n            }\n            if (!this.hasCustomLayout) {\n                this.setupDefaultColumns(changes.currentFolderId.currentValue);\n            }\n            this.loadFolderByNodeId(changes.currentFolderId.currentValue);\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                this.resetSelection();\n                this.data.loadPage(changes.node.currentValue);\n                this.pagination.next(changes.node.currentValue.list.pagination);\n            } else if (changes.rowFilter) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.maxItems, this.skipCount);\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nreload(merge: boolean = false) {\n        this.ngZone.run(() => {\n            this.resetSelection();\n\n            if (this.folderNode) {\n                this.loadFolder(merge);\n            } else if (this.currentFolderId) {\n                this.loadFolderByNodeId(this.currentFolderId, merge);\n            } else if (this.node) {\n                this.data.loadPage(this.node);\n                this.onDataReady(this.node);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nisEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\nisNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\nisMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n/**\n * @return {?}\n */\nisEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\ngetNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        let /** @type {?} */ target = null;\n\n        if (node && node.entry) {\n            if (node.entry.isFile) {\n                target = 'document';\n            }\n\n            if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                let /** @type {?} */ ltarget = target.toLowerCase();\n                let /** @type {?} */ actionsByTarget = this.actions.filter(entry => {\n                    return entry.target.toLowerCase() === ltarget;\n                }).map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.checkPermission(node, action);\n                });\n\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n/**\n * @param {?} node\n * @param {?} action\n * @return {?}\n */\ncheckPermission(node: any, action: ContentActionModel): ContentActionModel {\n        if (action.permission) {\n            if (this.hasPermissions(node)) {\n                let /** @type {?} */ permissions = node.entry.allowableOperations;\n                let /** @type {?} */ findPermission = permissions.find(permission => permission === action.permission);\n                if (!findPermission && action.disableWithNoPermission === true) {\n                    action.disabled = true;\n                }\n            }\n        }\n        return action;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate hasPermissions(node: any): boolean {\n        return node.entry.allowableOperations ? true : false;\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nperformNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nperformCustomSourceNavigation(node: MinimalNodeEntity): boolean {\n        if (this.isCustomSource(this.currentFolderId)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nupdateFolderData(node: MinimalNodeEntity): void {\n        this.currentFolderId = node.entry.id;\n        this.folderNode = node.entry;\n        this.skipCount = 0;\n        this.currentNodeAllowableOperations = node.entry['allowableOperations'] ? node.entry['allowableOperations'] : [];\n        this.loadFolder();\n        this.folderChange.emit(new NodeEntryEvent(node.entry));\n    }\n/**\n * Invoked when executing content action for a document or folder.\n * @param {?} node Node to be the context of the execution.\n * @param {?} action Action to be executed against the context.\n * @return {?}\n */\nexecuteContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let /** @type {?} */ handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = Observable.of(true);\n            }\n\n            if (typeof action.execute === 'function') {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nloadFolder(merge: boolean = false) {\n        if (merge) {\n            this.infiniteLoading = true;\n        } else {\n            this.loading = true;\n        }\n\n        let /** @type {?} */ nodeId = this.folderNode ? this.folderNode.id : this.currentFolderId;\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(nodeId);\n        }\n        if (nodeId) {\n            this.loadFolderNodesByFolderNodeId(nodeId, this.maxItems, this.skipCount, merge).catch(err => this.error.emit(err));\n        }\n    }\n/**\n * @param {?} nodeId\n * @param {?=} merge\n * @return {?}\n */\nloadFolderByNodeId(nodeId: string, merge: boolean = false) {\n        this.loading = true;\n        this.resetSelection();\n\n        if (nodeId === '-trashcan-') {\n            this.loadTrashcan(merge);\n        } else if (nodeId === '-sharedlinks-') {\n            this.loadSharedLinks(merge);\n        } else if (nodeId === '-sites-') {\n            this.loadSites(merge);\n        } else if (nodeId === '-mysites-') {\n            this.loadMemberSites(merge);\n        } else if (nodeId === '-favorites-') {\n            this.loadFavorites(merge);\n        } else if (nodeId === '-recent-') {\n            this.loadRecent(merge);\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId)\n                .then(node => {\n                    this.folderNode = node;\n                    this.currentFolderId = node.id;\n                    this.skipCount = 0;\n                    this.currentNodeAllowableOperations = node['allowableOperations'] ? node['allowableOperations'] : [];\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.maxItems, this.skipCount, merge);\n                })\n                .catch(err => {\n                    if (JSON.parse(err.message).error.statusCode === 403) {\n                        this.loading = false;\n                        this.noPermission = true;\n                    }\n                    this.error.emit(err);\n                });\n        }\n    }\n/**\n * @param {?} id\n * @param {?} maxItems\n * @param {?} skipCount\n * @param {?=} merge\n * @return {?}\n */\nloadFolderNodesByFolderNodeId(id: string, maxItems: number, skipCount: number, merge: boolean = false): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.resetSelection();\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: maxItems,\n                    skipCount: skipCount,\n                    rootFolderId: id\n                })\n                .subscribe(\n                val => {\n                    this.data.loadPage( /** @type {?} */((<NodePaging> val)), merge);\n                    this.loading = false;\n                    this.infiniteLoading = false;\n                    this.onDataReady(val);\n                    resolve(true);\n                },\n                error => {\n                    reject(error);\n                });\n        });\n\n    }\n/**\n * @return {?}\n */\nresetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n    }\n/**\n * @param {?} changePage\n * @return {?}\n */\nprivate isSkipCountChanged(changePage: SimpleChanges) {\n        return changePage.skipCount &&\n            changePage.skipCount.currentValue !== null &&\n            changePage.skipCount.currentValue !== undefined &&\n            changePage.skipCount.currentValue !== changePage.skipCount.previousValue;\n    }\n/**\n * @param {?} changePage\n * @return {?}\n */\nprivate isMaxItemsChanged(changePage: SimpleChanges) {\n        return changePage.maxItems &&\n            changePage.maxItems.currentValue &&\n            changePage.maxItems.currentValue !== changePage.maxItems.previousValue;\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadTrashcan(merge: boolean = false): void {\n        const /** @type {?} */ options = {\n            include: ['path', 'properties'],\n            maxItems: this.maxItems,\n            skipCount: this.skipCount\n        };\n        this.apiService.nodesApi.getDeletedNodes(options)\n            .then((page: DeletedNodesPaging) => this.onPageLoaded(page, merge))\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadSharedLinks(merge: boolean = false): void {\n        const /** @type {?} */ options = {\n            include: ['properties', 'allowableOperations', 'path'],\n            maxItems: this.maxItems,\n            skipCount: this.skipCount\n        };\n        this.apiService.sharedLinksApi.findSharedLinks(options)\n            .then((page: NodePaging) => this.onPageLoaded(page, merge))\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadSites(merge: boolean = false): void {\n        const /** @type {?} */ options = {\n            include: ['properties'],\n            maxItems: this.maxItems,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.sitesApi.getSites(options)\n            .then((page: NodePaging) => this.onPageLoaded(page, merge))\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadMemberSites(merge: boolean = false): void {\n        const /** @type {?} */ options = {\n            include: ['properties'],\n            maxItems: this.maxItems,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.peopleApi.getSiteMembership('-me-', options)\n            .then((result: SitePaging) => {\n                let /** @type {?} */ page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({entry: {site}}: any) => {\n                                site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                return {\n                                    entry: site\n                                };\n                            }),\n                        pagination: result.list.pagination\n                    }\n                };\n\n                this.onPageLoaded(page, merge);\n            })\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadFavorites(merge: boolean = false): void {\n        const /** @type {?} */ options = {\n            maxItems: this.maxItems,\n            skipCount: this.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: ['properties', 'allowableOperations', 'path']\n        };\n\n        this.apiService.favoritesApi.getFavorites('-me-', options)\n            .then((result: NodePaging) => {\n                let /** @type {?} */ page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({ entry: { target } }: any) => ({\n                                entry: target.file || target.folder\n                            }))\n                            .map(({ entry }: any) => {\n                                entry.properties = {\n                                    'cm:title': entry.title,\n                                    'cm:description': entry.description\n                                };\n                                return { entry };\n                            }),\n                        pagination: result.list.pagination\n                    }\n                };\n                this.onPageLoaded(page, merge);\n            })\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?=} merge\n * @return {?}\n */\nprivate loadRecent(merge: boolean = false): void {\n        this.apiService.peopleApi.getPerson('-me-')\n            .then((person: PersonEntry) => {\n                const /** @type {?} */ username = person.entry.id;\n                const /** @type {?} */ query = {\n                    query: {\n                        query: '*',\n                        language: 'afts'\n                    },\n                    filterQueries: [\n                        { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                        { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                        { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                    ],\n                    include: ['path', 'properties', 'allowableOperations'],\n                    sort: [{\n                        type: 'FIELD',\n                        field: 'cm:modified',\n                        ascending: false\n                    }],\n                    paging: {\n                        maxItems: this.maxItems,\n                        skipCount: this.skipCount\n                    }\n                };\n\n                return this.apiService.searchApi.search(query);\n            })\n            .then((page: NodePaging) => this.onPageLoaded(page, merge))\n            .catch(error => this.error.emit(error));\n    }\n/**\n * @param {?} page\n * @param {?=} merge\n * @return {?}\n */\nprivate onPageLoaded(page: NodePaging, merge: boolean = false) {\n        if (page) {\n            this.data.loadPage(page, merge);\n            this.loading = false;\n            this.onDataReady(page);\n        }\n    }\n/**\n * Creates a set of predefined columns.\n * @param {?=} preset\n * @return {?}\n */\nsetupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const /** @type {?} */ columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nonPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nonNodeClick(node: MinimalNodeEntity) {\n        const /** @type {?} */ domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const /** @type {?} */ event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nonNodeDblClick(node: MinimalNodeEntity) {\n        const /** @type {?} */ domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const /** @type {?} */ event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const /** @type {?} */ domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const /** @type {?} */ domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let /** @type {?} */ args = event.value;\n            let /** @type {?} */ node = ( /** @type {?} */((<ShareDataRow> args.row))).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let /** @type {?} */ args = event.value;\n            let /** @type {?} */ node = ( /** @type {?} */((<ShareDataRow> args.row))).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let /** @type {?} */ args = event.value;\n            let /** @type {?} */ node = ( /** @type {?} */((<ShareDataRow> args.row))).node;\n            let /** @type {?} */ action = ( /** @type {?} */((<ContentActionModel> args.action)));\n            this.executeContentAction(node, action);\n        }\n    }\n/**\n * @return {?}\n */\nprivate enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n/**\n * @return {?}\n */\nprivate getDefaultSorting(): DataSorting {\n        let /** @type {?} */ defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\ncanNavigateFolder(node: MinimalNodeEntity): boolean {\n        if (this.isCustomSource(this.currentFolderId)) {\n            return false;\n        }\n\n        if (node && node.entry && node.entry.isFolder) {\n            return true;\n        }\n\n        return false;\n    }\n/**\n * @param {?} folderId\n * @return {?}\n */\nisCustomSource(folderId: string): boolean {\n        const /** @type {?} */ sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n/**\n * @param {?} permission\n * @return {?}\n */\nhasCurrentNodePermission(permission: string): boolean {\n        let /** @type {?} */ hasPermission: boolean = false;\n        if (this.currentNodeAllowableOperations.length > 0) {\n            let /** @type {?} */ permFound = this.currentNodeAllowableOperations.find(element => element === permission);\n            hasPermission = permFound ? true : false;\n        }\n        return hasPermission;\n    }\n/**\n * @return {?}\n */\nhasCreatePermission() {\n        return this.hasCurrentNodePermission(this.CREATE_PERMISSION);\n    }\n/**\n * @return {?}\n */\nprivate loadLayoutPresets(): void {\n        const /** @type {?} */ externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n/**\n * @param {?=} name\n * @return {?}\n */\nprivate getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n/**\n * @param {?} page\n * @return {?}\n */\nprivate onDataReady(page: NodePaging) {\n        this.ready.emit(page);\n\n        if (page && page.list && page.list.pagination) {\n            this.pagination.next(page.list.pagination);\n        } else {\n            this.pagination.next(null);\n        }\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nupdatePagination(params: PaginationQueryParams) {\n        const /** @type {?} */ needsReload = this.maxItems !== params.maxItems || this.skipCount !== params.skipCount;\n\n        this.maxItems = params.maxItems;\n        this.skipCount = params.skipCount;\n\n        if (needsReload) {\n            this.reload(this.enableInfiniteScrolling);\n        }\n    }\n/**\n * @return {?}\n */\nget supportedPageSizes(): number[] {\n        return this.appConfig.get('document-list.supportedPageSizes', [5, 10, 15, 25]);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.contextActionHandlerSubscription) {\n            this.contextActionHandlerSubscription.unsubscribe();\n            this.contextActionHandlerSubscription = null;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-document-list',\n    styles: [`\n\n    `],\n    template: `\n      <adf-datatable\n          [selectionMode]=\"selectionMode\"\n          [data]=\"data\"\n          [actions]=\"contentActions\"\n          [actionsPosition]=\"contentActionsPosition\"\n          [multiselect]=\"multiselect\"\n          [allowDropFiles]=\"allowDropFiles\"\n          [contextMenu]=\"contextMenuActions\"\n          [rowStyle]=\"rowStyle\"\n          [rowStyleClass]=\"rowStyleClass\"\n          [loading]=\"loading\"\n          [noPermission]=\"noPermission\"\n          [showHeader]=\"!isEmpty()\"\n          (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n          (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n          (executeRowAction)=\"onExecuteRowAction($event)\"\n          (rowClick)=\"onNodeClick($event.value?.node)\"\n          (rowDblClick)=\"onNodeDblClick($event.value?.node)\"\n          (row-select)=\"onNodeSelect($event.detail)\"\n          (row-unselect)=\"onNodeUnselect($event.detail)\">\n\n          <div *ngIf=\"!isEmptyTemplateDefined()\">\n              <no-content-template>\n                  <ng-template>\n                      <adf-empty-list>\n                          <div class=\"adf-empty-list_template adf-empty-folder\">\n                              <div class=\"adf-empty-folder-this-space-is-empty\">{{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}}</div>\n                              <div fxHide.lt-md=\"true\" class=\"adf-empty-folder-drag-drop\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate }}</div>\n                              <div fxHide.lt-md=\"true\" class=\"adf-empty-folder-any-files-here-to-add\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate }}</div>\n                              <img class=\"adf-empty-folder-image\" [src]=\"emptyFolderImageUrl\">\n                          </div>\n                          <!-- <div adf-empty-list-header class=\"adf-empty-list-header\"> {{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}} </div> -->\n                      </adf-empty-list>\n                  </ng-template>\n              </no-content-template>\n          </div>\n\n          <div *ngIf=\"!isNoPermissionTemplateDefined()\">\n              <no-permission-template>\n                  <ng-template>\n                      <div class=\"adf-no-permission__template\">\n                          <mat-icon>ic_error</mat-icon>\n                          <p class=\"adf-no-permission__template--text\">{{ 'ADF-DOCUMENT-LIST.NO_PERMISSION' | translate }}</p>\n                      </div>\n                  </ng-template>\n              </no-permission-template>\n          </div>\n\n          <div>\n              <loading-content-template>\n                  <ng-template>\n                      <div class=\"adf-document-list-loading-container\">\n                          <mat-progress-spinner\n                              id=\"adf-document-list-loading\"\n                              class=\"adf-document-list-loading-margin\"\n                              [color]=\"'primary'\"\n                              [mode]=\"'indeterminate'\">\n                          </mat-progress-spinner>\n                      </div>\n                  </ng-template>\n              </loading-content-template>\n          </div>\n      </adf-datatable>\n    `,\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentListService, },\n{type: NgZone, },\n{type: ElementRef, },\n{type: AlfrescoApiService, },\n{type: AppConfigService, },\n{type: UserPreferencesService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnList': [{ type: ContentChild, args: [DataColumnListComponent, ] },],\n'permissionsStyle': [{ type: Input },],\n'locationFormat': [{ type: Input },],\n'navigate': [{ type: Input },],\n'navigationMode': [{ type: Input },],\n'thumbnails': [{ type: Input },],\n'selectionMode': [{ type: Input },],\n'multiselect': [{ type: Input },],\n'contentActions': [{ type: Input },],\n'contentActionsPosition': [{ type: Input },],\n'contextMenuActions': [{ type: Input },],\n'emptyFolderImageUrl': [{ type: Input },],\n'allowDropFiles': [{ type: Input },],\n'sorting': [{ type: Input },],\n'rowStyle': [{ type: Input },],\n'rowStyleClass': [{ type: Input },],\n'loading': [{ type: Input },],\n'rowFilter': [{ type: Input },],\n'imageResolver': [{ type: Input },],\n'currentFolderId': [{ type: Input },],\n'folderNode': [{ type: Input },],\n'node': [{ type: Input },],\n'maxItems': [{ type: Input },],\n'skipCount': [{ type: Input },],\n'enableInfiniteScrolling': [{ type: Input },],\n'nodeClick': [{ type: Output },],\n'nodeDblClick': [{ type: Output },],\n'folderChange': [{ type: Output },],\n'preview': [{ type: Output },],\n'ready': [{ type: Output },],\n'error': [{ type: Output },],\n'dataTable': [{ type: ViewChild, args: [DataTableComponent, ] },],\n'onShowContextMenu': [{ type: HostListener, args: ['contextmenu', ['$event'], ] },],\n};\n}\n\nfunction DocumentListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDocumentListComponent.SINGLE_CLICK_NAVIGATION;\n/** @type {?} */\nDocumentListComponent.DOUBLE_CLICK_NAVIGATION;\n/** @type {?} */\nDocumentListComponent.DEFAULT_PAGE_SIZE;\n/** @type {?} */\nDocumentListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDocumentListComponent.ctorParameters;\n/** @type {?} */\nDocumentListComponent.propDecorators;\n/** @type {?} */\nDocumentListComponent.prototype.columnList;\n/** @type {?} */\nDocumentListComponent.prototype.permissionsStyle;\n/** @type {?} */\nDocumentListComponent.prototype.locationFormat;\n/** @type {?} */\nDocumentListComponent.prototype.navigate;\n/** @type {?} */\nDocumentListComponent.prototype.navigationMode;\n/** @type {?} */\nDocumentListComponent.prototype.thumbnails;\n/** @type {?} */\nDocumentListComponent.prototype.selectionMode;\n/** @type {?} */\nDocumentListComponent.prototype.multiselect;\n/** @type {?} */\nDocumentListComponent.prototype.contentActions;\n/** @type {?} */\nDocumentListComponent.prototype.contentActionsPosition;\n/** @type {?} */\nDocumentListComponent.prototype.contextMenuActions;\n/** @type {?} */\nDocumentListComponent.prototype.emptyFolderImageUrl;\n/** @type {?} */\nDocumentListComponent.prototype.allowDropFiles;\n/** @type {?} */\nDocumentListComponent.prototype.sorting;\n/** @type {?} */\nDocumentListComponent.prototype.rowStyle;\n/** @type {?} */\nDocumentListComponent.prototype.rowStyleClass;\n/** @type {?} */\nDocumentListComponent.prototype.loading;\n/** @type {?} */\nDocumentListComponent.prototype.rowFilter;\n/** @type {?} */\nDocumentListComponent.prototype.imageResolver;\n/** @type {?} */\nDocumentListComponent.prototype.currentFolderId;\n/** @type {?} */\nDocumentListComponent.prototype.folderNode;\n/** @type {?} */\nDocumentListComponent.prototype.node;\n/** @type {?} */\nDocumentListComponent.prototype.maxItems;\n/** @type {?} */\nDocumentListComponent.prototype.skipCount;\n/** @type {?} */\nDocumentListComponent.prototype.enableInfiniteScrolling;\n/** @type {?} */\nDocumentListComponent.prototype.nodeClick;\n/** @type {?} */\nDocumentListComponent.prototype.nodeDblClick;\n/** @type {?} */\nDocumentListComponent.prototype.folderChange;\n/** @type {?} */\nDocumentListComponent.prototype.preview;\n/** @type {?} */\nDocumentListComponent.prototype.ready;\n/** @type {?} */\nDocumentListComponent.prototype.error;\n/** @type {?} */\nDocumentListComponent.prototype.dataTable;\n/** @type {?} */\nDocumentListComponent.prototype.errorMessage;\n/** @type {?} */\nDocumentListComponent.prototype.actions;\n/** @type {?} */\nDocumentListComponent.prototype.emptyFolderTemplate;\n/** @type {?} */\nDocumentListComponent.prototype.noPermissionTemplate;\n/** @type {?} */\nDocumentListComponent.prototype.contextActionHandler;\n/** @type {?} */\nDocumentListComponent.prototype.data;\n/** @type {?} */\nDocumentListComponent.prototype.infiniteLoading;\n/** @type {?} */\nDocumentListComponent.prototype.noPermission;\n/** @type {?} */\nDocumentListComponent.prototype.selection;\n/** @type {?} */\nDocumentListComponent.prototype.pagination;\n/** @type {?} */\nDocumentListComponent.prototype.layoutPresets;\n/** @type {?} */\nDocumentListComponent.prototype.currentNodeAllowableOperations;\n/** @type {?} */\nDocumentListComponent.prototype.CREATE_PERMISSION;\n/** @type {?} */\nDocumentListComponent.prototype.contextActionHandlerSubscription;\n/** @type {?} */\nDocumentListComponent.prototype.documentListService;\n/** @type {?} */\nDocumentListComponent.prototype.ngZone;\n/** @type {?} */\nDocumentListComponent.prototype.elementRef;\n/** @type {?} */\nDocumentListComponent.prototype.apiService;\n/** @type {?} */\nDocumentListComponent.prototype.appConfig;\n/** @type {?} */\nDocumentListComponent.prototype.preferences;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n\n    value: MinimalNodeEntity;\n\n    defaultPrevented: boolean;\n/**\n * @param {?} entity\n */\nconstructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nfunction NodeEntityEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeEntityEvent.prototype.value;\n/** @type {?} */\nNodeEntityEvent.prototype.defaultPrevented;\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n\n    value: MinimalNodeEntryEntity;\n\n    defaultPrevented: boolean;\n/**\n * @param {?} entity\n */\nconstructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nfunction NodeEntryEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeEntryEvent.prototype.value;\n/** @type {?} */\nNodeEntryEvent.prototype.defaultPrevented;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, AuthenticationService, ContentService, LogService, PermissionsEnum, ThumbnailService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/throw';\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n/**\n * @param {?} authService\n * @param {?} contentService\n * @param {?} apiService\n * @param {?} logService\n * @param {?} thumbnailService\n */\nconstructor(authService: AuthenticationService,\nprivate contentService: ContentService,\nprivate apiService: AlfrescoApiService,\nprivate logService: LogService,\nprivate thumbnailService: ThumbnailService) {\n    }\n/**\n * @param {?} folder\n * @param {?=} opts\n * @return {?}\n */\nprivate getNodesPromise(folder: string, opts?: any): Promise<NodePaging> {\n\n        let /** @type {?} */ rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let /** @type {?} */ params: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n/**\n * @param {?} nodeId\n * @return {?}\n */\ndeleteNode(nodeId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n/**\n * Copy a node to destination node\n * \n * @param {?} nodeId The id of the node to be copied\n * @param {?} targetParentId The id of the folder-node where the node have to be copied to\n * @return {?}\n */\ncopyNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Move a node to destination node\n * \n * @param {?} nodeId The id of the node to be moved\n * @param {?} targetParentId The id of the folder-node where the node have to be moved to\n * @return {?}\n */\nmoveNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Create a new folder in the path.\n * @param {?} name Folder name\n * @param {?} parentId Parent folder ID\n * @return {?}\n */\ncreateFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.createFolder(name, '/', parentId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Gets the folder node with the specified relative name path below the root node.\n * @param {?} folder Path to folder.\n * @param {?=} opts Options.\n * @return {?}\n */\ngetFolder(folder: string, opts?: any) {\n        return Observable.fromPromise(this.getNodesPromise(folder, opts))\n            .map(res => /** @type {?} */(( <NodePaging> res)))\n            .catch(err => this.handleError(err));\n    }\n/**\n * @param {?} nodeId\n * @return {?}\n */\ngetFolderNode(nodeId: string): Promise<MinimalNodeEntryEntity> {\n        let /** @type {?} */ opts: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        let /** @type {?} */ nodes: any = this.apiService.getInstance().nodes;\n        return nodes.getNodeInfo(nodeId, opts);\n    }\n/**\n * Get thumbnail URL for the given document node.\n * @param {?} node Node to get URL for.\n * @return {?}\n */\ngetDocumentThumbnailUrl(node: MinimalNodeEntity) {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n/**\n * @param {?} mimeType\n * @return {?}\n */\ngetMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n/**\n * @return {?}\n */\ngetDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n/**\n * @param {?} node\n * @param {?} permission\n * @return {?}\n */\nhasPermission(node: any, permission: PermissionsEnum|string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthenticationService, },\n{type: ContentService, },\n{type: AlfrescoApiService, },\n{type: LogService, },\n{type: ThumbnailService, },\n];\n}\n\nfunction DocumentListService_tsickle_Closure_declarations() {\n/** @type {?} */\nDocumentListService.ROOT_ID;\n/** @type {?} */\nDocumentListService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDocumentListService.ctorParameters;\n/** @type {?} */\nDocumentListService.prototype.contentService;\n/** @type {?} */\nDocumentListService.prototype.apiService;\n/** @type {?} */\nDocumentListService.prototype.logService;\n/** @type {?} */\nDocumentListService.prototype.thumbnailService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean = false;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n            this.disabled = obj.disabled;\n        }\n    }\n}\n\nfunction ContentActionModel_tsickle_Closure_declarations() {\n/** @type {?} */\nContentActionModel.prototype.icon;\n/** @type {?} */\nContentActionModel.prototype.title;\n/** @type {?} */\nContentActionModel.prototype.handler;\n/** @type {?} */\nContentActionModel.prototype.execute;\n/** @type {?} */\nContentActionModel.prototype.target;\n/** @type {?} */\nContentActionModel.prototype.permission;\n/** @type {?} */\nContentActionModel.prototype.disableWithNoPermission;\n/** @type {?} */\nContentActionModel.prototype.disabled;\n}\n\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\nexport class DocumentActionModel extends ContentActionModel {\n/**\n * @param {?=} json\n */\nconstructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\nexport class FolderActionModel extends  ContentActionModel {\n/**\n * @param {?=} json\n */\nconstructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter } from '@alfresco/adf-core';\nimport { TimeAgoPipe } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { NodePaging } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ShareDataRow } from './share-data-row.model';\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\nprivate sorting: DataSorting;\nprivate rows: DataRow[];\nprivate columns: DataColumn[];\nprivate filter: any;\nprivate imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n/**\n * @param {?} documentListService\n * @param {?=} schema\n * @param {?=} sorting\n */\nconstructor(private documentListService: DocumentListService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting) {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n    }\n/**\n * @return {?}\n */\ngetRows(): Array<DataRow> {\n        return this.rows;\n    }\n/**\n * @param {?} rows\n * @return {?}\n */\nsetRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n/**\n * @return {?}\n */\ngetColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n/**\n * @param {?} columns\n * @return {?}\n */\nsetColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n/**\n * @param {?} row\n * @param {?} col\n * @return {?}\n */\ngetValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let /** @type {?} */ dataRow: ShareDataRow = /** @type {?} */(( <ShareDataRow> row));\n        let /** @type {?} */ value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.type === 'date') {\n            try {\n                const /** @type {?} */ result = this.formatDate(col, value);\n                return dataRow.cacheValue(col.key, result);\n            } catch ( /** @type {?} */err) {\n                console.error(`Error parsing date ${value} to format ${col.format}`);\n                return 'Error';\n            }\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let /** @type {?} */ resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const /** @type {?} */ node = ( /** @type {?} */((<ShareDataRow> row))).node;\n\n            if (node.entry.isFolder) {\n                return this.documentListService.getMimeTypeIcon('folder');\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const /** @type {?} */ mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let /** @type {?} */ resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n/**\n * @param {?} col\n * @param {?} value\n * @return {?}\n */\nformatDate(col: DataColumn, value: any): string {\n        if (col.type === 'date') {\n            const /** @type {?} */ format = col.format || 'medium';\n            if (format === 'timeAgo') {\n                const /** @type {?} */ timeAgoPipe = new TimeAgoPipe();\n                return timeAgoPipe.transform(value);\n            } else {\n                const /** @type {?} */ datePipe = new DatePipe('en-US');\n                return datePipe.transform(value, format);\n            }\n        }\n\n        return value;\n    }\n/**\n * @return {?}\n */\ngetSorting(): DataSorting {\n        return this.sorting;\n    }\n/**\n * @param {?} sorting\n * @return {?}\n */\nsetSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n/**\n * @param {?=} key\n * @param {?=} direction\n * @return {?}\n */\nsort(key?: string, direction?: string): void {\n        let /** @type {?} */ sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nsetFilter(filter: any) {\n        this.filter = filter;\n    }\n/**\n * @param {?} resolver\n * @return {?}\n */\nsetImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n/**\n * @param {?} rows\n * @param {?} sorting\n * @return {?}\n */\nprivate sortRows(rows: DataRow[], sorting: DataSorting) {\n        const /** @type {?} */ options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let /** @type {?} */ left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let /** @type {?} */ right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n/**\n * @param {?} page\n * @param {?=} merge\n * @return {?}\n */\npublic loadPage(page: NodePaging, merge: boolean = false) {\n        let /** @type {?} */ rows = [];\n\n        if (page && page.list) {\n            let /** @type {?} */ data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                // Sort by first sortable or just first column\n                if (this.columns && this.columns.length > 0) {\n                    let /** @type {?} */ sorting = this.getSorting();\n                    if (sorting) {\n                        this.sortRows(rows, sorting);\n                    } else {\n                        let /** @type {?} */ sortable = this.columns.filter(c => c.sortable);\n                        if (sortable.length > 0) {\n                            this.sort(sortable[0].key, 'asc');\n                        } else {\n                            this.sort(this.columns[0].key, 'asc');\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            this.rows = this.rows.concat(rows);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n\nfunction ShareDataTableAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nShareDataTableAdapter.prototype.ERR_ROW_NOT_FOUND;\n/** @type {?} */\nShareDataTableAdapter.prototype.ERR_COL_NOT_FOUND;\n/** @type {?} */\nShareDataTableAdapter.prototype.sorting;\n/** @type {?} */\nShareDataTableAdapter.prototype.rows;\n/** @type {?} */\nShareDataTableAdapter.prototype.columns;\n/** @type {?} */\nShareDataTableAdapter.prototype.filter;\n/** @type {?} */\nShareDataTableAdapter.prototype.imageResolver;\n/** @type {?} */\nShareDataTableAdapter.prototype.thumbnails;\n/** @type {?} */\nShareDataTableAdapter.prototype.permissionsStyle;\n/** @type {?} */\nShareDataTableAdapter.prototype.selectedRow;\n/** @type {?} */\nShareDataTableAdapter.prototype.documentListService;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataRow } from '@alfresco/adf-core';\nimport { ObjectUtils } from '@alfresco/adf-core';\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n/**\n * @return {?}\n */\nget node(): MinimalNodeEntity {\n        return this.obj;\n    }\n/**\n * @param {?} obj\n * @param {?} documentListService\n * @param {?} permissionsStyle\n */\nconstructor(private obj: MinimalNodeEntity,\nprivate documentListService: DocumentListService,\nprivate permissionsStyle: PermissionStyleModel[]) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n/**\n * @param {?} nodeEntity\n * @return {?}\n */\ngetPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let /** @type {?} */ permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n/**\n * @param {?} node\n * @param {?} currentPermissionsStyle\n * @return {?}\n */\nprivate applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n/**\n * @param {?} node\n * @param {?} currentPermissionsStyle\n * @return {?}\n */\nprivate applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nisFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nisFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\ncacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ngetValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nhasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n\nfunction ShareDataRow_tsickle_Closure_declarations() {\n/** @type {?} */\nShareDataRow.ERR_OBJECT_NOT_FOUND;\n/** @type {?} */\nShareDataRow.prototype.cache;\n/** @type {?} */\nShareDataRow.prototype.isSelected;\n/** @type {?} */\nShareDataRow.prototype.isDropTarget;\n/** @type {?} */\nShareDataRow.prototype.cssClass;\n/** @type {?} */\nShareDataRow.prototype.obj;\n/** @type {?} */\nShareDataRow.prototype.documentListService;\n/** @type {?} */\nShareDataRow.prototype.permissionsStyle;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let /** @type {?} */ presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\n\nimport { PipeModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\nexport class UploadModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        PipeModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UploadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nUploadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    \n    enabled: boolean = true;\n\n    \n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    \n    filesEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    \n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\nprivate cssClassName: string = 'file-draggable__input-focus';\nprivate element: HTMLElement;\n/**\n * @param {?} el\n * @param {?} ngZone\n */\nconstructor(el: ElementRef,\nprivate ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n/**\n * Method called when files is dropped in the drag and drop area.\n * @param {?} event DOM event.\n * @return {?}\n */\nonDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            let /** @type {?} */ items = event.dataTransfer.items;\n            if (items) {\n                for (let /** @type {?} */ i = 0; i < items.length; i++) {\n                    if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                        let /** @type {?} */ item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            if (item.isFile) {\n                                this.filesEntityDropped.emit(item);\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    } else {\n                        let /** @type {?} */ files = FileUtils.toFileArray(event.dataTransfer.files);\n                        this.filesDropped.emit(files);\n                    }\n                }\n            } else {\n                // safari or FF\n                let /** @type {?} */ files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n/**\n * Change the style of the drag area when a file drag in.\n * \n * @param {?} event\n * @return {?}\n */\nonDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n/**\n * Change the style of the drag area when a file drag out.\n * \n * @param {?} event\n * @return {?}\n */\nonDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n/**\n * Change the style of the drag area when a file is over the drag area.\n * \n * @param {?} event\n * @return {?}\n */\nonDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n/**\n * Prevent default and stop propagation of the DOM event.\n * \n * @param {?} event\n * @return {?}\n */\npreventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[file-draggable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'enabled': [{ type: Input, args: ['file-draggable', ] },],\n'filesDropped': [{ type: Output },],\n'filesEntityDropped': [{ type: Output },],\n'folderEntityDropped': [{ type: Output },],\n};\n}\n\nfunction FileDraggableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFileDraggableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileDraggableDirective.ctorParameters;\n/** @type {?} */\nFileDraggableDirective.propDecorators;\n/** @type {?} */\nFileDraggableDirective.prototype.files;\n/** @type {?} */\nFileDraggableDirective.prototype.enabled;\n/** @type {?} */\nFileDraggableDirective.prototype.filesDropped;\n/** @type {?} */\nFileDraggableDirective.prototype.filesEntityDropped;\n/** @type {?} */\nFileDraggableDirective.prototype.folderEntityDropped;\n/** @type {?} */\nFileDraggableDirective.prototype.cssClassName;\n/** @type {?} */\nFileDraggableDirective.prototype.element;\n/** @type {?} */\nFileDraggableDirective.prototype.ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {\n    EXTENDIBLE_COMPONENT,\n    FileInfo,\n    FileModel,\n    FileUtils,\n    NodePermissionSubject,\n    NotificationService,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';\nexport class UploadDragAreaComponent implements NodePermissionSubject {\n\n    \n    disabled: boolean = false;\n\n    \n    versioning: boolean = false;\n\n    \n    parentId: string;\n\n    \n    success = new EventEmitter();\n/**\n * @param {?} uploadService\n * @param {?} translateService\n * @param {?} notificationService\n */\nconstructor(private uploadService: UploadService,\nprivate translateService: TranslationService,\nprivate notificationService: NotificationService) {\n    }\n/**\n * Method called when files are dropped in the drag area.\n * \n * @param {?} files\n * @return {?}\n */\nonFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            const /** @type {?} */ fileModels = files.map(file => new FileModel(file, {\n                newVersion: this.versioning,\n                path: '/',\n                parentId: this.parentId\n            }));\n            this.uploadService.addToQueue(...fileModels);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n        }\n    }\n/**\n * Called when the file are dropped in the drag area\n * \n * @param {?} item - FileEntity\n * @return {?}\n */\nonFilesEntityDropped(item: any): void {\n        if (!this.disabled) {\n            item.file((file: File) => {\n                const /** @type {?} */ fileModel = new FileModel(file, {\n                    newVersion: this.versioning,\n                    parentId: this.parentId,\n                    path: item.fullPath.replace(item.name, '')\n                });\n                this.uploadService.addToQueue(fileModel);\n                this.uploadService.uploadFilesInTheQueue(this.success);\n            });\n        }\n    }\n/**\n * Called when a folder are dropped in the drag area\n * \n * @param {?} folder - name of the dropped folder\n * @return {?}\n */\nonFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flattern(folder).then(entries => {\n                let /** @type {?} */ files = entries.map(entry => {\n                    return new FileModel(entry.file, {\n                        newVersion: this.versioning,\n                        parentId: this.parentId,\n                        path: entry.relativeFolder\n                    });\n                });\n                this.uploadService.addToQueue(...files);\n                this.uploadService.uploadFilesInTheQueue(this.success);\n            });\n        }\n    }\n/**\n * Show undo notification bar.\n * \n * @param {?} latestFilesAdded\n * @return {?}\n */\nshowUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let /** @type {?} */ messageTranslate: any, /** @type {?} */ actionTranslate: any;\n        messageTranslate = this.translateService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translateService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n/**\n * Show the error inside Notification bar\n * \n * @param {?} errorMessage\n * @return {?}\n */\nshowErrorNotificationBar(errorMessage: string) {\n        this.notificationService.openSnackMessage(errorMessage, 3000);\n    }\n/**\n * Returns true or false considering the component options and node permissions\n * @return {?}\n */\nisDroppable(): boolean {\n        return !this.disabled;\n    }\n/**\n * Handles 'upload-files' events raised by child components.\n * \n * @param {?} event DOM event\n * @return {?}\n */\nonUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        let /** @type {?} */ isAllowed: boolean = this.hasCreatePermission(event.detail.data.obj.entry);\n        if (isAllowed) {\n            let /** @type {?} */ files: FileInfo[] = event.detail.files;\n            if (files && files.length > 0) {\n                let /** @type {?} */ parentId = this.parentId;\n                if (event.detail.data && event.detail.data.obj.entry.isFolder) {\n                    parentId = event.detail.data.obj.entry.id || this.parentId;\n                }\n                const /** @type {?} */ fileModels = files.map(fileInfo => new FileModel(fileInfo.file, {\n                    newVersion: this.versioning,\n                    path: fileInfo.relativeFolder,\n                    parentId: parentId\n                }));\n                this.uploadFiles(fileModels);\n            }\n        }\n    }\n/**\n * Does the actual file uploading and show the notification\n * \n * @param {?} files\n * @return {?}\n */\nprivate uploadFiles(files: FileModel[]): void {\n        if (files.length) {\n            this.uploadService.addToQueue(...files);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n        }\n    }\n/**\n * Check if \"create\" permission is present on the given node\n * \n * @param {?} node\n * @return {?}\n */\nprivate hasCreatePermission(node: any): boolean {\n        let /** @type {?} */ isPermitted = false;\n        if (node && node['allowableOperations']) {\n            let /** @type {?} */ permFound = node['allowableOperations'].find(element => element === 'create');\n            isPermitted = permFound ? true : false;\n        }\n        return isPermitted;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-upload-drag-area',\n    template: `\n      <div [file-draggable]=\"isDroppable()\" id=\"UploadBorder\" class=\"upload-border\"\n           (filesDropped)=\"onFilesDropped($event)\"\n           (filesEntityDropped)=\"onFilesEntityDropped($event)\"\n           (folderEntityDropped)=\"onFolderEntityDropped($event)\"\n           (upload-files)=\"onUploadFiles($event)\"\n           dropzone=\"\" webkitdropzone=\"*\" #droparea>\n          <ng-content></ng-content>\n      </div>\n    `,\n    styles: [`\n      .upload-border {\n          vertical-align: middle;\n          text-align: center;\n      }\n\n      .file-draggable__input-focus {\n          color: #2196F3;\n          border: 1px dashed #2196F3;\n      }\n    `],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent)}\n    ],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UploadService, },\n{type: TranslationService, },\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'versioning': [{ type: Input },],\n'parentId': [{ type: Input },],\n'success': [{ type: Output },],\n};\n}\n\nfunction UploadDragAreaComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUploadDragAreaComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploadDragAreaComponent.ctorParameters;\n/** @type {?} */\nUploadDragAreaComponent.propDecorators;\n/** @type {?} */\nUploadDragAreaComponent.prototype.disabled;\n/** @type {?} */\nUploadDragAreaComponent.prototype.versioning;\n/** @type {?} */\nUploadDragAreaComponent.prototype.parentId;\n/** @type {?} */\nUploadDragAreaComponent.prototype.success;\n/** @type {?} */\nUploadDragAreaComponent.prototype.uploadService;\n/** @type {?} */\nUploadDragAreaComponent.prototype.translateService;\n/** @type {?} */\nUploadDragAreaComponent.prototype.notificationService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {\n    AlfrescoApiService,\n    EXTENDIBLE_COMPONENT,\n    FileModel,\n    FileUtils,\n    LogService,\n    NodePermissionSubject,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport'rxjs/add/observable/throw';\nexport class UploadButtonComponent implements OnInit, OnChanges, NodePermissionSubject {\n\n    \n    disabled: boolean = false;\n\n    \n    uploadFolders: boolean = false;\n\n    \n    multipleFiles: boolean = false;\n\n    \n    versioning: boolean = false;\n\n    \n    acceptedFilesType: string = '*';\n\n    \n    maxFilesSize: number;\n\n    \n    staticTitle: string;\n\n    \n    tooltip: string = null;\n\n    \n    rootFolderId: string = '-root-';\n\n    \n    success = new EventEmitter();\n\n    \n    error = new EventEmitter();\n\n    \n    createFolder = new EventEmitter();\n\n    \n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\nprivate hasPermission: boolean = false;\nprivate permissionValue: Subject<boolean> = new Subject<boolean>();\n/**\n * @param {?} uploadService\n * @param {?} translateService\n * @param {?} logService\n * @param {?} apiService\n */\nconstructor(private uploadService: UploadService,\nprivate translateService: TranslationService,\nprivate logService: LogService,\nprivate apiService: AlfrescoApiService) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasPermission = permission;\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n/**\n * @return {?}\n */\nisButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonFilesAdded($event: any): void {\n        let /** @type {?} */ files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasPermission) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nonDirectoryAdded($event: any): void {\n        if (this.hasPermission) {\n            let /** @type {?} */ files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n/**\n * Upload a list of file in the specified path\n * @param {?} files\n * @return {?}\n */\nuploadFiles(files: File[]): void {\n        const /** @type {?} */ latestFilesAdded: FileModel[] = files\n            .map<FileModel>(this.createFileModel.bind(this))\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        if (latestFilesAdded.length > 0) {\n            this.uploadService.addToQueue(...latestFilesAdded);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n        }\n    }\n/**\n * Creates FileModel from File\n * \n * @param {?} file\n * @return {?}\n */\nprivate createFileModel(file: File): FileModel {\n        return new FileModel(file, {\n            newVersion: this.versioning,\n            parentId: this.rootFolderId,\n            path: (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, '')\n        });\n    }\n/**\n * Checks if the given file is allowed by the extension filters\n * \n * @param {?} file FileModel\n * @return {?}\n */\nprivate isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const /** @type {?} */ allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map(ext => ext.replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n/**\n * Checks if the given file is an acceptable size\n * \n * @param {?} file FileModel\n * @return {?}\n */\nprivate isFileSizeAcceptable(file: FileModel): boolean {\n        let /** @type {?} */ acceptableSize = true;\n\n        if ((this.maxFilesSize !== undefined && this.maxFilesSize !== null ) && (this.maxFilesSize <= 0 || file.size > this.maxFilesSize)) {\n            acceptableSize = false;\n\n            this.translateService.get('FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE', {fileName: file.name}).subscribe((message: string) => {\n                this.error.emit(message);\n            });\n        }\n\n        return acceptableSize;\n    }\n/**\n * @return {?}\n */\ncheckPermission() {\n        if (this.rootFolderId) {\n            this.getFolderNode(this.rootFolderId).subscribe(\n                res => this.permissionValue.next(this.hasCreatePermission(res)),\n                error => this.error.emit(error)\n            );\n        }\n    }\n/**\n * @param {?} nodeId\n * @return {?}\n */\ngetFolderNode(nodeId: string): Observable<MinimalNodeEntryEntity> {\n        let /** @type {?} */ opts: any = {\n            includeSource: true,\n            include: ['allowableOperations']\n        };\n\n        return Observable.fromPromise(this.apiService.getInstance().nodes.getNodeInfo(nodeId, opts))\n            .catch(err => this.handleError(err));\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate hasCreatePermission(node: any): boolean {\n        if (node && node.allowableOperations) {\n            return node.allowableOperations.find(permission => permission === 'create') ? true : false;\n        }\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-upload-button',\n    template: `\n      <form class=\"adf-upload-button-file-container\">\n          <!--Files Upload-->\n          <a *ngIf=\"!uploadFolders\"\n              [disabled]=\"isButtonDisabled()\"\n              mat-raised-button color=\"primary\">\n              <mat-icon>file_upload</mat-icon>\n\n              <!--Multiple Files Upload-->\n              <span *ngIf=\"multipleFiles\">\n                  <label\n                      id=\"upload-multiple-file-label\"\n                      *ngIf=\"!staticTitle\"\n                      for=\"upload-multiple-files\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n                  <label\n                      id=\"upload-multiple-file-label-static\"\n                      *ngIf=\"staticTitle\"\n                      for=\"upload-multiple-files\">{{ staticTitle }}</label>\n                  <input #uploadFiles\n                      id=\"upload-multiple-files\"\n                      data-automation-id=\"upload-multiple-files\"\n                      type=\"file\"\n                      name=\"uploadFiles\"\n                      multiple=\"multiple\"\n                      accept=\"{{acceptedFilesType}}\"\n                      [attr.disabled]=\"isButtonDisabled()\"\n                      [title]=\"tooltip\"\n                      (change)=\"onFilesAdded($event)\">\n              </span>\n\n              <!--Single Files Upload-->\n              <span *ngIf=\"!multipleFiles\">\n                  <label\n                      id=\"upload-single-file-label\"\n                      *ngIf=\"!staticTitle\"\n                      for=\"upload-single-file\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n                  <label\n                      id=\"upload-single-file-label-static\"\n                      *ngIf=\"staticTitle\"\n                      for=\"upload-single-file\">{{ staticTitle }}</label>\n                  <input #uploadFiles\n                      id=\"upload-single-file\"\n                      data-automation-id=\"upload-single-file\"\n                      type=\"file\"\n                      name=\"uploadFiles\"\n                      accept=\"{{acceptedFilesType}}\"\n                      [attr.disabled]=\"isButtonDisabled()\"\n                      [title]=\"tooltip\"\n                      (change)=\"onFilesAdded($event)\">\n              </span>\n          </a>\n\n          <!--Folders Upload-->\n          <a *ngIf=\"uploadFolders\"\n              [disabled]=\"isButtonDisabled()\" mat-raised-button color=\"primary\">\n              <mat-icon>file_upload</mat-icon>\n              <label\n                  id=\"uploadFolder-label\"\n                  *ngIf=\"!staticTitle\"\n                  for=\"uploadFolder\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER' | translate }}</label>\n              <label\n                  id=\"uploadFolder-label-static\"\n                  *ngIf=\"staticTitle\"\n                  for=\"uploadFolder\">{{ staticTitle }}</label>\n              <input #uploadFolders\n                  id=\"uploadFolder\"\n                  data-automation-id=\"uploadFolder\"\n                  type=\"file\"\n                  name=\"uploadFiles\"\n                  multiple=\"multiple\"\n                  accept=\"{{acceptedFilesType}}\"\n                  webkitdirectory directory\n                  [attr.disabled]=\"isButtonDisabled()\"\n                  [title]=\"tooltip\"\n                  (change)=\"onDirectoryAdded($event)\">\n          </a>\n      </form>\n    `,\n    styles: [`\n      .adf-upload-button-file-container input {\n        cursor: pointer;\n        height: 100%;\n        right: 0;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        width: 300px;\n        z-index: 4; }\n    `],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UploadService, },\n{type: TranslationService, },\n{type: LogService, },\n{type: AlfrescoApiService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'uploadFolders': [{ type: Input },],\n'multipleFiles': [{ type: Input },],\n'versioning': [{ type: Input },],\n'acceptedFilesType': [{ type: Input },],\n'maxFilesSize': [{ type: Input },],\n'staticTitle': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'rootFolderId': [{ type: Input },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'createFolder': [{ type: Output },],\n'permissionEvent': [{ type: Output },],\n};\n}\n\nfunction UploadButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUploadButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUploadButtonComponent.ctorParameters;\n/** @type {?} */\nUploadButtonComponent.propDecorators;\n/** @type {?} */\nUploadButtonComponent.prototype.disabled;\n/** @type {?} */\nUploadButtonComponent.prototype.uploadFolders;\n/** @type {?} */\nUploadButtonComponent.prototype.multipleFiles;\n/** @type {?} */\nUploadButtonComponent.prototype.versioning;\n/** @type {?} */\nUploadButtonComponent.prototype.acceptedFilesType;\n/** @type {?} */\nUploadButtonComponent.prototype.maxFilesSize;\n/** @type {?} */\nUploadButtonComponent.prototype.staticTitle;\n/** @type {?} */\nUploadButtonComponent.prototype.tooltip;\n/** @type {?} */\nUploadButtonComponent.prototype.rootFolderId;\n/** @type {?} */\nUploadButtonComponent.prototype.success;\n/** @type {?} */\nUploadButtonComponent.prototype.error;\n/** @type {?} */\nUploadButtonComponent.prototype.createFolder;\n/** @type {?} */\nUploadButtonComponent.prototype.permissionEvent;\n/** @type {?} */\nUploadButtonComponent.prototype.hasPermission;\n/** @type {?} */\nUploadButtonComponent.prototype.permissionValue;\n/** @type {?} */\nUploadButtonComponent.prototype.uploadService;\n/** @type {?} */\nUploadButtonComponent.prototype.translateService;\n/** @type {?} */\nUploadButtonComponent.prototype.logService;\n/** @type {?} */\nUploadButtonComponent.prototype.apiService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n\nfunction PermissionModel_tsickle_Closure_declarations() {\n/** @type {?} */\nPermissionModel.prototype.type;\n/** @type {?} */\nPermissionModel.prototype.action;\n/** @type {?} */\nPermissionModel.prototype.permission;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FileUploadingListRowComponent {\n    \n    file: FileModel;\n\n    \n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    \n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n/**\n * @param {?} file\n * @return {?}\n */\nonCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n/**\n * @param {?} file\n * @return {?}\n */\nonRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-file-uploading-list-row',\n    template: `\n      <div class=\"adf-file-uploading-row\">\n          <mat-icon\n              mat-list-icon\n              class=\"adf-file-uploading-row__type\">\n              insert_drive_file\n          </mat-icon>\n\n          <span\n              class=\"adf-file-uploading-row__name\"\n              title=\"{{ file.name }}\">\n              {{ file.name }}\n          </span>\n\n          <div\n              *ngIf=\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\"\n              (click)=\"onCancel(file)\"\n              class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n              title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\">\n              <span class=\"adf-file-uploading-row__status\">\n                  {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n              </span>\n\n              <mat-icon\n                  mat-list-icon\n                  class=\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\">\n                  clear\n              </mat-icon>\n          </div>\n\n          <div\n              *ngIf=\"file.status === FileUploadStatus.Complete\"\n              (click)=\"onRemove(file)\"\n              class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n              title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\">\n              <mat-icon\n                  mat-list-icon\n                  class=\"adf-file-uploading-row__status adf-file-uploading-row__status--done\">\n                  check_circle\n              </mat-icon>\n\n              <mat-icon\n                  mat-list-icon\n                  class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n                  remove_circle\n              </mat-icon>\n          </div>\n\n          <div\n              *ngIf=\"file.status === FileUploadStatus.Pending\"\n              (click)=\"onCancel(file)\"\n              class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\">\n              <mat-icon\n                  mat-list-icon\n                  class=\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\">\n                  schedule\n              </mat-icon>\n\n              <mat-icon\n                  mat-list-icon\n                  class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n                  remove_circle\n              </mat-icon>\n          </div>\n\n          <div\n              *ngIf=\"file.status === FileUploadStatus.Error\"\n              class=\"adf-file-uploading-row__block adf-file-uploading-row__status--error\"\n              title=\"{{ file.response }}\">\n              <mat-icon mat-list-icon>\n                  report_problem\n              </mat-icon>\n          </div>\n\n          <div\n              *ngIf=\"file.status === FileUploadStatus.Cancelled  ||\n                  file.status === FileUploadStatus.Aborted ||\n                  file.status === FileUploadStatus.Deleted\"\n              class=\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\">\n              {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\n          </div>\n      <div>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'file': [{ type: Input },],\n'cancel': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction FileUploadingListRowComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFileUploadingListRowComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileUploadingListRowComponent.ctorParameters;\n/** @type {?} */\nFileUploadingListRowComponent.propDecorators;\n/** @type {?} */\nFileUploadingListRowComponent.prototype.file;\n/** @type {?} */\nFileUploadingListRowComponent.prototype.cancel;\n/** @type {?} */\nFileUploadingListRowComponent.prototype.remove;\n/** @type {?} */\nFileUploadingListRowComponent.prototype.FileUploadStatus;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n         FileUploadErrorEvent, FileUploadStatus, UploadService } from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\nimport'rxjs/add/observable/merge';\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    \n    uploadList: FileUploadingListComponent;\n\n    \n    position: string = 'right';\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\nprivate listSubscription: Subscription;\nprivate counterSubscription: Subscription;\nprivate fileUploadSubscription: Subscription;\nprivate errorSubscription: Subscription;\n/**\n * @param {?} uploadService\n * @param {?} changeDetecor\n */\nconstructor(\nprivate uploadService: UploadService,\nprivate changeDetecor: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n        });\n\n        this.counterSubscription = Observable\n            .merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent|FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetecor.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                let /** @type {?} */ file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetecor.detectChanges();\n                }\n            }\n        });\n    }\n/**\n * Toggle confirmation message.\n * @return {?}\n */\ntoggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n/**\n * Cancel uploads and hide confiramtion\n * @return {?}\n */\ncancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n/**\n * Toggle dialog minimized state.\n * @return {?}\n */\ntoggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetecor.detectChanges();\n    }\n/**\n * Dismiss dialog\n * @return {?}\n */\nclose(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetecor.detectChanges();\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-file-uploading-dialog, file-uploading-dialog',\n    template: `\n      <div *ngIf=\"isDialogActive\"\n           class=\"upload-dialog\"\n           [class.upload-dialog--minimized]=\"isDialogMinimized\"\n           [class.upload-dialog--position-left]=\"position === 'left'\"\n           [class.upload-dialog--position-right]=\"position === 'right'\">\n          <header class=\"upload-dialog__header\">\n              <button\n                  mat-button\n                  color=\"secondary\"\n                  [disabled]=\"isConfirmation\"\n                  (click)=\"toggleMinimized()\">\n                  <mat-icon\n                      mat-list-icon\n                      title=\"{{ (isDialogMinimized ? 'ADF_FILE_UPLOAD.BUTTON.MAXIMIZE': 'ADF_FILE_UPLOAD.BUTTON.MINIMIZE') | translate }}\">\n                          {{ isDialogMinimized ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}\n                  </mat-icon>\n              </button>\n\n              <span\n                  class=\"upload-dialog__title\"\n                  *ngIf=\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\">\n                  {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS'\n                      | translate: {\n                          completed: totalCompleted,\n                          total: filesUploadingList.length\n                      }\n                  }}\n              </span>\n\n              <span\n                  class=\"upload-dialog__title\"\n                  *ngIf=\"uploadList.isUploadCompleted()\">\n                  {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_COMPLETED'\n                      | translate: {\n                          completed: totalCompleted,\n                          total: filesUploadingList.length\n                      }\n                  }}\n              </span>\n\n              <span\n                  class=\"upload-dialog__title\"\n                  *ngIf=\"uploadList.isUploadCancelled()\">\n                  {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED' | translate }}\n              </span>\n          </header>\n\n          <section\n              class=\"upload-dialog__info\"\n              *ngIf=\"totalErrors\">\n              {{\n                  (totalErrors > 1\n                       ? 'FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS'\n                       : 'FILE_UPLOAD.MESSAGES.UPLOAD_ERROR')\n                       | translate: { total: totalErrors }\n              }}\n          </section>\n\n          <section\n              class=\"upload-dialog__content\"\n              [class.upload-dialog--padding]=\"isConfirmation\">\n              <adf-file-uploading-list\n                  [class.upload-dialog--hide]=\"isConfirmation\"\n                  #uploadList\n                  [files]=\"filesUploadingList\">\n                      <ng-template let-file=\"$implicit\">\n                           <adf-file-uploading-list-row\n                              [file]=\"file\"\n                              (remove)=\"uploadList.removeFile(file)\"\n                              (cancel)=\"uploadList.cancelFile(file)\">\n                          </adf-file-uploading-list-row>\n                      </ng-template>\n              </adf-file-uploading-list>\n\n              <div\n                  class=\"upload-dialog__confirmation\"\n                  [class.upload-dialog--hide]=\"!isConfirmation\">\n                      <p class=\"upload-dialog__confirmation--title\">\n                          {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE' | translate }}\n                      </p>\n\n                      <p class=\"upload-dialog__confirmation--text\">\n                          {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT' | translate }}\n                      </p>\n              </div>\n          </section>\n\n          <footer\n              class=\"upload-dialog__actions\"\n              [class.upload-dialog--hide]=\"isConfirmation\">\n              <button\n                  color=\"primary\"\n                  mat-button\n                  *ngIf=\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\"\n                  (click)=\"toggleConfirmation()\">\n                  {{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL' | translate }}\n              </button>\n\n              <button\n                  *ngIf=\"uploadList.isUploadCompleted() || uploadList.isUploadCancelled()\"\n                  mat-button\n                  color=\"primary\"\n                  (click)=\"close($event)\">\n                  {{ 'ADF_FILE_UPLOAD.BUTTON.CLOSE' | translate }}\n              </button>\n          </footer>\n\n          <footer\n              class=\"upload-dialog__actions\"\n              [class.upload-dialog--hide]=\"!isConfirmation\">\n              <button\n                  color=\"secondary\"\n                  mat-button\n                  (click)=\"cancelAllUploads()\">\n                  {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL' | translate }}\n              </button>\n\n              <button\n                  mat-button\n                  color=\"primary\"\n                  (click)=\"toggleConfirmation()\">\n                  {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE' | translate }}\n              </button>\n          </footer>\n      </div>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UploadService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uploadList': [{ type: ViewChild, args: [FileUploadingListComponent, ] },],\n'position': [{ type: Input },],\n};\n}\n\nfunction FileUploadingDialogComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFileUploadingDialogComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileUploadingDialogComponent.ctorParameters;\n/** @type {?} */\nFileUploadingDialogComponent.propDecorators;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.uploadList;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.position;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.filesUploadingList;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.isDialogActive;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.totalCompleted;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.totalErrors;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.isDialogMinimized;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.isConfirmation;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.listSubscription;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.counterSubscription;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.fileUploadSubscription;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.errorSubscription;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.uploadService;\n/** @type {?} */\nFileUploadingDialogComponent.prototype.changeDetecor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { FileModel, FileUploadStatus, NodesApiService, NotificationService, TranslationService, UploadService } from '@alfresco/adf-core';\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nexport class FileUploadingListComponent {\n\n    FileUploadStatus = FileUploadStatus;\n\n    \n    template: any;\n\n    \n    files: FileModel[] = [];\n/**\n * @param {?} uploadService\n * @param {?} nodesApi\n * @param {?} notificationService\n * @param {?} translateService\n */\nconstructor(\nprivate uploadService: UploadService,\nprivate nodesApi: NodesApiService,\nprivate notificationService: NotificationService,\nprivate translateService: TranslationService) {\n    }\n/**\n * Cancel file upload\n * \n * \n * \\@memberOf FileUploadingListComponent\n * @param {?} file\n * @return {?}\n */\ncancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n/**\n * @param {?} file\n * @return {?}\n */\nremoveFile(file: FileModel): void {\n        this.deleteNode(file)\n            .subscribe(() => {\n                if ( file.status === FileUploadStatus.Error) {\n                    this.notifyError(file);\n                }\n\n                this.uploadService.cancelUpload(file);\n            });\n    }\n/**\n * Call the appropriate method for each file, depending on state\n * @return {?}\n */\ncancelAllFiles(): void {\n        this.getUploadingFiles()\n            .forEach((file) => this.uploadService.cancelUpload(file));\n\n        const /** @type {?} */ deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        Observable.forkJoin(...deletedFiles)\n            .subscribe((files: FileModel[]) => {\n                const /** @type {?} */ errors = files\n                    .filter((file) => file.status === FileUploadStatus.Error);\n\n                if (errors.length) {\n                    this.notifyError(...errors);\n                }\n\n                this.uploadService.cancelUpload(...files);\n            });\n    }\n/**\n * Checks if all the files are uploaded\n * @return {?}\n */\nisUploadCompleted(): boolean {\n         return !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files\n                .some(({status}) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n                );\n    }\n/**\n * Check if all the files are Cancelled | Aborted | Error.\n * @return {?}\n */\nisUploadCancelled(): boolean {\n        return !!this.files.length &&\n            this.files\n                .every(({status}) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n                );\n    }\n/**\n * @param {?} file\n * @return {?}\n */\nprivate deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi\n            .deleteNode(id, { permanent: true })\n            .map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            })\n            .catch((error) => {\n                file.status = FileUploadStatus.Error;\n                return Observable.of(file);\n            });\n    }\n/**\n * @param {...?} files\n * @return {?}\n */\nprivate notifyError(...files: FileModel[]) {\n        let /** @type {?} */ translateSubscription = null;\n\n        if (files.length === 1) {\n            translateSubscription = this.translateService\n                .get(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                    { fileName: files[0].name}\n                );\n        } else {\n            translateSubscription = this.translateService\n                .get(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                    { total: files.length }\n                );\n        }\n\n        translateSubscription\n            .subscribe(message => this.notificationService.openSnackMessage(message, 4000));\n    }\n/**\n * @return {?}\n */\nprivate getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-file-uploading-list',\n    template: `\n      <div class=\"upload-list\">\n          <ng-template\n              ngFor\n              [ngForOf]=\"files\"\n              [ngForTemplate]=\"template\">\n          </ng-template>\n      </div>\n    `,\n    styles: [`\n      :host {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: vertical;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: column;\n                flex-direction: column; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UploadService, },\n{type: NodesApiService, },\n{type: NotificationService, },\n{type: TranslationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n'files': [{ type: Input },],\n};\n}\n\nfunction FileUploadingListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFileUploadingListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileUploadingListComponent.ctorParameters;\n/** @type {?} */\nFileUploadingListComponent.propDecorators;\n/** @type {?} */\nFileUploadingListComponent.prototype.FileUploadStatus;\n/** @type {?} */\nFileUploadingListComponent.prototype.template;\n/** @type {?} */\nFileUploadingListComponent.prototype.files;\n/** @type {?} */\nFileUploadingListComponent.prototype.uploadService;\n/** @type {?} */\nFileUploadingListComponent.prototype.nodesApi;\n/** @type {?} */\nFileUploadingListComponent.prototype.notificationService;\n/** @type {?} */\nFileUploadingListComponent.prototype.translateService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataTableModule, PipeModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\nexport class WebScriptModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        PipeModule,\n        MaterialModule,\n        DataTableModule,\n        TranslateModule\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebScriptModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWebScriptModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebScriptModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n * \n * This component, provide a get webscript viewer\n * \n * \\@InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * \\@InputParam {Object} scriptArgs arguments to pass to Web Script\n * \\@InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * \\@InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * \\@InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n * \n * \\@Output - success - The event is emitted when the data are recived\n * \n */\nexport class WebscriptComponent implements OnChanges {\n\n    \n    scriptPath: string;\n\n    \n    scriptArgs: any;\n\n    \n    showData: boolean = true;\n\n    \n    contextRoot: string = 'alfresco';\n\n    \n    servicePath: string = 'service';\n\n    \n    contentType: string = 'TEXT';\n\n    \n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n/**\n * @param {?} apiService\n * @param {?} logService\n */\nconstructor(private apiService: AlfrescoApiService,\nprivate logService: LogService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n/**\n * show the data in a ng2-alfresco-datatable\n * \n * \\@retutns the data as datatable\n * @param {?} data \n * \n * @return {?}\n */\nshowDataAsDataTable(data: any) {\n        let /** @type {?} */ datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch ( /** @type {?} */e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n/**\n * @return {?}\n */\nclean() {\n        this.data = undefined;\n    }\n/**\n * @return {?}\n */\nisDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-webscript-get',\n    template: `\n      <div *ngIf=\"showData\">\n          <div *ngIf=\"contentType === 'JSON'\" id=\"webscript-data-JSON\">{{data | json}}</div>\n          <div *ngIf=\"contentType === 'HTML'\" id=\"webscript-data-HTML\" [innerHTML]=\"data\"></div>\n          <div *ngIf=\"contentType === 'TEXT'\" id=\"webscript-data-TEXT\">{{data}}</div>\n          <div *ngIf=\"isDataTableContent()\">\n              <adf-datatable id=\"webscript-datatable-wrapper\" [data]=\"data\"></adf-datatable>\n              <div>\n                  <div *ngIf=\"showError\" id=\"error\">{{'WEBSCRIPT.ERROR' | translate: {\n                      data: data,\n                      contentType: contentType\n                      }\n                      }}\n                  </div>\n              </div>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'scriptPath': [{ type: Input },],\n'scriptArgs': [{ type: Input },],\n'showData': [{ type: Input },],\n'contextRoot': [{ type: Input },],\n'servicePath': [{ type: Input },],\n'contentType': [{ type: Input },],\n'success': [{ type: Output },],\n};\n}\n\nfunction WebscriptComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWebscriptComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebscriptComponent.ctorParameters;\n/** @type {?} */\nWebscriptComponent.propDecorators;\n/** @type {?} */\nWebscriptComponent.prototype.scriptPath;\n/** @type {?} */\nWebscriptComponent.prototype.scriptArgs;\n/** @type {?} */\nWebscriptComponent.prototype.showData;\n/** @type {?} */\nWebscriptComponent.prototype.contextRoot;\n/** @type {?} */\nWebscriptComponent.prototype.servicePath;\n/** @type {?} */\nWebscriptComponent.prototype.contentType;\n/** @type {?} */\nWebscriptComponent.prototype.success;\n/** @type {?} */\nWebscriptComponent.prototype.data;\n/** @type {?} */\nWebscriptComponent.prototype.showError;\n/** @type {?} */\nWebscriptComponent.prototype.apiService;\n/** @type {?} */\nWebscriptComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { TagService } from './services/tag.service';\nexport class TagModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    providers: [\n        TagService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n/**\n * \n * This component, ShowNodeTag a list of the tag on relative a node\n * \n */\nexport class TagNodeListComponent implements OnChanges {\n\n    \n    nodeId: string;\n\n    tagsEntries: any;\n\n    \n    results = new EventEmitter();\n/**\n * Constructor\n * @param {?} tagService\n */\nconstructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n/**\n * @return {?}\n */\nngOnChanges() {\n        return this.refreshTag();\n    }\n/**\n * @return {?}\n */\nrefreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.results.emit(this.tagsEntries);\n        });\n    }\n/**\n * @param {?} tag\n * @return {?}\n */\nremoveTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-tag-node-list',\n    template: `\n      <mat-chip-list>\n          <mat-chip class=\"adf-tag-chips adf-primary-background-color\" *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n              <span id=\"tag_name_{{idx}}\">{{currentEntry.entry.tag}}</span>\n              <button class=\"adf-tag-chips-delete\" id=\"tag_delete_{{idx}}\" type=\"button\" (click)=\"removeTag(currentEntry.entry.id)\">\n                  <mat-icon class=\"adf-tag-chips-delete-icon adf-primary-contrast-text-color\" matChipRemove>cancel</mat-icon>\n              </button>\n          </mat-chip>\n      </mat-chip-list>\n    `,\n    styles: [`\n      .adf-tag-chips-delete {\n        overflow: visible;\n        cursor: pointer;\n        height: 17px;\n        width: 20px;\n        float: right;\n        border: 0;\n        background: none;\n        padding: 0;\n        margin: -1px 0px 0px 10px; }\n\n      .adf-tag-chips-delete-icon {\n        font-size: 20px;\n        background-repeat: no-repeat;\n        display: inline-block;\n        fill: currentColor;\n        height: 20px;\n        width: 20px; }\n    `],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TagService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nodeId': [{ type: Input },],\n'results': [{ type: Output },],\n};\n}\n\nfunction TagNodeListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagNodeListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagNodeListComponent.ctorParameters;\n/** @type {?} */\nTagNodeListComponent.propDecorators;\n/** @type {?} */\nTagNodeListComponent.prototype.nodeId;\n/** @type {?} */\nTagNodeListComponent.prototype.tagsEntries;\n/** @type {?} */\nTagNodeListComponent.prototype.results;\n/** @type {?} */\nTagNodeListComponent.prototype.tagService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n/**\n * \n * This component provide a list of all the tag inside the ECM\n * \n */\nexport class TagListComponent implements OnInit {\n\n    tagsEntries: any;\n\n    \n    result = new EventEmitter();\n/**\n * Constructor\n * @param {?} tagService\n */\nconstructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        return this.refreshTag();\n    }\n/**\n * @return {?}\n */\nrefreshTag() {\n        this.tagService.getAllTheTags().subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.result.emit(this.tagsEntries);\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-tag-list',\n    template: `\n      <mat-list>\n          <mat-list-item *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n              <div class=\"adf-list-tag\" id=\"tag_name_{{idx}}\">{{currentEntry.entry.tag}}</div>\n          </mat-list-item>\n      </mat-list>\n    `,\n    styles: [`\n      .adf-list-tag {\n        padding: 16px;\n        font-size: 16px; }\n    `],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TagService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'result': [{ type: Output },],\n};\n}\n\nfunction TagListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagListComponent.ctorParameters;\n/** @type {?} */\nTagListComponent.propDecorators;\n/** @type {?} */\nTagListComponent.prototype.tagsEntries;\n/** @type {?} */\nTagListComponent.prototype.result;\n/** @type {?} */\nTagListComponent.prototype.tagService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n/**\n * \n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n * \n */\nexport class TagActionsComponent implements OnChanges {\n\n    \n    nodeId: string;\n\n    \n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    \n    error: EventEmitter<any> = new EventEmitter();\n\n    \n    result = new EventEmitter();\n\n    newTagName: string;\n\n    tagsEntries: any;\n\n    errorMsg: string;\n\n    disableAddTag: boolean = true;\n/**\n * @param {?} tagService\n * @param {?} translateService\n */\nconstructor(private tagService: TagService,\nprivate translateService: TranslationService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n/**\n * @return {?}\n */\nngOnChanges() {\n        return this.refreshTag();\n    }\n/**\n * @return {?}\n */\nrefreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.disableAddTag = false;\n            this.result.emit(this.tagsEntries);\n        }, () => {\n            this.tagsEntries = null;\n            this.disableAddTag = true;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n/**\n * @return {?}\n */\naddTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n/**\n * @param {?} searchTagName\n * @return {?}\n */\nsearchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n/**\n * @return {?}\n */\ncleanErrorMsg() {\n        this.errorMsg = '';\n    }\n/**\n * @param {?} tag\n * @return {?}\n */\nremoveTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-tag-node-actions-list',\n    template: `\n      <mat-list>\n          <mat-list-item *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n              <div class=\"adf-tag-actions-container\" id=\"tag_delete_{{idx}}\" (click)=\"removeTag(currentEntry.entry.id)\">\n                  <div class=\"adf-tag-actions-delete-text\" id=\"tag_name_{{idx}}\">\n                      {{currentEntry.entry.tag}}\n                  </div>\n                  <mat-icon class=\"adf-tag-actions-delete-icon\">delete</mat-icon>\n              </div>\n          </mat-list-item>\n      </mat-list>\n      <table class=\"adf-full-width\" cellspacing=\"0\">\n          <tr>\n              <td>\n                  <mat-form-field class=\"adf-full-width\">\n                      <input matInput placeholder=\"{{'TAG.LABEL.NEWTAG' | translate }}\"\n                             type=\"text\"\n                             (keypress)=\"cleanErrorMsg()\"\n                             [(ngModel)]=\"newTagName\"\n                             id=\"new-tag-text\"/>\n                      <mat-hint *ngIf=\"error\" [ngStyle]=\"{'color': 'red'}\" align=\"start\">{{errorMsg}}</mat-hint>\n                  </mat-form-field>\n              </td>\n              <td>\n                  <button class=\"adf-full-width\" color=\"primary\" id=\"add-tag\" (click)=\"addTag()\" [disabled]=\"disableAddTag\"\n                          mat-raised-button>\n                      {{'TAG.BUTTON.ADD' | translate }}\n                  </button>\n              </td>\n          </tr>\n      </table>\n    `,\n    styles: [`\n      .adf-full-width {\n        width: 100%; }\n\n      .adf-tag-actions-delete-icon {\n        float: right;\n        cursor: pointer; }\n\n      .adf-tag-actions-delete-text {\n        font-size: 16px;\n        float: left; }\n\n      .adf-tag-actions-container {\n        padding: 8px 0 8px 0;\n        height: 20px; }\n    `],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TagService, },\n{type: TranslationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nodeId': [{ type: Input },],\n'successAdd': [{ type: Output },],\n'error': [{ type: Output },],\n'result': [{ type: Output },],\n};\n}\n\nfunction TagActionsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagActionsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagActionsComponent.ctorParameters;\n/** @type {?} */\nTagActionsComponent.propDecorators;\n/** @type {?} */\nTagActionsComponent.prototype.nodeId;\n/** @type {?} */\nTagActionsComponent.prototype.successAdd;\n/** @type {?} */\nTagActionsComponent.prototype.error;\n/** @type {?} */\nTagActionsComponent.prototype.result;\n/** @type {?} */\nTagActionsComponent.prototype.newTagName;\n/** @type {?} */\nTagActionsComponent.prototype.tagsEntries;\n/** @type {?} */\nTagActionsComponent.prototype.errorMsg;\n/** @type {?} */\nTagActionsComponent.prototype.disableAddTag;\n/** @type {?} */\nTagActionsComponent.prototype.tagService;\n/** @type {?} */\nTagActionsComponent.prototype.translateService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/throw';\nexport class TagService {\n\n    \n    refresh = new EventEmitter();\n/**\n * @param {?} apiService\n * @param {?} logService\n */\nconstructor(private apiService: AlfrescoApiService,\nprivate logService: LogService) {\n    }\n/**\n * @param {?} nodeId\n * @return {?}\n */\ngetTagsByNodeId(nodeId: string): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * @return {?}\n */\ngetAllTheTags() {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getTags())\n            .catch(err => this.handleError(err));\n    }\n/**\n * @param {?} nodeId\n * @param {?} tagName\n * @return {?}\n */\naddTag(nodeId: string, tagName: string): any {\n        let /** @type {?} */ alfrescoApi: any = this.apiService.getInstance();\n        let /** @type {?} */ tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let /** @type {?} */ promiseAdd = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n/**\n * @param {?} nodeId\n * @param {?} tag\n * @return {?}\n */\nremoveTag(nodeId: string, tag: string): any {\n        let /** @type {?} */ promiseRemove = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'refresh': [{ type: Output },],\n};\n}\n\nfunction TagService_tsickle_Closure_declarations() {\n/** @type {?} */\nTagService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagService.ctorParameters;\n/** @type {?} */\nTagService.propDecorators;\n/** @type {?} */\nTagService.prototype.refresh;\n/** @type {?} */\nTagService.prototype.apiService;\n/** @type {?} */\nTagService.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { RatingService } from './services/rating.service';\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\nexport class SocialModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ],\n    providers: [\n        RatingService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SocialModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nexport class RatingComponent implements OnChanges {\n\n    \n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    \n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n/**\n * @param {?} ratingService\n */\nconstructor(private ratingService: RatingService) {\n    }\n/**\n * @return {?}\n */\nngOnChanges() {\n        let /** @type {?} */ ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n/**\n * @return {?}\n */\ncalculateStars() {\n        this.stars = [];\n\n        for (let /** @type {?} */ i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n/**\n * @param {?} vote\n * @return {?}\n */\nupdateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-rating',\n    styles: [`\n      .adf-rating-container {\n        overflow: hidden;\n        width: 100%; }\n        .adf-rating-container .adf-rating-star {\n          float: left;\n          -webkit-transition: all .3s;\n          transition: all .3s;\n          padding: 1px;\n          cursor: pointer; }\n          .adf-rating-container .adf-rating-star .mat-list-item-content {\n            padding: 0 2px !important; }\n        .adf-rating-container .adf-colored-star {\n          color: #ffe944; }\n        .adf-rating-container .adf-grey-star {\n          color: #808080; }\n        .adf-rating-container .adf-stars-container {\n          padding: 0 !important;\n          margin: 0 !important;\n          display: inline-block; }\n        .adf-rating-container .adf-rating-star:hover {\n          -webkit-transform: rotate(13deg) scale(1.2);\n                  transform: rotate(13deg) scale(1.2); }\n    `],\n    template: `\n      <mat-list id=\"adf-rating-container\" class=\"adf-rating-container\">\n          <mat-list-item class=\"adf-rating-star\" *ngFor=\"let currentRate of stars; let idx = index\">\n                  <span id=\"adf-rate-{{idx}}\">\n                      <mat-icon id=\"adf-grey-star-{{idx}}\" *ngIf=\"currentRate.fill\" class=\"adf-colored-star\"\n                               (click)=\"updateVote(idx + 1)\">star_rate\n                      </mat-icon>\n                      <mat-icon id=\"adf-colored-star-{{idx}}\" *ngIf=\"!currentRate.fill\" class=\"adf-grey-star\"\n                               (click)=\"updateVote(idx + 1)\">star_border\n                      </mat-icon>\n                  </span>\n          </mat-list-item>\n      </mat-list>\n    `,\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RatingService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nodeId': [{ type: Input },],\n'changeVote': [{ type: Output },],\n};\n}\n\nfunction RatingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRatingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRatingComponent.ctorParameters;\n/** @type {?} */\nRatingComponent.propDecorators;\n/** @type {?} */\nRatingComponent.prototype.nodeId;\n/** @type {?} */\nRatingComponent.prototype.average;\n/** @type {?} */\nRatingComponent.prototype.ratingType;\n/** @type {?} */\nRatingComponent.prototype.changeVote;\n/** @type {?} */\nRatingComponent.prototype.stars;\n/** @type {?} */\nRatingComponent.prototype.ratingService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nexport class LikeComponent implements OnChanges {\n\n    \n    nodeId: string;\n\n    \n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n/**\n * @param {?} ratingService\n */\nconstructor(private ratingService: RatingService) {}\n/**\n * @return {?}\n */\nngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n/**\n * @return {?}\n */\nlikeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n/**\n * @return {?}\n */\nclean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-like',\n    styles: [`\n      .adf-like-container {\n        overflow: hidden;\n        width: 100%; }\n        .adf-like-container .adf-like {\n          padding: 5px;\n          cursor: pointer;\n          float: left;\n          margin: 5px 0px 5px 5px; }\n        .adf-like-container .adf-like-select {\n          cursor: pointer;\n          color: #2196f3; }\n        .adf-like-container .adf-like-select:hover {\n          cursor: pointer;\n          color: #808080; }\n        .adf-like-container .adf-like-grey {\n          cursor: pointer;\n          color: #808080; }\n        .adf-like-container .adf-like-grey:hover {\n          cursor: pointer;\n          color: #2196f3; }\n        .adf-like-container .adf-like-counter {\n          float: left;\n          padding: 13px 0 0 0; }\n        .adf-like-container .adf-left {\n          float: left;\n          padding: 13px 0 0 4px; }\n    `],\n    template: `\n      <div id=\"adf-like-container\" class=\"adf-like-container\">\n          <div class=\"adf-like\">\n              <span id=\"adf-like-{{nodeId}}\" [ngClass]=\"{'adf-like-select': isLike ,'adf-like-grey': !isLike  }\"\n                    (click)=\"likeClick()\">\n                  <mat-icon>thumb_up</mat-icon>\n              </span>\n          </div>\n          <div id=\"adf-like-counter\" class=\"adf-like-counter\">{{likesCounter}}</div>\n          <div class=\"adf-left\" *ngIf=\"likesCounter<=1\">Like</div>\n          <div class=\"adf-left\" *ngIf=\"likesCounter>1\">Likes</div>\n      </div>\n    `,\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RatingService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nodeId': [{ type: Input },],\n'changeVote': [{ type: Output },],\n};\n}\n\nfunction LikeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLikeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLikeComponent.ctorParameters;\n/** @type {?} */\nLikeComponent.propDecorators;\n/** @type {?} */\nLikeComponent.prototype.nodeId;\n/** @type {?} */\nLikeComponent.prototype.changeVote;\n/** @type {?} */\nLikeComponent.prototype.likesCounter;\n/** @type {?} */\nLikeComponent.prototype.ratingType;\n/** @type {?} */\nLikeComponent.prototype.isLike;\n/** @type {?} */\nLikeComponent.prototype.ratingService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/throw';\nexport class RatingService {\n/**\n * @param {?} apiService\n */\nconstructor(private apiService: AlfrescoApiService) {\n    }\n/**\n * @param {?} nodeId\n * @param {?} ratingType\n * @return {?}\n */\ngetRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n/**\n * @param {?} nodeId\n * @param {?} ratingType\n * @param {?} vote\n * @return {?}\n */\npostRating(nodeId: string, ratingType: any, vote: any): any {\n        let /** @type {?} */ ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n/**\n * @param {?} nodeId\n * @param {?} ratingType\n * @return {?}\n */\ndeleteRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: Response): any {\n        console.error(error);\n        return Observable.throw(error || 'Server error');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n];\n}\n\nfunction RatingService_tsickle_Closure_declarations() {\n/** @type {?} */\nRatingService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRatingService.ctorParameters;\n/** @type {?} */\nRatingService.prototype.apiService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatSelectModule\n} from '@angular/material';\n/**\n * @return {?}\n */\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatSelectModule\n    ];\n}\nexport class MaterialModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: modules(),\n    exports: modules()\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MaterialModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMaterialModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaterialModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Subject","merge","fromEvent","Observable","iterator_1","__extends","iterator","isArray_1","errorObject_1","WindowSubscriber","state","dispatchNext","queue_1","RefCountSubscriber","RefCountOperator","refCount","Map_1","root_1","rxSubscriber_1","Set_1","debounceTime","async_1","observable_1","isArrayLike_1","observeOn","root","observable","Observer_1","global"],"mappings":"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"}
