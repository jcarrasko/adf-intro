/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare const fakeNodeWithCreatePermission: {
    isFile: boolean;
    createdByUser: {
        id: string;
        displayName: string;
    };
    modifiedAt: string;
    nodeType: string;
    parentId: string;
    createdAt: string;
    path: {
        name: string;
        isComplete: boolean;
        elements: {
            id: string;
            name: string;
        }[];
    };
    isFolder: boolean;
    modifiedByUser: {
        id: string;
        displayName: string;
    };
    name: string;
    id: string;
    properties: {};
    allowableOperations: string[];
};
export declare const fakeNodeWithNoPermission: {
    isFile: boolean;
    createdByUser: {
        id: string;
        displayName: string;
    };
    modifiedAt: string;
    nodeType: string;
    parentId: string;
    aspectNames: string[];
    createdAt: string;
    path: {
        name: string;
        isComplete: boolean;
        elements: {
            id: string;
            name: string;
        }[];
    };
    isFolder: boolean;
    modifiedByUser: {
        id: string;
        displayName: string;
    };
    name: string;
    id: string;
    properties: {};
};
export declare const fakeNodeAnswerWithEntries: {
    'list': {
        'pagination': {
            'count': number;
            'hasMoreItems': boolean;
            'totalItems': number;
            'skipCount': number;
            'maxItems': number;
        };
        'entries': {
            'entry': {
                'isFile': boolean;
                'createdByUser': {
                    'id': string;
                    'displayName': string;
                };
                'modifiedAt': string;
                'nodeType': string;
                'content': {
                    'mimeType': string;
                    'mimeTypeName': string;
                    'sizeInBytes': number;
                    'encoding': string;
                };
                'parentId': string;
                'createdAt': string;
                'path': {
                    'name': string;
                    'isComplete': boolean;
                    'elements': {
                        'id': string;
                        'name': string;
                    }[];
                };
                'isFolder': boolean;
                'modifiedByUser': {
                    'id': string;
                    'displayName': string;
                };
                'name': string;
                'id': string;
                'properties': {
                    'cm:versionLabel': string;
                    'cm:versionType': string;
                };
                'allowableOperations': string[];
            };
        }[];
    };
};
export declare const fakeNodeAnswerWithNOEntries: {
    'list': {
        'pagination': {
            'count': number;
            'hasMoreItems': boolean;
            'totalItems': number;
            'skipCount': number;
            'maxItems': number;
        };
        'entries': any[];
    };
};
