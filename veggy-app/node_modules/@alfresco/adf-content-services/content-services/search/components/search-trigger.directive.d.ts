/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectorRef, ElementRef, NgZone, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Observable } from 'rxjs/Observable';
import { SearchComponent } from './search.component';
export declare const AUTOCOMPLETE_OPTION_HEIGHT = 48;
export declare const AUTOCOMPLETE_PANEL_HEIGHT = 256;
export declare const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any;
export declare class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {
    private element;
    private ngZone;
    private changeDetectorRef;
    private document;
    searchPanel: SearchComponent;
    private _panelOpen;
    private closingActionsSubscription;
    private escapeEventStream;
    onChange: (value: any) => void;
    onTouched: () => void;
    constructor(element: ElementRef, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, document: any);
    ngOnDestroy(): void;
    readonly panelOpen: boolean;
    openPanel(): void;
    closePanel(): void;
    readonly panelClosingActions: Observable<any>;
    private readonly outsideClickStream;
    writeValue(value: any): void;
    registerOnChange(fn: (value: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    handleKeydown(event: KeyboardEvent): void;
    handleInput(event: KeyboardEvent): void;
    private isPanelOptionClicked(event);
    private isNoResultOption(event);
    private subscribeToClosingActions();
    private setTriggerValue(value);
    private setValueAndClose(event);
}
