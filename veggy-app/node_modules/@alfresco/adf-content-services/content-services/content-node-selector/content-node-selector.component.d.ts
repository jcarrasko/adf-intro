/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit } from '@angular/core';
import { AlfrescoApiService, ContentService, HighlightDirective, SiteModel, UserPreferencesService } from '@alfresco/adf-core';
import { FormControl } from '@angular/forms';
import { MatDialogRef } from '@angular/material';
import { MinimalNodeEntryEntity, NodePaging, Pagination, Site } from 'alfresco-js-api';
import { DocumentListComponent, PaginationStrategy } from '../document-list/components/document-list.component';
import { RowFilter } from '../document-list/data/row-filter.model';
import { ImageResolver } from '../document-list/data/image-resolver.model';
import { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';
import { ContentNodeSelectorService } from './content-node-selector.service';
export declare class ContentNodeSelectorComponent implements OnInit {
    private contentNodeSelectorService;
    private contentService;
    private apiService;
    private preferences;
    private containingDialog;
    nodes: NodePaging | null;
    siteId: null | string;
    searchTerm: string;
    showingSearchResults: boolean;
    loadingSearchResults: boolean;
    inDialog: boolean;
    chosenNode: MinimalNodeEntryEntity | Site | null;
    folderIdToShow: string | null;
    paginationStrategy: PaginationStrategy;
    pagination: Pagination;
    skipCount: number;
    infiniteScroll: boolean;
    buttonActionName: string;
    title: string;
    actionName: string;
    currentFolderId: string | null;
    dropdownHideMyFiles: boolean;
    dropdownSiteList: any[];
    rowFilter: RowFilter;
    imageResolver: ImageResolver;
    pageSize: number;
    select: EventEmitter<MinimalNodeEntryEntity[]>;
    documentList: DocumentListComponent;
    highlighter: HighlightDirective;
    searchInput: FormControl;
    constructor(contentNodeSelectorService: ContentNodeSelectorService, contentService: ContentService, apiService: AlfrescoApiService, preferences: UserPreferencesService, data?: ContentNodeSelectorComponentData, containingDialog?: MatDialogRef<ContentNodeSelectorComponent>);
    ngOnInit(): void;
    siteChanged(chosenSite: SiteModel): void;
    search(searchTerm: string): void;
    needBreadcrumbs(): true | MinimalNodeEntryEntity | Site;
    readonly breadcrumbFolderNode: MinimalNodeEntryEntity | null;
    clear(): void;
    private updateResults();
    private startNewSearch();
    getNextPageOfSearch(event: Pagination): void;
    private querySearch();
    private showSearchResults(results);
    highlight(): void;
    onNodeSelect(event: any): void;
    onFolderChange(): void;
    onFolderLoaded(nodePage: NodePaging): void;
    private attemptNodeSelection(entry);
    resetChosenNode(): void;
    choose(): void;
    close(): void;
    onNodeDoubleClick(e: CustomEvent): void;
}
