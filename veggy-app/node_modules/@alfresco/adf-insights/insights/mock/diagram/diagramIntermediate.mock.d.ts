/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare let intermediateCatchingTimeEvent: {
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingTimeEventActive: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingTimeEventCompleted: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingErrorEvent: {
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingErrorEventActive: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingErrorEventCompleted: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingSignalEvent: {
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingSignalEventActive: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingSignalEventCompleted: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingMessageEvent: {
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingMessageEventActive: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
export declare let intermediateCatchingMessageEventCompleted: {
    completed: boolean;
    current: boolean;
    id: string;
    type: string;
    width: number;
    height: number;
    x: number;
    y: number;
    properties: {}[];
    eventDefinition: {
        type: string;
    };
};
