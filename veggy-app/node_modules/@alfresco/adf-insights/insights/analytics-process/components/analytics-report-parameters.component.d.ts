/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ContentService, LogService } from '@alfresco/adf-core';
import { AfterContentChecked, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { MatDialog } from '@angular/material';
import { ReportParametersModel } from '../../diagram/models/report/reportParameters.model';
import { ReportQuery } from '../../diagram/models/report/reportQuery.model';
import { AnalyticsService } from '../services/analytics.service';
export declare class AnalyticsReportParametersComponent implements OnInit, OnChanges, OnDestroy, AfterContentChecked {
    private analyticsService;
    private formBuilder;
    private logService;
    private contentService;
    private dialog;
    static FORMAT_DATE_ACTIVITI: string;
    appId: number;
    reportId: string;
    hideComponent: boolean;
    success: EventEmitter<{}>;
    error: EventEmitter<{}>;
    edit: EventEmitter<{}>;
    formValueChanged: EventEmitter<{}>;
    saveReportSuccess: EventEmitter<{}>;
    deleteReportSuccess: EventEmitter<{}>;
    reportNameDialog: any;
    onDropdownChanged: EventEmitter<{}>;
    successReportParams: EventEmitter<{}>;
    successParamOpt: EventEmitter<{}>;
    reportParameters: ReportParametersModel;
    reportForm: FormGroup;
    action: string;
    isEditable: boolean;
    reportName: string;
    private dropDownSub;
    private reportParamsSub;
    private paramOpts;
    private reportParamQuery;
    private hideParameters;
    formValidState: boolean;
    constructor(analyticsService: AnalyticsService, formBuilder: FormBuilder, logService: LogService, contentService: ContentService, dialog: MatDialog);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private generateFormGroupFromParameter(parameters);
    getReportParams(reportId: string): void;
    private retrieveParameterOptions(parameters, appId, reportId?, processDefinitionId?);
    onProcessDefinitionChanges(field: any): void;
    submit(values: any): void;
    onValueChanged(values: any): void;
    onStatusChanged(status: any): void;
    convertMomentDate(date: string): string;
    getTodayDate(): string;
    convertNumber(value: string): number;
    convertFormValuesToReportParamQuery(values: any): ReportQuery;
    ngOnDestroy(): void;
    editEnable(): void;
    editDisable(): void;
    editTitle(): void;
    showDialog(event: string): void;
    closeDialog(): void;
    performAction(action: string, reportParamQuery: ReportQuery): void;
    resetActions(): void;
    isSaveAction(): boolean;
    isFormValid(): boolean;
    doExport(paramQuery: ReportQuery): void;
    doSave(paramQuery: ReportQuery): void;
    deleteReport(reportId: string): void;
    ngAfterContentChecked(): void;
    toggleParameters(): void;
    isParametersHide(): boolean;
}
