/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { ReportParametersModel } from '../../diagram/models/report/reportParameters.model';
import { AnalyticsService } from '../services/analytics.service';
export declare class AnalyticsReportListComponent implements OnInit {
    private analyticsService;
    static LAYOUT_LIST: string;
    static LAYOUT_GRID: string;
    layoutType: string;
    appId: number;
    selectFirst: boolean;
    reportClick: EventEmitter<ReportParametersModel>;
    success: EventEmitter<{}>;
    error: EventEmitter<{}>;
    private reportObserver;
    report$: Observable<any>;
    currentReport: any;
    reports: ReportParametersModel[];
    constructor(analyticsService: AnalyticsService);
    ngOnInit(): void;
    initObserver(): void;
    /**
     * Reload the component
     */
    reload(reportId?: any): void;
    /**
     * Get the report list
     */
    getReportList(appId: number, reportId?: string): void;
    /**
     * Create the default reports and return the report list
     */
    createDefaultReports(): void;
    /**
     * Check if the report list is empty
     * @returns {boolean|ReportParametersModel[]}
     */
    isReportsEmpty(): boolean;
    /**
     * Reset the list
     */
    private reset();
    /**
     * Select the current report
     * @param report
     */
    selectReport(report: any): void;
    selectReportByReportId(reportId: any): void;
    selectFirstReport(): void;
    isSelected(report: any): boolean;
    isList(): boolean;
    isGrid(): boolean;
}
