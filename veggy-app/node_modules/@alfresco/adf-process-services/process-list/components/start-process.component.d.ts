/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { StartFormComponent } from '@alfresco/adf-core';
import { ProcessInstanceVariable } from '../models/process-instance-variable.model';
import { ProcessDefinitionRepresentation } from './../models/process-definition.model';
import { ProcessInstance } from './../models/process-instance.model';
import { ProcessService } from './../services/process.service';
export declare class StartProcessInstanceComponent implements OnChanges {
    private activitiProcess;
    appId: number;
    variables: ProcessInstanceVariable[];
    start: EventEmitter<ProcessInstance>;
    cancel: EventEmitter<ProcessInstance>;
    error: EventEmitter<ProcessInstance>;
    startForm: StartFormComponent;
    processDefinitions: ProcessDefinitionRepresentation[];
    name: string;
    currentProcessDef: ProcessDefinitionRepresentation;
    errorMessageId: string;
    constructor(activitiProcess: ProcessService);
    ngOnChanges(changes: SimpleChanges): void;
    load(appId?: number): void;
    startProcess(outcome?: string): void;
    onProcessDefChange(processDefinitionId: any): void;
    cancelStartProcess(): void;
    hasStartForm(): boolean;
    isProcessDefinitionEmpty(): string | true;
    isStartFormMissingOrValid(): boolean;
    validateForm(): boolean;
    private resetSelectedProcessDefinition();
    private resetErrorMessage();
    hasErrorMessage(): boolean;
    onOutcomeClick(outcome: string): void;
    reset(): void;
    hasProcessName(): boolean;
}
