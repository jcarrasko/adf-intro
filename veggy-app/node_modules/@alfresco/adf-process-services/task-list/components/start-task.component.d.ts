/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogService, PeopleProcessService, UserPreferencesService, UserProcessModel } from '@alfresco/adf-core';
import { EventEmitter, OnInit } from '@angular/core';
import { DateAdapter } from '@angular/material/core';
import { Moment } from 'moment';
import { Form } from '../models/form.model';
import { StartTaskModel } from '../models/start-task.model';
import { TaskListService } from './../services/tasklist.service';
export declare class StartTaskComponent implements OnInit {
    private taskService;
    private peopleService;
    private dateAdapter;
    private preferences;
    private logService;
    FORMAT_DATE: string;
    appId: number;
    success: EventEmitter<any>;
    cancel: EventEmitter<void>;
    error: EventEmitter<any>;
    people: UserProcessModel[];
    startTaskmodel: StartTaskModel;
    forms: Form[];
    assigneeId: number;
    formKey: number;
    taskId: string;
    dateError: boolean;
    /**
     * Constructor
     * @param auth
     * @param translate
     * @param taskService
     */
    constructor(taskService: TaskListService, peopleService: PeopleProcessService, dateAdapter: DateAdapter<Moment>, preferences: UserPreferencesService, logService: LogService);
    ngOnInit(): void;
    start(): void;
    private attachForm(taskId, formKey);
    private assignTaskByUserId(taskId, userId);
    onCancel(): void;
    private loadFormsTask();
    private getUsers();
    isUserNameEmpty(user: UserProcessModel): boolean;
    private isEmpty(data);
    getDisplayUser(firstName: string, lastName: string, delimiter?: string): string;
    onDateChanged(newDateValue: any): void;
}
