{"version":3,"file":"adf-process-services.es5.js","sources":["~/@alfresco/adf-process-services/adf-process-services.ts","~/@alfresco/adf-process-services/public-api.ts","~/@alfresco/adf-process-services/index.ts","~/@alfresco/adf-process-services/people/index.ts","~/@alfresco/adf-process-services/people/public-api.ts","~/@alfresco/adf-process-services/comments/index.ts","~/@alfresco/adf-process-services/comments/public-api.ts","~/@alfresco/adf-process-services/attachment/index.ts","~/@alfresco/adf-process-services/attachment/public-api.ts","~/@alfresco/adf-process-services/app-list/index.ts","~/@alfresco/adf-process-services/app-list/public-api.ts","~/@alfresco/adf-process-services/process-list/index.ts","~/@alfresco/adf-process-services/process-list/public-api.ts","~/@alfresco/adf-process-services/process-list/models/process-instance-filter.model.ts","~/@alfresco/adf-process-services/process.module.ts","~/@alfresco/adf-process-services/attachment/attachment.module.ts","~/@alfresco/adf-process-services/attachment/create-task-attachment.component.ts","~/@alfresco/adf-process-services/attachment/create-process-attachment.component.ts","~/@alfresco/adf-process-services/attachment/process-attachment-list.component.ts","~/@alfresco/adf-process-services/attachment/task-attachment-list.component.ts","~/@alfresco/adf-process-services/app-list/apps-list.module.ts","~/@alfresco/adf-process-services/app-list/apps-list.component.ts","~/@alfresco/adf-process-services/app-list/icon.model.ts","~/@alfresco/adf-process-services/process-list/process-list.module.ts","~/@alfresco/adf-process-services/process-list/components/start-process.component.ts","~/@alfresco/adf-process-services/process-list/components/process-list.component.ts","~/@alfresco/adf-process-services/process-list/models/process-preset.model.ts","~/@alfresco/adf-process-services/process-list/components/process-instance-details.component.ts","~/@alfresco/adf-process-services/process-list/components/process-instance-tasks.component.ts","~/@alfresco/adf-process-services/task-list/index.ts","~/@alfresco/adf-process-services/task-list/public-api.ts","~/@alfresco/adf-process-services/task-list/models/task-details.event.ts","~/@alfresco/adf-process-services/process-list/components/process-instance-header.component.ts","~/@alfresco/adf-process-services/process-list/components/process-filters.component.ts","~/@alfresco/adf-process-services/process-list/services/process-filter.service.ts","~/@alfresco/adf-process-services/process-list/models/filter-process.model.ts","~/@alfresco/adf-process-services/process-list/components/process-audit.directive.ts","~/@alfresco/adf-process-services/process-list/services/process.service.ts","~/@alfresco/adf-process-services/process-list/models/process-instance.model.ts","~/@alfresco/adf-process-services/process-list/models/process-instance-variable.model.ts","~/@alfresco/adf-process-services/process-list/models/process-definition.model.ts","~/@alfresco/adf-process-services/task-list/task-list.module.ts","~/@alfresco/adf-process-services/task-list/components/task-list.component.ts","~/@alfresco/adf-process-services/task-list/models/task-preset.model.ts","~/@alfresco/adf-process-services/task-list/components/task-header.component.ts","~/@alfresco/adf-process-services/task-list/components/task-filters.component.ts","~/@alfresco/adf-process-services/task-list/components/task-audit.directive.ts","~/@alfresco/adf-process-services/task-list/components/start-task.component.ts","~/@alfresco/adf-process-services/task-list/models/start-task.model.ts","~/@alfresco/adf-process-services/task-list/components/no-task-detail-template.directive.ts","~/@alfresco/adf-process-services/task-list/components/task-details.component.ts","~/@alfresco/adf-process-services/task-list/components/checklist.component.ts","~/@alfresco/adf-process-services/task-list/services/task-filter.service.ts","~/@alfresco/adf-process-services/task-list/services/tasklist.service.ts","~/@alfresco/adf-process-services/task-list/models/task-details.model.ts","~/@alfresco/adf-process-services/task-list/models/form.model.ts","~/@alfresco/adf-process-services/task-list/models/filter.model.ts","~/@alfresco/adf-process-services/task-list/services/process-upload.service.ts","~/@alfresco/adf-process-services/task-list/services/task-upload.service.ts","~/@alfresco/adf-process-services/comments/comments.module.ts","~/@alfresco/adf-process-services/comments/comments.component.ts","~/@alfresco/adf-process-services/comments/comment-list.component.ts","~/@alfresco/adf-process-services/comments/process-comments.component.ts","~/@alfresco/adf-process-services/people/people.module.ts","~/@alfresco/adf-process-services/people/people-list.component.ts","~/@alfresco/adf-process-services/task-list/models/user-event.model.ts","~/@alfresco/adf-process-services/people/people.component.ts","~/@alfresco/adf-process-services/people/people-search.component.ts","../../../../node_modules/src/operators/index.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/takeUntil.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/debounceTime.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/OuterSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","~/@alfresco/adf-process-services/material.module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ProcessModule,ProcessListModule,TaskListModule,AppsListModule,AttachmentModule,CommentsModule,PeopleModule,ProcessFiltersComponent,ProcessInstanceDetailsComponent,ProcessAuditDirective,ProcessInstanceHeaderComponent,ProcessInstanceTasksComponent,ProcessInstanceListComponent,StartProcessInstanceComponent,ProcessService,ProcessFilterService,FilterProcessRepresentationModel,ProcessFilterParamRepresentationModel,ProcessDefinitionRepresentation,ProcessInstance,ProcessFilterRequestRepresentation,ProcessInstanceVariable,TaskListComponent,ChecklistComponent,TaskHeaderComponent,NoTaskDetailsTemplateDirective,TaskFiltersComponent,TaskDetailsComponent,TaskAuditDirective,StartTaskComponent,TaskListService,ProcessUploadService,TaskUploadService,TaskFilterService,AppDefinitionRepresentationModel,FilterParamsModel,FilterRepresentationModel,FilterParamRepresentationModel,TaskQueryRequestRepresentationModel,TaskDetailsModel,TaskDetailsEvent,UserEventModel,StartTaskModel,TaskListModel,AppsListComponent,TaskAttachmentListComponent,ProcessAttachmentListComponent,CreateProcessAttachmentComponent,AttachmentComponent,ProcessCommentsComponent,CommentListComponent,CommentsComponent,PeopleComponent,PeopleListComponent,PeopleSearchComponent,PeopleSearchTitleDirective,PeopleSearchActionLabelDirective} from './public-api';\n\nexport {AppsListComponent as ɵbf} from './app-list/apps-list.component';\nexport {CreateProcessAttachmentComponent as ɵbi} from './attachment/create-process-attachment.component';\nexport {AttachmentComponent as ɵbj} from './attachment/create-task-attachment.component';\nexport {ProcessAttachmentListComponent as ɵbh} from './attachment/process-attachment-list.component';\nexport {TaskAttachmentListComponent as ɵbg} from './attachment/task-attachment-list.component';\nexport {CommentListComponent as ɵd} from './comments/comment-list.component';\nexport {CommentsComponent as ɵe} from './comments/comments.component';\nexport {ProcessCommentsComponent as ɵc} from './comments/process-comments.component';\nexport {MaterialModule as ɵb,modules as ɵa} from './material.module';\nexport {PeopleListComponent as ɵj} from './people/people-list.component';\nexport {PeopleSearchActionLabelDirective as ɵi,PeopleSearchComponent as ɵg,PeopleSearchTitleDirective as ɵh} from './people/people-search.component';\nexport {PeopleComponent as ɵf} from './people/people.component';\nexport {ProcessAuditDirective as ɵbd} from './process-list/components/process-audit.directive';\nexport {ProcessFiltersComponent as ɵy} from './process-list/components/process-filters.component';\nexport {ProcessInstanceDetailsComponent as ɵba} from './process-list/components/process-instance-details.component';\nexport {ProcessInstanceHeaderComponent as ɵbb} from './process-list/components/process-instance-header.component';\nexport {ProcessInstanceTasksComponent as ɵbc} from './process-list/components/process-instance-tasks.component';\nexport {ProcessInstanceListComponent as ɵw} from './process-list/components/process-list.component';\nexport {StartProcessInstanceComponent as ɵbe} from './process-list/components/start-process.component';\nexport {ProcessFilterService as ɵz} from './process-list/services/process-filter.service';\nexport {ProcessService as ɵx} from './process-list/services/process.service';\nexport {ChecklistComponent as ɵr} from './task-list/components/checklist.component';\nexport {NoTaskDetailsTemplateDirective as ɵk} from './task-list/components/no-task-detail-template.directive';\nexport {StartTaskComponent as ɵt} from './task-list/components/start-task.component';\nexport {TaskAuditDirective as ɵq} from './task-list/components/task-audit.directive';\nexport {TaskDetailsComponent as ɵl} from './task-list/components/task-details.component';\nexport {TaskFiltersComponent as ɵn} from './task-list/components/task-filters.component';\nexport {TaskHeaderComponent as ɵs} from './task-list/components/task-header.component';\nexport {TaskListComponent as ɵp} from './task-list/components/task-list.component';\nexport {ProcessUploadService as ɵv} from './task-list/services/process-upload.service';\nexport {TaskFilterService as ɵo} from './task-list/services/task-filter.service';\nexport {TaskUploadService as ɵu} from './task-list/services/task-upload.service';\nexport {TaskListService as ɵm} from './task-list/services/tasklist.service';","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ProcessModule,ProcessListModule,TaskListModule,AppsListModule,AttachmentModule,CommentsModule,PeopleModule,ProcessFiltersComponent,ProcessInstanceDetailsComponent,ProcessAuditDirective,ProcessInstanceHeaderComponent,ProcessInstanceTasksComponent,ProcessInstanceListComponent,StartProcessInstanceComponent,ProcessService,ProcessFilterService,FilterProcessRepresentationModel,ProcessFilterParamRepresentationModel,ProcessDefinitionRepresentation,ProcessInstance,ProcessFilterRequestRepresentation,ProcessInstanceVariable,TaskListComponent,ChecklistComponent,TaskHeaderComponent,NoTaskDetailsTemplateDirective,TaskFiltersComponent,TaskDetailsComponent,TaskAuditDirective,StartTaskComponent,TaskListService,ProcessUploadService,TaskUploadService,TaskFilterService,AppDefinitionRepresentationModel,FilterParamsModel,FilterRepresentationModel,FilterParamRepresentationModel,TaskQueryRequestRepresentationModel,TaskDetailsModel,TaskDetailsEvent,UserEventModel,StartTaskModel,TaskListModel,AppsListComponent,TaskAttachmentListComponent,ProcessAttachmentListComponent,CreateProcessAttachmentComponent,AttachmentComponent,ProcessCommentsComponent,CommentListComponent,CommentsComponent,PeopleComponent,PeopleListComponent,PeopleSearchComponent,PeopleSearchTitleDirective,PeopleSearchActionLabelDirective} from './index';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ProcessModule} from './process.module';\n\nexport {ProcessListModule} from './process-list/process-list.module';\nexport {TaskListModule} from './task-list/task-list.module';\nexport {AppsListModule} from './app-list/apps-list.module';\nexport {AttachmentModule} from './attachment/attachment.module';\nexport {CommentsModule} from './comments/comments.module';\nexport {PeopleModule} from './people/people.module';\n\nexport {ProcessFiltersComponent,ProcessInstanceDetailsComponent,ProcessAuditDirective,ProcessInstanceHeaderComponent,ProcessInstanceTasksComponent,ProcessInstanceListComponent,StartProcessInstanceComponent,ProcessService,ProcessFilterService,FilterProcessRepresentationModel,ProcessFilterParamRepresentationModel,ProcessDefinitionRepresentation,ProcessInstance,ProcessFilterRequestRepresentation,ProcessInstanceVariable} from './process-list';\nexport {TaskListComponent,ChecklistComponent,TaskHeaderComponent,NoTaskDetailsTemplateDirective,TaskFiltersComponent,TaskDetailsComponent,TaskAuditDirective,StartTaskComponent,TaskListService,ProcessUploadService,TaskUploadService,TaskFilterService,AppDefinitionRepresentationModel,FilterParamsModel,FilterRepresentationModel,FilterParamRepresentationModel,TaskQueryRequestRepresentationModel,TaskDetailsModel,TaskDetailsEvent,UserEventModel,StartTaskModel,TaskListModel} from './task-list';\nexport {AppsListComponent} from './app-list';\nexport {TaskAttachmentListComponent,ProcessAttachmentListComponent,CreateProcessAttachmentComponent,AttachmentComponent} from './attachment';\nexport {ProcessCommentsComponent,CommentListComponent,CommentsComponent} from './comments';\nexport {PeopleComponent,PeopleListComponent,PeopleSearchComponent,PeopleSearchTitleDirective,PeopleSearchActionLabelDirective} from './people';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {PeopleComponent,PeopleListComponent,PeopleSearchComponent,PeopleSearchTitleDirective,PeopleSearchActionLabelDirective} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {PeopleComponent} from './people.component';\nexport {PeopleListComponent} from './people-list.component';\nexport {PeopleSearchComponent,PeopleSearchTitleDirective,PeopleSearchActionLabelDirective} from './people-search.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ProcessCommentsComponent,CommentListComponent,CommentsComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ProcessCommentsComponent} from './process-comments.component';\nexport {CommentListComponent} from './comment-list.component';\nexport {CommentsComponent} from './comments.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TaskAttachmentListComponent,ProcessAttachmentListComponent,CreateProcessAttachmentComponent,AttachmentComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TaskAttachmentListComponent} from './task-attachment-list.component';\nexport {ProcessAttachmentListComponent} from './process-attachment-list.component';\nexport {CreateProcessAttachmentComponent} from './create-process-attachment.component';\nexport {AttachmentComponent} from './create-task-attachment.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {AppsListComponent} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {AppsListComponent} from './apps-list.component';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {ProcessFiltersComponent,ProcessInstanceDetailsComponent,ProcessAuditDirective,ProcessInstanceHeaderComponent,ProcessInstanceTasksComponent,ProcessInstanceListComponent,StartProcessInstanceComponent,ProcessService,ProcessFilterService,FilterProcessRepresentationModel,ProcessFilterParamRepresentationModel,ProcessDefinitionRepresentation,ProcessInstance,ProcessFilterRequestRepresentation,ProcessInstanceVariable} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// component\nexport {ProcessFiltersComponent} from './components/process-filters.component';\nexport {ProcessInstanceDetailsComponent} from './components/process-instance-details.component';\nexport {ProcessAuditDirective} from './components/process-audit.directive';\nexport {ProcessInstanceHeaderComponent} from './components/process-instance-header.component';\nexport {ProcessInstanceTasksComponent} from './components/process-instance-tasks.component';\nexport {ProcessInstanceListComponent} from './components/process-list.component';\nexport {StartProcessInstanceComponent} from './components/start-process.component';\n\n// services\nexport {ProcessService} from './services/process.service';\nexport {ProcessFilterService} from './services/process-filter.service';\n\n// models\nexport {FilterProcessRepresentationModel,ProcessFilterParamRepresentationModel} from './models/filter-process.model';\nexport {ProcessDefinitionRepresentation} from './models/process-definition.model';\nexport {ProcessInstance} from './models/process-instance.model';\nexport {ProcessFilterRequestRepresentation} from './models/process-instance-filter.model';\nexport {ProcessInstanceVariable} from './models/process-instance-variable.model';\n","\nexport class ProcessFilterRequestRepresentation {\n    processDefinitionId: string;\n    appDefinitionId: string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.processDefinitionId = obj && obj.processDefinitionId || null;\n        this.appDefinitionId = obj && obj.appDefinitionId || null;\n        this.state = obj && obj.state || null;\n        this.sort = obj && obj.sort || null;\n        this.page = obj && obj.page || 0;\n        this.size = obj && obj.size || 25;\n    }\n}\n\nfunction ProcessFilterRequestRepresentation_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.processDefinitionId;\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.appDefinitionId;\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.state;\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.sort;\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.page;\n/** @type {?} */\nProcessFilterRequestRepresentation.prototype.size;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { ProcessListModule } from './process-list/process-list.module';\nimport { TaskListModule } from './task-list/task-list.module';\nimport { AppsListModule } from './app-list/apps-list.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { AttachmentModule } from './attachment/attachment.module';\nimport { PeopleModule } from './people/people.module';\nexport class ProcessModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CoreModule,\n        CommonModule,\n        CommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services',\n                source: 'assets/adf-process-services'\n            }\n        }\n    ],\n    exports: [\n        CommonModule,\n        CommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        MaterialModule\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProcessModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { DataColumnModule, DataTableModule, DirectiveModule } from '@alfresco/adf-core';\n\nimport { TaskAttachmentListComponent } from './task-attachment-list.component';\nimport { ProcessAttachmentListComponent } from './process-attachment-list.component';\nimport { CreateProcessAttachmentComponent } from './create-process-attachment.component';\nimport { AttachmentComponent } from './create-task-attachment.component';\nexport class AttachmentModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        DataColumnModule,\n        DataTableModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule,\n        DirectiveModule\n    ],\n    declarations: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ],\n    exports: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AttachmentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAttachmentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAttachmentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\nexport class AttachmentComponent implements OnChanges {\n\n    \n    taskId: string;\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    success: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} activitiContentService\n */\nconstructor(private activitiContentService: ProcessContentService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.taskId = changes['taskId'].currentValue;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonFileUpload(event: any) {\n        let /** @type {?} */ filesList: File[] = event.detail.files.map(obj => obj.file);\n\n        for (let /** @type {?} */ fileInfoObj of filesList) {\n            let /** @type {?} */ file: File = fileInfoObj;\n            let /** @type {?} */ opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createTaskRelatedContent(this.taskId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-create-task-attachment',\n    styles: [`\n      .adf-create-attachment {\n        display: inline-block;\n        line-height: 0px;\n        vertical-align: middle; }\n    `],\n    template: `\n      <button\n          color=\"primary\"\n          mat-button\n          mat-raised-button\n          mat-icon-button\n          class=\"adf-create-attachment\"\n          [adf-upload]=\"true\"\n          mode=\"['click']\"\n          [multiple]=\"true\"\n          (upload-files)=\"onFileUpload($event)\">\n          <mat-icon>add</mat-icon>\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessContentService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'taskId': [{ type: Input },],\n'error': [{ type: Output },],\n'success': [{ type: Output },],\n};\n}\n\nfunction AttachmentComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAttachmentComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAttachmentComponent.ctorParameters;\n/** @type {?} */\nAttachmentComponent.propDecorators;\n/** @type {?} */\nAttachmentComponent.prototype.taskId;\n/** @type {?} */\nAttachmentComponent.prototype.error;\n/** @type {?} */\nAttachmentComponent.prototype.success;\n/** @type {?} */\nAttachmentComponent.prototype.activitiContentService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\nexport class CreateProcessAttachmentComponent implements OnChanges {\n\n    \n    processInstanceId: string;\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    success: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} activitiContentService\n */\nconstructor(private activitiContentService: ProcessContentService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.processInstanceId = changes['processInstanceId'].currentValue;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonFileUpload(event: any) {\n        let /** @type {?} */ filesList: File[] = event.detail.files.map(obj => obj.file);\n\n        for (let /** @type {?} */ fileInfoObj of filesList) {\n            let /** @type {?} */ file: File = fileInfoObj;\n            let /** @type {?} */ opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createProcessRelatedContent(this.processInstanceId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-create-process-attachment',\n    styles: [`\n      .adf-create-attachment {\n          display: inline-block;\n          line-height: 0px;\n          vertical-align: middle;\n      }\n    `],\n    template: `\n      <button\n          id=\"add_new_process_content_button\"\n          color=\"primary\"\n          mat-button\n          mat-raised-button\n          mat-icon-button\n          class=\"adf-create-attachment\"\n          [adf-upload]=\"true\"\n          mode=\"['click']\"\n          [multiple]=\"true\"\n          (upload-files)=\"onFileUpload($event)\">\n          <mat-icon>add</mat-icon>\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessContentService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstanceId': [{ type: Input },],\n'error': [{ type: Output },],\n'success': [{ type: Output },],\n};\n}\n\nfunction CreateProcessAttachmentComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCreateProcessAttachmentComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCreateProcessAttachmentComponent.ctorParameters;\n/** @type {?} */\nCreateProcessAttachmentComponent.propDecorators;\n/** @type {?} */\nCreateProcessAttachmentComponent.prototype.processInstanceId;\n/** @type {?} */\nCreateProcessAttachmentComponent.prototype.error;\n/** @type {?} */\nCreateProcessAttachmentComponent.prototype.success;\n/** @type {?} */\nCreateProcessAttachmentComponent.prototype.activitiContentService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService, ThumbnailService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, NgZone, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\nexport class ProcessAttachmentListComponent implements OnChanges {\n\n    \n    processInstanceId: string;\n\n    \n    disabled: boolean = false;\n\n    \n    attachmentClick = new EventEmitter();\n\n    \n    success = new EventEmitter();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    emptyListImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    attachments: any[] = [];\n    isLoading: boolean = true;\n/**\n * @param {?} activitiContentService\n * @param {?} contentService\n * @param {?} thumbnailService\n * @param {?} ngZone\n */\nconstructor(private activitiContentService: ProcessContentService,\nprivate contentService: ContentService,\nprivate thumbnailService: ThumbnailService,\nprivate ngZone: NgZone) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.loadAttachmentsByProcessInstanceId(changes['processInstanceId'].currentValue);\n        }\n    }\n/**\n * @return {?}\n */\nreset() {\n        this.attachments = [];\n    }\n/**\n * @return {?}\n */\nreload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByProcessInstanceId(this.processInstanceId);\n        });\n    }\n/**\n * @param {?} content\n * @return {?}\n */\nadd(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nprivate loadAttachmentsByProcessInstanceId(processInstanceId: string) {\n        if (processInstanceId) {\n            this.reset();\n            this.isLoading = true;\n            this.activitiContentService.getProcessRelatedContent(processInstanceId).subscribe(\n                (res: any) => {\n                    res.data.forEach(content => {\n                        this.attachments.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n/**\n * @param {?} contentId\n * @return {?}\n */\nprivate deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter(content => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n/**\n * @return {?}\n */\nisEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonShowRowActionsMenu(event: any) {\n        let /** @type {?} */ viewAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        let /** @type {?} */ removeAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        let /** @type {?} */ downloadAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonExecuteRowAction(event: any) {\n        let /** @type {?} */ args = event.value;\n        let /** @type {?} */ action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nopenContent(event: any): void {\n        let /** @type {?} */ content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n/**\n * @param {?} content\n * @return {?}\n */\nemitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * @param {?} content\n * @return {?}\n */\ndownloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * @return {?}\n */\nisDisabled(): boolean {\n        return this.disabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-attachment-list',\n    styles: [`\n\n    `],\n    template: `\n      <adf-datatable [rows]=\"attachments\" [actions]=\"true\" [loading]=\"isLoading\" (rowDblClick)=\"openContent($event)\" (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n          (executeRowAction)=\"onExecuteRowAction($event)\">\n\n          <adf-empty-list *ngIf=\"isEmpty()\">\n              <div adf-empty-list-header class=\"adf-empty-list-header\"> {{'ADF_PROCESS_LIST.PROCESS-ATTACHMENT.EMPTY.HEADER' | translate}} </div>\n              <div adf-empty-list-body *ngIf=\"!isDisabled()\">\n                  <div fxHide.lt-md=\"true\" class=\"adf-empty-list-drag_drop\">{{'ADF_PROCESS_LIST.PROCESS-ATTACHMENT.EMPTY.DRAG-AND-DROP.TITLE' | translate}}</div>\n                  <div fxHide.lt-md=\"true\" class=\"adf-empty-list__any-files-here-to-add\"> {{'ADF_PROCESS_LIST.PROCESS-ATTACHMENT.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate}} </div>\n              </div>\n              <div adf-empty-list-footer *ngIf=\"!isDisabled()\">\n                  <img class=\"adf-empty-list__empty_doc_lib\" [src]=\"emptyListImageUrl\">\n              </div>\n          </adf-empty-list>\n\n          <data-columns>\n              <data-column key=\"icon\" type=\"image\" srTitle=\"ADF_PROCESS_LIST.PROPERTIES.THUMBNAIL\" [sortable]=\"false\"></data-column>\n              <data-column key=\"name\" type=\"text\" title=\"{{'ADF_PROCESS_LIST.PROPERTIES.NAME' | translate}}\" class=\"full-width ellipsis-cell\" [sortable]=\"true\"></data-column>\n              <data-column key=\"created\" type=\"date\" format=\"shortDate\" title=\"{{'ADF_PROCESS_LIST.PROPERTIES.CREATED' | translate}}\"></data-column>\n          </data-columns>\n\n          <loading-content-template>\n              <ng-template>\n                  <!--Add your custom loading template here-->\n                  <mat-progress-spinner class=\"adf-attachment-list-loading-margin\" [color]=\"'primary'\" [mode]=\"'indeterminate'\">\n                  </mat-progress-spinner>\n              </ng-template>\n          </loading-content-template>\n\n      </adf-datatable>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessContentService, },\n{type: ContentService, },\n{type: ThumbnailService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstanceId': [{ type: Input },],\n'disabled': [{ type: Input },],\n'attachmentClick': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'emptyListImageUrl': [{ type: Input },],\n};\n}\n\nfunction ProcessAttachmentListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessAttachmentListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessAttachmentListComponent.ctorParameters;\n/** @type {?} */\nProcessAttachmentListComponent.propDecorators;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.processInstanceId;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.disabled;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.attachmentClick;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.success;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.error;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.emptyListImageUrl;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.attachments;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.isLoading;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.activitiContentService;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.contentService;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.thumbnailService;\n/** @type {?} */\nProcessAttachmentListComponent.prototype.ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService, ThumbnailService, EmptyListComponent } from '@alfresco/adf-core';\nimport { AfterContentInit, ContentChild, Component, ElementRef, EventEmitter, Input, NgZone, OnChanges, Output, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\nexport class TaskAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    \n    emptyTemplate: EmptyListComponent;\n\n    \n    taskId: string;\n\n    \n    disabled: boolean = false;\n\n    \n    attachmentClick = new EventEmitter();\n\n    \n    success = new EventEmitter();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    \n    customTemplateRef: ElementRef;\n\n    curret: any;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n/**\n * @param {?} activitiContentService\n * @param {?} contentService\n * @param {?} thumbnailService\n * @param {?} ngZone\n */\nconstructor(private activitiContentService: ProcessContentService,\nprivate contentService: ContentService,\nprivate thumbnailService: ThumbnailService,\nprivate ngZone: NgZone) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.loadAttachmentsByTaskId(changes['taskId'].currentValue);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n/**\n * @return {?}\n */\nreset(): void {\n        this.attachments = [];\n    }\n/**\n * @return {?}\n */\nhasCutomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n/**\n * @return {?}\n */\nreload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByTaskId(this.taskId);\n        });\n    }\n/**\n * @param {?} content\n * @return {?}\n */\nadd(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nprivate loadAttachmentsByTaskId(taskId: string) {\n        if (taskId) {\n            this.isLoading = true;\n            this.reset();\n            this.activitiContentService.getTaskRelatedContent(taskId).subscribe(\n                (res: any) => {\n                    let /** @type {?} */ attachList = [];\n                    res.data.forEach(content => {\n                        attachList.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.attachments = attachList;\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n/**\n * @param {?} contentId\n * @return {?}\n */\ndeleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter(content => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n/**\n * @return {?}\n */\nisEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonShowRowActionsMenu(event: any) {\n        let /** @type {?} */ viewAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        let /** @type {?} */ removeAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        let /** @type {?} */ downloadAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonExecuteRowAction(event: any) {\n        let /** @type {?} */ args = event.value;\n        let /** @type {?} */ action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nopenContent(event: any): void {\n        let /** @type {?} */ content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n/**\n * @param {?} content\n * @return {?}\n */\nemitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * @param {?} content\n * @return {?}\n */\ndownloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * @return {?}\n */\nisDisabled(): boolean {\n        return this.disabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-task-attachment-list',\n    styles: [`\n\n    `],\n    template: `\n      <adf-datatable [rows]=\"attachments\"\n                     [actions]=\"true\"\n                     [loading]=\"isLoading\"\n                     (rowDblClick)=\"openContent($event)\"\n                     (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n                     (executeRowAction)=\"onExecuteRowAction($event)\">\n                  <no-content-template>\n                      <ng-template>\n                          <ng-content *ngIf=\"hasCustomTemplate; else defaulEmptyList\" class=\"adf-custom-empty-template\"></ng-content>\n                          <ng-template #defaulEmptyList>\n                              <adf-empty-list>\n                                  <div adf-empty-list-header class=\"adf-empty-list-header\">\n                                      {{'ADF_TASK_LIST.ATTACHMENT.EMPTY.HEADER' | translate}}\n                                  </div>\n                              </adf-empty-list>\n                          </ng-template>\n                      </ng-template>\n                  </no-content-template>\n\n                  <data-columns>\n                      <data-column key=\"icon\" type=\"image\" srTitle=\"ADF_TASK_LIST.PROPERTIES.THUMBNAIL\" [sortable]=\"false\"></data-column>\n                      <data-column key=\"name\" type=\"text\" title=\"ADF_TASK_LIST.PROPERTIES.NAME\" class=\"full-width ellipsis-cell\" [sortable]=\"true\"></data-column>\n                      <data-column key=\"created\" type=\"date\" format=\"shortDate\" title=\"ADF_TASK_LIST.PROPERTIES.CREATED\"></data-column>\n                  </data-columns>\n                  <loading-content-template>\n                      <ng-template>\n                      <!--Add your custom loading template here-->\n                          <mat-progress-spinner class=\"adf-attachment-list-loading-margin\" [color]=\"'primary'\" [mode]=\"'indeterminate'\">\n                          </mat-progress-spinner>\n                      </ng-template>\n                  </loading-content-template>\n      </adf-datatable>\n    `,\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessContentService, },\n{type: ContentService, },\n{type: ThumbnailService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'emptyTemplate': [{ type: ContentChild, args: [EmptyListComponent, ] },],\n'taskId': [{ type: Input },],\n'disabled': [{ type: Input },],\n'attachmentClick': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'customTemplateRef': [{ type: ViewChild, args: ['customEmptyListTemplate', ] },],\n};\n}\n\nfunction TaskAttachmentListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskAttachmentListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskAttachmentListComponent.ctorParameters;\n/** @type {?} */\nTaskAttachmentListComponent.propDecorators;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.emptyTemplate;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.taskId;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.disabled;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.attachmentClick;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.success;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.error;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.hasCustomTemplate;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.customTemplateRef;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.curret;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.attachments;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.isLoading;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.activitiContentService;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.contentService;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.thumbnailService;\n/** @type {?} */\nTaskAttachmentListComponent.prototype.ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AppsListComponent } from './apps-list.component';\nexport class AppsListModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        TranslateModule\n    ],\n    declarations: [\n        AppsListComponent\n    ],\n    providers: [],\n    exports: [\n        AppsListComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AppsListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAppsListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAppsListModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AppsProcessService, TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nimport { IconModel } from './icon.model';\nexport class AppsListComponent implements OnInit {\npublic static LAYOUT_LIST: string = 'LIST';\npublic static LAYOUT_GRID: string = 'GRID';\npublic static DEFAULT_TASKS_APP: string = 'tasks';\npublic static DEFAULT_TASKS_APP_NAME: string = 'ADF_TASK_LIST.APPS.TASK_APP_NAME';\npublic static DEFAULT_TASKS_APP_THEME: string = 'theme-2';\npublic static DEFAULT_TASKS_APP_ICON: string = 'glyphicon-asterisk';\npublic static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    \n    layoutType: string = AppsListComponent.LAYOUT_GRID;\n\n    \n    filtersAppId: any[];\n\n    \n    appClick: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\nprivate appsObserver: Observer<AppDefinitionRepresentationModel>;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n\n    currentApp: AppDefinitionRepresentationModel;\n\n    appList: AppDefinitionRepresentationModel [] = [];\nprivate iconsMDL: IconModel;\n/**\n * @param {?} appsProcessService\n * @param {?} translationService\n */\nconstructor(\nprivate appsProcessService: AppsProcessService,\nprivate translationService: TranslationService) {\n            this.apps$ = new Observable<AppDefinitionRepresentationModel>(observer => this.appsObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$.subscribe((app: any) => {\n            this.appList.push(app);\n        });\n        this.iconsMDL = new IconModel();\n        this.load();\n    }\n/**\n * @return {?}\n */\nprivate load() {\n        this.appsProcessService.getDeployedApplications()\n        .subscribe(\n            (res: AppDefinitionRepresentationModel[]) => {\n                this.filterApps(res).forEach((app: AppDefinitionRepresentationModel) => {\n                    if (this.isDefaultApp(app)) {\n                        app.theme = AppsListComponent.DEFAULT_TASKS_APP_THEME;\n                        app.icon = AppsListComponent.DEFAULT_TASKS_APP_ICON;\n                        this.appsObserver.next(app);\n                    } else if (app.deploymentId) {\n                        this.appsObserver.next(app);\n                    }\n                });\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * @param {?} app\n * @return {?}\n */\nisDefaultApp(app) {\n        return app.defaultAppId === AppsListComponent.DEFAULT_TASKS_APP;\n    }\n/**\n * @param {?} app\n * @return {?}\n */\ngetAppName(app) {\n        return this.isDefaultApp(app)\n            ? this.translationService.get(AppsListComponent.DEFAULT_TASKS_APP_NAME)\n            : Observable.of(app.name);\n    }\n/**\n * Pass the selected app as next\n * @param {?} app\n * @return {?}\n */\npublic selectApp(app: AppDefinitionRepresentationModel) {\n        this.currentApp = app;\n        this.appClick.emit(app);\n    }\n/**\n * Return true if the appId is the current app\n * @param {?} appId\n * @return {?}\n */\nisSelected(appId: number): boolean {\n        return (this.currentApp !== undefined && appId === this.currentApp.id);\n    }\n/**\n * @param {?} apps\n * @return {?}\n */\nprivate filterApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        let /** @type {?} */ filteredApps: AppDefinitionRepresentationModel[] = [];\n        if (this.filtersAppId) {\n            apps.filter((app: AppDefinitionRepresentationModel) => {\n                this.filtersAppId.forEach((filter) => {\n                    if (app.defaultAppId === filter.defaultAppId ||\n                        app.deploymentId === filter.deploymentId ||\n                        app.name === filter.name ||\n                        app.id === filter.id ||\n                        app.modelId === filter.modelId ||\n                        app.tenantId === filter.tenantId) {\n                        filteredApps.push(app);\n                    }\n                });\n            });\n        } else {\n            return apps;\n        }\n        return filteredApps;\n    }\n/**\n * Check if the value of the layoutType property is an allowed value\n * @return {?}\n */\nisValidType(): boolean {\n        if (this.layoutType && (this.layoutType === AppsListComponent.LAYOUT_LIST || this.layoutType === AppsListComponent.LAYOUT_GRID)) {\n            return true;\n        }\n        return false;\n    }\n/**\n * Assign the default value to LayoutType\n * @return {?}\n */\nsetDefaultLayoutType(): void {\n        this.layoutType = AppsListComponent.LAYOUT_GRID;\n    }\n/**\n * Return true if the layout type is LIST\n * @return {?}\n */\nisList(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_LIST;\n    }\n/**\n * Return true if the layout type is GRID\n * @return {?}\n */\nisGrid(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_GRID;\n    }\n/**\n * @return {?}\n */\nisEmpty(): boolean {\n        return this.appList.length === 0;\n    }\n/**\n * @param {?} app\n * @return {?}\n */\ngetTheme(app: AppDefinitionRepresentationModel): string {\n        return app.theme ? app.theme : '';\n    }\n/**\n * @param {?} app\n * @return {?}\n */\ngetBackgroundIcon(app: AppDefinitionRepresentationModel): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-apps',\n    template: `\n      <div class=\"menu-container\" *ngIf=\"!isEmpty()\">\n          <mat-list *ngIf=\"isList()\" class=\"adf-app-list\">\n              <mat-list-item class=\"adf-app-list-item\" (click)=\"selectApp(app)\" (keyup.enter)=\"selectApp(app)\" *ngFor=\"let app of appList\" tabindex=\"0\" role=\"button\" title=\"{{app.name}}\">\n                  <mat-icon matListIcon>touch_app</mat-icon>\n                  <span matLine>{{getAppName(app) | async}}</span>\n              </mat-list-item>\n          </mat-list>\n          <div fxLayout=\"row wrap\" *ngIf=\"isGrid()\" class=\"adf-app-listgrid\">\n              <div *ngFor=\"let app of appList\"\n                  class=\"adf-app-listgrid-item\"\n                  fxFlex=\"33.33333%\" fxFlex.lt-md=\"50%\" fxFlex.lt-sm=\"100%\">\n                      <mat-card tabindex=\"0\"\n                          fxLayout=\"column\"\n                          role=\"button\"\n                          class=\"adf-app-listgrid-item-card\"\n                          title=\"{{getAppName(app) | async}}\"\n                          [ngClass]=\"[getTheme(app)]\"\n                          (click)=\"selectApp(app)\"\n                          (keyup.enter)=\"selectApp(app)\">\n                              <div class=\"adf-app-listgrid-item-card-logo\">\n                                  <mat-icon class=\"adf-app-listgrid-item-card-logo-icon\">{{getBackgroundIcon(app)}}</mat-icon>\n                              </div>\n                              <div mat-card-title class=\"adf-app-listgrid-item-card-title\">\n                                  <h1>{{getAppName(app) | async}}</h1>\n                              </div>\n                              <mat-card-subtitle class=\"adf-app-listgrid-item-card-subtitle\" fxFlex=\"1 0 auto\">\n                                  <p>{{app.description}}</p>\n                              </mat-card-subtitle>\n\n                              <mat-card-actions class=\"adf-app-listgrid-item-card-actions\">\n                                  <mat-icon class=\"adf-app-listgrid-item-card-actions-icon\" *ngIf=\"isSelected(app.id)\">done</mat-icon>\n                              </mat-card-actions>\n                      </mat-card>\n              </div>\n          </div>\n      </div>\n      <div class=\"menu-container\" *ngIf=\"isEmpty()\">\n          {{ 'ADF_TASK_LIST.APPS.NONE' | translate }}\n      </div>\n    `,\n    styles: [`\n      :host {\n        width: 100%; }\n\n      .adf-app-list-item {\n        cursor: pointer; }\n\n      .adf-app-listgrid {\n        padding: 8px; }\n        .adf-app-listgrid-item {\n          outline: none;\n          padding: 8px;\n          -webkit-box-sizing: border-box;\n                  box-sizing: border-box; }\n          .adf-app-listgrid-item-card {\n            outline: none;\n            -webkit-transition: -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n            transition: -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n            transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n            transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n            min-height: 200px;\n            padding: 0; }\n            .adf-app-listgrid-item-card.theme-1 {\n              background-color: #269abc; }\n            .adf-app-listgrid-item-card.theme-2 {\n              background-color: #7da9b0; }\n            .adf-app-listgrid-item-card.theme-3 {\n              background-color: #7689ab; }\n            .adf-app-listgrid-item-card.theme-4 {\n              background-color: #c74e3e; }\n            .adf-app-listgrid-item-card.theme-5 {\n              background-color: #fab96c; }\n            .adf-app-listgrid-item-card.theme-6 {\n              background-color: #759d4c; }\n            .adf-app-listgrid-item-card.theme-7 {\n              background-color: #b1b489; }\n            .adf-app-listgrid-item-card.theme-8 {\n              background-color: #a17299; }\n            .adf-app-listgrid-item-card.theme-9 {\n              background-color: #696c67; }\n            .adf-app-listgrid-item-card.theme-10 {\n              background-color: #cabb33; }\n            .adf-app-listgrid-item-card:hover {\n              -webkit-box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);\n                      box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);\n              cursor: pointer;\n              -webkit-transform: scale(1.015);\n                      transform: scale(1.015); }\n            .adf-app-listgrid-item-card-logo {\n              position: absolute;\n              right: 20px;\n              top: 20px;\n              padding: 16px; }\n              .adf-app-listgrid-item-card-logo-icon {\n                font-size: 70px;\n                width: 1em;\n                height: 1em; }\n                .theme-1 .adf-app-listgrid-item-card-logo-icon {\n                  color: #168aac; }\n                .theme-2 .adf-app-listgrid-item-card-logo-icon {\n                  color: #6d99a0; }\n                .theme-3 .adf-app-listgrid-item-card-logo-icon {\n                  color: #66799b; }\n                .theme-4 .adf-app-listgrid-item-card-logo-icon {\n                  color: #b73e2e; }\n                .theme-5 .adf-app-listgrid-item-card-logo-icon {\n                  color: #eaa95c; }\n                .theme-6 .adf-app-listgrid-item-card-logo-icon {\n                  color: #658d3c; }\n                .theme-7 .adf-app-listgrid-item-card-logo-icon {\n                  color: #a1a479; }\n                .theme-8 .adf-app-listgrid-item-card-logo-icon {\n                  color: #916289; }\n                .theme-9 .adf-app-listgrid-item-card-logo-icon {\n                  color: #595c57; }\n                .theme-10 .adf-app-listgrid-item-card-logo-icon {\n                  color: #baab23; }\n            .adf-app-listgrid-item-card-title {\n              padding: 16px; }\n              .adf-app-listgrid-item-card-title h1 {\n                color: white;\n                width: 80%;\n                font-size: 24px;\n                margin: 0;\n                line-height: normal;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n                overflow: hidden; }\n            .adf-app-listgrid-item-card-subtitle {\n              padding: 16px; }\n            .adf-app-listgrid-item-card-actions {\n              padding: 0 16px 16px 16px;\n              border-top: 1px solid rgba(0, 0, 0, 0.1);\n              min-height: 48px;\n              -webkit-box-sizing: border-box;\n                      box-sizing: border-box; }\n              .adf-app-listgrid-item-card-actions-icon {\n                color: #e9f1f3; }\n              .adf-app-listgrid-item-card-actions.mat-card-actions {\n                margin-left: 0px;\n                margin-right: 0px; }\n                .adf-app-listgrid-item-card-actions.mat-card-actions:last-child {\n                  margin-bottom: 0; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AppsProcessService, },\n{type: TranslationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layoutType': [{ type: Input },],\n'filtersAppId': [{ type: Input },],\n'appClick': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction AppsListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAppsListComponent.LAYOUT_LIST;\n/** @type {?} */\nAppsListComponent.LAYOUT_GRID;\n/** @type {?} */\nAppsListComponent.DEFAULT_TASKS_APP;\n/** @type {?} */\nAppsListComponent.DEFAULT_TASKS_APP_NAME;\n/** @type {?} */\nAppsListComponent.DEFAULT_TASKS_APP_THEME;\n/** @type {?} */\nAppsListComponent.DEFAULT_TASKS_APP_ICON;\n/** @type {?} */\nAppsListComponent.DEFAULT_TASKS_APP_MATERIAL_ICON;\n/** @type {?} */\nAppsListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAppsListComponent.ctorParameters;\n/** @type {?} */\nAppsListComponent.propDecorators;\n/** @type {?} */\nAppsListComponent.prototype.layoutType;\n/** @type {?} */\nAppsListComponent.prototype.filtersAppId;\n/** @type {?} */\nAppsListComponent.prototype.appClick;\n/** @type {?} */\nAppsListComponent.prototype.error;\n/** @type {?} */\nAppsListComponent.prototype.appsObserver;\n/** @type {?} */\nAppsListComponent.prototype.apps$;\n/** @type {?} */\nAppsListComponent.prototype.currentApp;\n/** @type {?} */\nAppsListComponent.prototype.appList;\n/** @type {?} */\nAppsListComponent.prototype.iconsMDL;\n/** @type {?} */\nAppsListComponent.prototype.appsProcessService;\n/** @type {?} */\nAppsListComponent.prototype.translationService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class IconModel {\npublic static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\nprivate iconsMDL: Map<string, string>;\nconstructor() {\n        this.initIconsMDL();\n    }\n/**\n * @param {?} icon\n * @return {?}\n */\nmapGlyphiconToMaterialDesignIcons(icon: string) {\n        return this.iconsMDL.get(icon) ? this.iconsMDL.get(icon) : IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n    }\n/**\n * Map all the bootstrap glyphicon icons with Material design material icon\n * @return {?}\n */\ninitIconsMDL() {\n        this.iconsMDL = new Map<string, string>();\n\n        this.iconsMDL.set('glyphicon-asterisk', 'ac_unit');\n        this.iconsMDL.set('glyphicon-plus', 'add');\n        this.iconsMDL.set('glyphicon-euro', 'euro_symbol');\n        this.iconsMDL.set('glyphicon-cloud', 'cloud');\n        this.iconsMDL.set('glyphicon-envelope', 'mail');\n        this.iconsMDL.set('glyphicon-pencil', 'create');\n        this.iconsMDL.set('glyphicon-glass', 'local_bar');\n        this.iconsMDL.set('glyphicon-music', 'music_note');\n        this.iconsMDL.set('glyphicon-search', 'search');\n        this.iconsMDL.set('glyphicon-heart', 'favorite');\n        this.iconsMDL.set('glyphicon-heart-empty', 'favorite_border');\n        this.iconsMDL.set('glyphicon-star', 'star');\n        this.iconsMDL.set('glyphicon-star-empty', 'star_border');\n        this.iconsMDL.set('glyphicon-user', 'person');\n        this.iconsMDL.set('glyphicon-film', 'movie_creation');\n        this.iconsMDL.set('glyphicon-th-large', 'view_comfy');\n        this.iconsMDL.set('glyphicon-th', 'view_compact');\n        this.iconsMDL.set('glyphicon-th-list', 'list');\n        this.iconsMDL.set('glyphicon-ok', 'done');\n        this.iconsMDL.set('glyphicon-remove', 'cancel');\n        this.iconsMDL.set('glyphicon-zoom-in', 'zoom_in');\n        this.iconsMDL.set('glyphicon-zoom-out', 'zoom_out');\n        this.iconsMDL.set('glyphicon-off', 'highlight_off');\n        this.iconsMDL.set('glyphicon-signal', 'signal_cellular_4_bar');\n        this.iconsMDL.set('glyphicon-cog', 'settings');\n        this.iconsMDL.set('glyphicon-trash', 'delete');\n        this.iconsMDL.set('glyphicon-home', 'home');\n        this.iconsMDL.set('glyphicon-file', 'insert_drive_file');\n        this.iconsMDL.set('glyphicon-time', 'access_time');\n        this.iconsMDL.set('glyphicon-road', 'map');\n        this.iconsMDL.set('glyphicon-download-alt', 'file_download');\n        this.iconsMDL.set('glyphicon-download', 'file_download');\n        this.iconsMDL.set('glyphicon-upload', 'file_upload');\n        this.iconsMDL.set('glyphicon-inbox', 'inbox');\n        this.iconsMDL.set('glyphicon-play-circle', 'play_circle_outline');\n        this.iconsMDL.set('glyphicon-repeat', 'refresh');\n        this.iconsMDL.set('glyphicon-refresh', 'sync');\n        this.iconsMDL.set('glyphicon-list-alt', 'event_note');\n        this.iconsMDL.set('glyphicon-lock', 'lock_outline');\n        this.iconsMDL.set('glyphicon-flag', 'assistant_photo');\n        this.iconsMDL.set('glyphicon-headphones', 'headset');\n        this.iconsMDL.set('glyphicon-volume-up', 'volume_up');\n        this.iconsMDL.set('glyphicon-tag', 'local_offer');\n        this.iconsMDL.set('glyphicon-tags', 'local_offer');\n        this.iconsMDL.set('glyphicon-book', 'library_books');\n        this.iconsMDL.set('glyphicon-bookmark', 'collections_bookmark');\n        this.iconsMDL.set('glyphicon-print', 'local_printshop');\n        this.iconsMDL.set('glyphicon-camera', 'local_see');\n        this.iconsMDL.set('glyphicon-list', 'view_list');\n        this.iconsMDL.set('glyphicon-facetime-video', 'video_call');\n        this.iconsMDL.set('glyphicon-picture', 'photo');\n        this.iconsMDL.set('glyphicon-map-marker', 'add_location');\n        this.iconsMDL.set('glyphicon-adjust', 'brightness_4');\n        this.iconsMDL.set('glyphicon-tint', 'invert_colors');\n        this.iconsMDL.set('glyphicon-edit', 'edit');\n        this.iconsMDL.set('glyphicon-share', 'share');\n        this.iconsMDL.set('glyphicon-check', 'assignment_turned_in');\n        this.iconsMDL.set('glyphicon-move', 'open_with');\n        this.iconsMDL.set('glyphicon-play', 'play_arrow');\n        this.iconsMDL.set('glyphicon-eject', 'eject');\n        this.iconsMDL.set('glyphicon-plus-sign', 'add_circle');\n        this.iconsMDL.set('glyphicon-minus-sign', 'remove_circle');\n        this.iconsMDL.set('glyphicon-remove-sign', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-sign', 'check_circle');\n        this.iconsMDL.set('glyphicon-question-sign', 'help');\n        this.iconsMDL.set('glyphicon-info-sign', 'info');\n        this.iconsMDL.set('glyphicon-screenshot', 'flare');\n        this.iconsMDL.set('glyphicon-remove-circle', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-circle', 'add_circle');\n        this.iconsMDL.set('glyphicon-ban-circle', 'block');\n        this.iconsMDL.set('glyphicon-share-alt', 'redo');\n        this.iconsMDL.set('glyphicon-exclamation-sign', 'error');\n        this.iconsMDL.set('glyphicon-gift', 'giftcard');\n        this.iconsMDL.set('glyphicon-leaf', 'spa');\n        this.iconsMDL.set('glyphicon-fire', 'whatshot');\n        this.iconsMDL.set('glyphicon-eye-open', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-eye-close', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-warning-sign', 'warning');\n        this.iconsMDL.set('glyphicon-plane', 'airplanemode_active');\n        this.iconsMDL.set('glyphicon-calendar', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-random', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-comment', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-magnet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-retweet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-shopping-cart', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-close', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hdd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bullhorn', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bell', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-certificate', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-up', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-down', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hand-left', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-globe', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-wrench', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tasks', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-filter', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-briefcase', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-dashboard', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-paperclip', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-link', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-pushpin', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-usd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-gbp', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-sort', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-flash', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-record', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-save', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-saved', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-send', 'send');\n        this.iconsMDL.set('glyphicon-floppy-disk', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-credit-card', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cutlery', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-earphone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone-alt', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tower', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-stats', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-download', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-upload', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-conifer', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-deciduous', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n    }\n}\n\nfunction IconModel_tsickle_Closure_declarations() {\n/** @type {?} */\nIconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n/** @type {?} */\nIconModel.prototype.iconsMDL;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\n\nimport { CardViewModule, CardViewUpdateService, DataColumnModule, DataTableModule, DirectiveModule, PipeModule } from '@alfresco/adf-core';\nimport { TaskListModule } from '../task-list/task-list.module';\nimport { PeopleModule } from '../people/people.module';\nimport { CommentsModule } from '../comments/comments.module';\n\nimport { ProcessAuditDirective } from './components/process-audit.directive';\nimport { ProcessFiltersComponent } from './components/process-filters.component';\nimport { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';\nimport { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';\nimport { ProcessInstanceListComponent } from './components/process-list.component';\nimport { StartProcessInstanceComponent } from './components/start-process.component';\n\nimport { ProcessService } from './services/process.service';\nimport { ProcessFilterService } from './services/process-filter.service';\nexport class ProcessListModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        DataTableModule,\n        FormModule,\n        TaskListModule,\n        MaterialModule,\n        FlexLayoutModule,\n        TranslateModule,\n        CardViewModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PipeModule,\n        DataColumnModule,\n        DirectiveModule,\n        PeopleModule,\n        CommentsModule\n    ],\n    declarations: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    providers: [\n        ProcessService,\n        ProcessFilterService,\n        CardViewUpdateService\n    ],\n    exports: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProcessListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessListModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges,  ViewChild, ViewEncapsulation } from '@angular/core';\nimport { StartFormComponent } from '@alfresco/adf-core';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessDefinitionRepresentation } from './../models/process-definition.model';\nimport { ProcessInstance } from './../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nexport class StartProcessInstanceComponent implements OnChanges {\n\n    \n    appId: number;\n\n    \n    variables: ProcessInstanceVariable[];\n\n    \n    start: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    \n    cancel: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    \n    error: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    \n    startForm: StartFormComponent;\n\n    processDefinitions: ProcessDefinitionRepresentation[] = [];\n\n    name: string;\n\n    currentProcessDef: ProcessDefinitionRepresentation = new ProcessDefinitionRepresentation();\n\n    errorMessageId: string = '';\n/**\n * @param {?} activitiProcess\n */\nconstructor(private activitiProcess: ProcessService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ appIdChange = changes['appId'];\n        let /** @type {?} */ appId = appIdChange ? appIdChange.currentValue : null;\n        this.load(appId);\n    }\n/**\n * @param {?=} appId\n * @return {?}\n */\npublic load(appId?: number) {\n        this.resetSelectedProcessDefinition();\n        this.resetErrorMessage();\n        this.activitiProcess.getProcessDefinitions(appId).subscribe(\n            (res) => {\n                this.processDefinitions = res;\n            },\n            () => {\n                this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.LOAD_PROCESS_DEFS';\n            }\n        );\n    }\n/**\n * @param {?=} outcome\n * @return {?}\n */\npublic startProcess(outcome?: string) {\n        if (this.currentProcessDef.id && this.name) {\n            this.resetErrorMessage();\n            let /** @type {?} */ formValues = this.startForm ? this.startForm.form.values : undefined;\n            this.activitiProcess.startProcess(this.currentProcessDef.id, this.name, outcome, formValues, this.variables).subscribe(\n                (res) => {\n                    this.name = '';\n                    this.start.emit(res);\n                },\n                (err) => {\n                    this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.START';\n                    this.error.error(err);\n                }\n            );\n        }\n    }\n/**\n * @param {?} processDefinitionId\n * @return {?}\n */\nonProcessDefChange(processDefinitionId) {\n        let /** @type {?} */ processDef = this.processDefinitions.find((processDefinition) => {\n            return processDefinition.id === processDefinitionId;\n        });\n        if (processDef) {\n            this.currentProcessDef = JSON.parse(JSON.stringify(processDef));\n        } else {\n            this.resetSelectedProcessDefinition();\n        }\n    }\n/**\n * @return {?}\n */\npublic cancelStartProcess() {\n        this.cancel.emit();\n    }\n/**\n * @return {?}\n */\nhasStartForm() {\n        return this.currentProcessDef && this.currentProcessDef.hasStartForm;\n    }\n/**\n * @return {?}\n */\nisProcessDefinitionEmpty() {\n        return this.processDefinitions ? (this.processDefinitions.length > 0 || this.errorMessageId) : this.errorMessageId;\n    }\n/**\n * @return {?}\n */\nisStartFormMissingOrValid() {\n        if (this.startForm) {\n            return this.startForm.form && this.startForm.form.isValid;\n        } else {\n            return true;\n        }\n    }\n/**\n * @return {?}\n */\nvalidateForm() {\n        return this.currentProcessDef.id && this.name && this.isStartFormMissingOrValid();\n    }\n/**\n * @return {?}\n */\nprivate resetSelectedProcessDefinition() {\n        this.currentProcessDef = new ProcessDefinitionRepresentation();\n    }\n/**\n * @return {?}\n */\nprivate resetErrorMessage(): void {\n        this.errorMessageId = '';\n    }\n/**\n * @return {?}\n */\nhasErrorMessage() {\n        return this.processDefinitions.length === 0 && !this.errorMessageId;\n    }\n/**\n * @param {?} outcome\n * @return {?}\n */\npublic onOutcomeClick(outcome: string) {\n        this.startProcess(outcome);\n    }\n/**\n * @return {?}\n */\npublic reset() {\n        this.resetSelectedProcessDefinition();\n        this.name = '';\n        if (this.startForm) {\n            this.startForm.data = {};\n        }\n        this.resetErrorMessage();\n    }\n/**\n * @return {?}\n */\nhasProcessName(): boolean {\n        return this.name ? true : false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-start-process',\n    template: `\n      <mat-card class=\"adf-start-process\">\n      \t<mat-card-title>{{'ADF_PROCESS_LIST.START_PROCESS.FORM.TITLE' | translate}}\n      \t</mat-card-title>\n      \t<mat-card-content *ngIf=\"isProcessDefinitionEmpty()\">\n      \t\t<mat-card-subtitle id=\"error-message\" *ngIf=\"errorMessageId\">\n      \t\t\t{{errorMessageId|translate}}\n      \t\t</mat-card-subtitle>\n      \t\t<mat-form-field class=\"adf-process-input-container\">\n      \t\t\t<input matInput placeholder=\"{{'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.NAME'|translate}}\" [(ngModel)]=\"name\" id=\"processName\" required />\n      \t\t</mat-form-field>\n              <mat-form-field>\n                  <mat-select placeholder=\"{{'ADF_PROCESS_LIST.START_PROCESS.FORM.LABEL.TYPE'|translate}}\" [(ngModel)]=\"currentProcessDef.id\" (ngModelChange)=\"onProcessDefChange($event)\" required>\n                      <mat-option>{{'ADF_PROCESS_LIST.START_PROCESS.FORM.TYPE_PLACEHOLDER' | translate}}</mat-option>\n                      <mat-option *ngFor=\"let processDef of processDefinitions\" [value]=\"processDef.id\">\n                          {{ processDef.name }}\n                      </mat-option>\n                  </mat-select>\n              </mat-form-field>\n              <adf-start-form *ngIf=\"hasStartForm()\"\n                  [disableStartProcessButton]=\"!hasProcessName()\"\n      \t\t\t[processDefinitionId]=\"currentProcessDef.id\"\n      \t\t\t(outcomeClick)=\"onOutcomeClick($event)\"\n      \t\t    [showRefreshButton]=\"false\">\n      \t\t<button form-custom-button mat-button (click)=\"cancelStartProcess()\" id=\"cancle_process\" class=\"\"> {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL'| translate}} </button>\n      \t\t</adf-start-form>\n      \t</mat-card-content>\n      \t<mat-card-content *ngIf=\"hasErrorMessage()\">\n      \t\t<mat-card-subtitle class=\"error-message\" id=\"no-process-message\">\n      \t\t\t{{'ADF_PROCESS_LIST.START_PROCESS.NO_PROCESS_DEFINITIONS' | translate}}\n      \t\t</mat-card-subtitle>\n      \t</mat-card-content>\n      \t<mat-card-actions *ngIf=\"!hasStartForm()\">\n      \t\t<button mat-button *ngIf=\"!hasStartForm()\" (click)=\"cancelStartProcess()\" id=\"cancle_process\" class=\"\"> {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.CANCEL'| translate}} </button>\n      \t\t<button mat-button *ngIf=\"!hasStartForm()\" [disabled]=\"!validateForm()\" (click)=\"startProcess()\" data-automation-id=\"btn-start\" id=\"button-start\" class=\"btn-start\"> {{'ADF_PROCESS_LIST.START_PROCESS.FORM.ACTION.START' | translate}} </button>\n      \t</mat-card-actions>\n      </mat-card>\n    `,\n    styles: [`\n      .adf-start-process {\n        width: calc(66.6666% - 48px);\n        margin-left: calc(33.3333333333% / 2);\n        margin-right: calc(33.3333333333% / 2);\n        margin-top: 10px; }\n        .adf-start-process .mat-select-trigger {\n          font-size: 14px !important; }\n        .adf-start-process mat-form-field {\n          width: 100%; }\n        .adf-start-process mat-select {\n          width: 100%;\n          padding: 16px 0px 0px 0px; }\n        .adf-start-process mat-card-actions {\n          text-align: right; }\n\n      .adf-process-input-container mat-form-field {\n        width: 100%; }\n\n      .adf-start-form-container .mat-card {\n        -webkit-box-shadow: none !important;\n                box-shadow: none !important;\n        padding: 0px !important; }\n\n      .adf-start-form-actions {\n        text-align: right !important; }\n    `],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'appId': [{ type: Input },],\n'variables': [{ type: Input },],\n'start': [{ type: Output },],\n'cancel': [{ type: Output },],\n'error': [{ type: Output },],\n'startForm': [{ type: ViewChild, args: [StartFormComponent, ] },],\n};\n}\n\nfunction StartProcessInstanceComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nStartProcessInstanceComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStartProcessInstanceComponent.ctorParameters;\n/** @type {?} */\nStartProcessInstanceComponent.propDecorators;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.appId;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.variables;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.start;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.cancel;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.error;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.startForm;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.processDefinitions;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.name;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.currentProcessDef;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.errorMessageId;\n/** @type {?} */\nStartProcessInstanceComponent.prototype.activitiProcess;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataColumn, DataRowEvent, DataSorting, DataTableAdapter, ObjectDataColumn, ObjectDataRow, ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AppConfigService, DataColumnListComponent } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { AfterContentInit, Component, ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { processPresetsDefaultModel } from '../models/process-preset.model';\nimport { ProcessService } from '../services/process.service';\nexport class ProcessInstanceListComponent implements OnChanges, AfterContentInit {\n\n     columnList: DataColumnListComponent;\n\n    \n    appId: number;\n\n    \n    processDefinitionKey: string;\n\n    \n    state: string;\n\n    \n    sort: string;\n\n    \n    name: string;\n\n    \n    presetColumn: string;\n\n    requestNode: ProcessFilterParamRepresentationModel;\n\n    \n    data: DataTableAdapter;\n\n    \n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    \n    success: EventEmitter<ProcessInstance[]> = new EventEmitter<ProcessInstance[]>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    isLoading: boolean = true;\n    layoutPresets = {};\n/**\n * @param {?} processService\n * @param {?} appConfig\n */\nconstructor(private processService: ProcessService,\nprivate appConfig: AppConfigService) {\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.loadLayoutPresets();\n        this.setupSchema();\n\n        if (this.appId) {\n            this.reload();\n        }\n    }\n/**\n * Setup html-based (html definitions) or code behind (data adapter) schema.\n * If component is assigned with an empty data adater the default schema settings applied.\n * @return {?}\n */\nsetupSchema() {\n        let /** @type {?} */ schema: DataColumn[] = [];\n\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map(c => /** @type {?} */(( <DataColumn> c)));\n        }\n\n        if (!this.data) {\n            this.data = new ObjectDataTableAdapter([], schema.length > 0 ? schema : this.getLayoutPreset(this.presetColumn));\n        } else {\n            if (schema && schema.length > 0) {\n                this.data.setColumns(schema);\n            } else if (this.data.getColumns().length === 0) {\n                this.presetColumn ? this.setupDefaultColumns(this.presetColumn) : this.setupDefaultColumns();\n            }\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            this.reload();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate isPropertyChanged(changes: SimpleChanges): boolean {\n        let /** @type {?} */ changed: boolean = false;\n\n        let /** @type {?} */ appId = changes['appId'];\n        let /** @type {?} */ processDefinitionKey = changes['processDefinitionKey'];\n        let /** @type {?} */ state = changes['state'];\n        let /** @type {?} */ sort = changes['sort'];\n        let /** @type {?} */ name = changes['name'];\n\n        if (appId && appId.currentValue) {\n            changed = true;\n        } else if (processDefinitionKey && processDefinitionKey.currentValue) {\n            changed = true;\n        } else if (state && state.currentValue) {\n            changed = true;\n        } else if (sort && sort.currentValue) {\n            changed = true;\n        } else if (name && name.currentValue) {\n            changed = true;\n        }\n        return changed;\n    }\n/**\n * @return {?}\n */\npublic reload() {\n        this.requestNode = this.createRequestNode();\n        this.load(this.requestNode);\n    }\n/**\n * @param {?} requestNode\n * @return {?}\n */\nprivate load(requestNode: ProcessFilterParamRepresentationModel) {\n        this.isLoading = true;\n        this.processService.getProcessInstances(requestNode, this.processDefinitionKey)\n            .subscribe(\n                (response) => {\n                    let /** @type {?} */ instancesRow = this.createDataRow(response);\n                    this.renderInstances(instancesRow);\n                    this.selectFirst();\n                    this.success.emit(response);\n                    this.isLoading = false;\n                },\n                error => {\n                    this.error.emit(error);\n                    this.isLoading = false;\n                });\n    }\n/**\n * Create an array of ObjectDataRow\n * @param {?} instances\n * @return {?}\n */\nprivate createDataRow(instances: any[]): ObjectDataRow[] {\n        let /** @type {?} */ instancesRows: ObjectDataRow[] = [];\n        instances.forEach((row) => {\n            instancesRows.push(new ObjectDataRow(row));\n        });\n        return instancesRows;\n    }\n/**\n * Render the instances list\n * \n * @param {?} instances\n * @return {?}\n */\nprivate renderInstances(instances: any[]) {\n        instances = this.optimizeNames(instances);\n        this.setDatatableSorting();\n        this.data.setRows(instances);\n    }\n/**\n * Sort the datatable rows based on current value of 'sort' property\n * @return {?}\n */\nprivate setDatatableSorting() {\n        if (!this.sort) {\n            return;\n        }\n        let /** @type {?} */ sortingParams: string[] = this.sort.split('-');\n        if (sortingParams.length === 2) {\n            let /** @type {?} */ sortColumn = sortingParams[0] === 'created' ? 'started' : sortingParams[0];\n            let /** @type {?} */ sortOrder = sortingParams[1];\n            this.data.setSorting(new DataSorting(sortColumn, sortOrder));\n        }\n    }\n/**\n * Select the first instance of a list if present\n * @return {?}\n */\nselectFirst() {\n        if (!this.isListEmpty()) {\n            let /** @type {?} */ row = this.data.getRows()[0];\n            row.isSelected = true;\n            this.data.selectedRow = row;\n            this.currentInstanceId = row.getValue('id');\n        } else {\n            if (this.data) {\n                this.data.selectedRow = null;\n            }\n            this.currentInstanceId = null;\n        }\n    }\n/**\n * Return the current id\n * @return {?}\n */\ngetCurrentId(): string {\n        return this.currentInstanceId;\n    }\n/**\n * Check if the list is empty\n * @return {?}\n */\nisListEmpty(): boolean {\n        return this.data === undefined ||\n            (this.data && this.data.getRows() && this.data.getRows().length === 0);\n    }\n/**\n * Emit the event rowClick passing the current task id when the row is clicked\n * @param {?} event\n * @return {?}\n */\nonRowClick(event: DataRowEvent) {\n        let /** @type {?} */ item = event;\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n/**\n * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row\n * @param {?} event\n * @return {?}\n */\nonRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n/**\n * Optimize name field\n * @param {?} instances\n * @return {?}\n */\nprivate optimizeNames(instances: any[]) {\n        instances = instances.map(t => {\n            t.obj.name = this.getProcessNameOrDescription(t.obj, 'medium');\n            return t;\n        });\n        return instances;\n    }\n/**\n * @param {?} processInstance\n * @param {?} dateFormat\n * @return {?}\n */\ngetProcessNameOrDescription(processInstance, dateFormat): string {\n        let /** @type {?} */ name = '';\n        if (processInstance) {\n            name = processInstance.name ||\n                processInstance.processDefinitionName + ' - ' + this.getFormatDate(processInstance.started, dateFormat);\n        }\n        return name;\n    }\n/**\n * @param {?} value\n * @param {?} format\n * @return {?}\n */\ngetFormatDate(value, format: string) {\n        let /** @type {?} */ datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch ( /** @type {?} */err) {\n            return '';\n        }\n    }\n/**\n * @return {?}\n */\nprivate createRequestNode() {\n        let /** @type {?} */ requestNode = {\n            appDefinitionId: this.appId,\n            state: this.state,\n            sort: this.sort\n        };\n        return new ProcessFilterParamRepresentationModel(requestNode);\n    }\n/**\n * @param {?=} preset\n * @return {?}\n */\nsetupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const /** @type {?} */ columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n/**\n * @return {?}\n */\nprivate loadLayoutPresets(): void {\n        const /** @type {?} */ externalSettings = this.appConfig.get('adf-process-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, processPresetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = processPresetsDefaultModel;\n        }\n\n    }\n/**\n * @param {?=} name\n * @return {?}\n */\nprivate getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-list',\n    styles: [`\n      adf-datatable >>> .column-header {\n          color: #232323;\n          font-size: 15px;\n      }\n\n      adf-datatable >>> .data-cell {\n          cursor: pointer !important;\n      }\n\n      adf-datatable >>> .cell-value{\n          width: 250px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis\n      }\n\n      .adf-process-list-loading-margin {\n          margin-left: calc((100% - 100px) / 2);\n          margin-right: calc((100% - 100px) / 2);\n      }\n\n      .no-content-message {\n          font-size: 16px;\n          font-weight: bold;\n          text-align: center;\n          opacity: 0.54;\n          color: #000;\n      }\n    `],\n    template: `\n      <div *ngIf=\"!requestNode\">{{ 'ADF_PROCESS_LIST.FILTERS.MESSAGES.NONE' | translate }}</div>\n      <div *ngIf=\"requestNode\">\n          <adf-datatable\n              [data]=\"data\"\n              [loading]=\"isLoading\"\n              (rowClick)=\"onRowClick($event)\"\n              (row-keyup)=\"onRowKeyUp($event)\">\n              <loading-content-template>\n                  <ng-template>\n                      <!--Add your custom loading template here-->\n                      <mat-progress-spinner\n                          class=\"adf-process-list-loading-margin\"\n                          [color]=\"'primary'\"\n                          [mode]=\"'indeterminate'\">\n                      </mat-progress-spinner>\n                  </ng-template>\n              </loading-content-template>\n              <no-content-template>\n                  <!--Add your custom empty template here-->\n                  <ng-template>\n                      <div class=\"no-content-message\">\n                          {{ 'ADF_PROCESS_LIST.LIST.NONE' | translate }}\n                      </div>\n                  </ng-template>\n              </no-content-template>\n          </adf-datatable>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessService, },\n{type: AppConfigService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnList': [{ type: ContentChild, args: [DataColumnListComponent, ] },],\n'appId': [{ type: Input },],\n'processDefinitionKey': [{ type: Input },],\n'state': [{ type: Input },],\n'sort': [{ type: Input },],\n'name': [{ type: Input },],\n'presetColumn': [{ type: Input },],\n'data': [{ type: Input },],\n'rowClick': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction ProcessInstanceListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstanceListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessInstanceListComponent.ctorParameters;\n/** @type {?} */\nProcessInstanceListComponent.propDecorators;\n/** @type {?} */\nProcessInstanceListComponent.prototype.columnList;\n/** @type {?} */\nProcessInstanceListComponent.prototype.appId;\n/** @type {?} */\nProcessInstanceListComponent.prototype.processDefinitionKey;\n/** @type {?} */\nProcessInstanceListComponent.prototype.state;\n/** @type {?} */\nProcessInstanceListComponent.prototype.sort;\n/** @type {?} */\nProcessInstanceListComponent.prototype.name;\n/** @type {?} */\nProcessInstanceListComponent.prototype.presetColumn;\n/** @type {?} */\nProcessInstanceListComponent.prototype.requestNode;\n/** @type {?} */\nProcessInstanceListComponent.prototype.data;\n/** @type {?} */\nProcessInstanceListComponent.prototype.rowClick;\n/** @type {?} */\nProcessInstanceListComponent.prototype.success;\n/** @type {?} */\nProcessInstanceListComponent.prototype.error;\n/** @type {?} */\nProcessInstanceListComponent.prototype.currentInstanceId;\n/** @type {?} */\nProcessInstanceListComponent.prototype.isLoading;\n/** @type {?} */\nProcessInstanceListComponent.prototype.layoutPresets;\n/** @type {?} */\nProcessInstanceListComponent.prototype.processService;\n/** @type {?} */\nProcessInstanceListComponent.prototype.appConfig;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let /** @type {?} */ processPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskDetailsEvent } from '../../task-list';\n\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { ProcessInstanceHeaderComponent } from './process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './process-instance-tasks.component';\nexport class ProcessInstanceDetailsComponent implements OnChanges {\n\n    \n    processInstanceId: string;\n\n    \n    processInstanceHeader: ProcessInstanceHeaderComponent;\n\n    \n    tasksList: ProcessInstanceTasksComponent;\n\n    \n    showTitle: boolean = true;\n\n    \n    showRefreshButton: boolean = true;\n\n    \n    processCancelled: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    processInstanceDetails: ProcessInstance;\n\n    \n    showProcessDiagram: EventEmitter<any> = new EventEmitter<any>();\n/**\n * Constructor\n * @param {?} activitiProcess   Process service\n * @param {?} logService\n */\nconstructor(private activitiProcess: ProcessService,\nprivate logService: LogService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ processInstanceId = changes['processInstanceId'];\n        if (processInstanceId && !processInstanceId.currentValue) {\n            this.reset();\n            return;\n        }\n        if (processInstanceId && processInstanceId.currentValue) {\n            this.load(processInstanceId.currentValue);\n            return;\n        }\n    }\n/**\n * Reset the task detail to undefined\n * @return {?}\n */\nreset() {\n        this.processInstanceDetails = null;\n    }\n/**\n * @param {?} processId\n * @return {?}\n */\nload(processId: string) {\n        if (processId) {\n            this.activitiProcess.getProcess(processId).subscribe(\n                (res: ProcessInstance) => {\n                    this.processInstanceDetails = res;\n                }\n            );\n        }\n    }\n/**\n * @return {?}\n */\nisRunning(): boolean {\n        return this.processInstanceDetails && !this.processInstanceDetails.ended;\n    }\n/**\n * @return {?}\n */\ncancelProcess() {\n        this.activitiProcess.cancelProcess(this.processInstanceId).subscribe(\n            (data) => {\n                this.processCancelled.emit(data);\n            }, (err) => {\n                this.error.emit(err);\n            });\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonTaskClicked(event: TaskDetailsEvent) {\n        this.taskClick.emit(event);\n    }\n/**\n * @param {?} dateFormat\n * @return {?}\n */\ngetProcessNameOrDescription(dateFormat): string {\n        let /** @type {?} */ name = '';\n        if (this.processInstanceDetails) {\n            name = this.processInstanceDetails.name ||\n                this.processInstanceDetails.processDefinitionName + ' - ' + this.getFormatDate(this.processInstanceDetails.started, dateFormat);\n        }\n        return name;\n    }\n/**\n * @param {?} value\n * @param {?} format\n * @return {?}\n */\ngetFormatDate(value, format: string) {\n        let /** @type {?} */ datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch ( /** @type {?} */err) {\n            this.logService.error(`ProcessListInstanceHeader: error parsing date ${value} to format ${format}`);\n        }\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nonShowProcessDiagram(processInstanceId: any) {\n        this.showProcessDiagram.emit({value: this.processInstanceId});\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-details',\n    template: `\n      <div *ngIf=\"!processInstanceDetails\">{{ 'ADF_PROCESS_LIST.DETAILS.MESSAGES.NONE'|translate }}</div>\n      <mat-card *ngIf=\"processInstanceDetails\">\n          <mat-card-header>\n              <mat-card-title>{{ getProcessNameOrDescription('medium') }}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n              <adf-process-instance-header\n                  [processInstance]=\"processInstanceDetails\"\n                  (showProcessDiagram)=\"onShowProcessDiagram($event)\">\n              </adf-process-instance-header>\n\n              <button class=\"adf-in-medias-res-button\" mat-button id=\"show-diagram-button\" type=\"button\" mat-button mat-raised-button [disabled]=\"!isRunning()\" (click)=\"onShowProcessDiagram(processInstanceId)\">{{ 'ADF_PROCESS_LIST.DETAILS.BUTTON.SHOW_DIAGRAM' | translate }}</button>\n\n              <mat-card>\n                  <mat-card-content>\n                      <adf-process-instance-tasks\n                          [processInstanceDetails]=\"processInstanceDetails\"\n                          (taskClick)=\"onTaskClicked($event)\">\n                      </adf-process-instance-tasks>\n                  </mat-card-content>\n              </mat-card>\n\n              <div data-automation-id=\"header-status\" *ngIf=\"isRunning()\" class=\"adf-in-medias-res-button\">\n                  <button mat-button type=\"button\" (click)=\"cancelProcess()\">{{ 'ADF_PROCESS_LIST.DETAILS.BUTTON.CANCEL' | translate }}</button>\n              </div>\n\n              <mat-card>\n                  <mat-card-content>\n                      <adf-process-instance-comments #activiticomments\n                          [readOnly]=\"false\"\n                          [processInstanceId]=\"processInstanceDetails.id\">\n                      </adf-process-instance-comments>\n                  </mat-card-content>\n              </mat-card>\n\n          </mat-card-content>\n      </mat-card>\n    `,\n    styles: [`\n      :host {\n          width: 100%;\n      }\n\n      .activiti-process-container {\n          width: 100%;\n          min-height: 100px;\n          overflow: visible;\n          padding: 10px;\n      }\n\n      .adf-comments-dialog {\n          position: fixed;\n          top: 50%;\n          -webkit-transform: translate(0, -50%);\n                  transform: translate(0, -50%);\n          width: 40%;\n      }\n\n      .adf-in-medias-res-button {\n          margin: 16px 0;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessService, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstanceId': [{ type: Input },],\n'processInstanceHeader': [{ type: ViewChild, args: [ProcessInstanceHeaderComponent, ] },],\n'tasksList': [{ type: ViewChild, args: [ProcessInstanceTasksComponent, ] },],\n'showTitle': [{ type: Input },],\n'showRefreshButton': [{ type: Input },],\n'processCancelled': [{ type: Output },],\n'error': [{ type: Output },],\n'taskClick': [{ type: Output },],\n'showProcessDiagram': [{ type: Output },],\n};\n}\n\nfunction ProcessInstanceDetailsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstanceDetailsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessInstanceDetailsComponent.ctorParameters;\n/** @type {?} */\nProcessInstanceDetailsComponent.propDecorators;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.processInstanceId;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.processInstanceHeader;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.tasksList;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.showTitle;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.showRefreshButton;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.processCancelled;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.error;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.taskClick;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.processInstanceDetails;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.showProcessDiagram;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.activitiProcess;\n/** @type {?} */\nProcessInstanceDetailsComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nexport class ProcessInstanceTasksComponent implements OnInit, OnChanges {\n\n    \n    processInstanceDetails: ProcessInstance;\n\n    \n    showRefreshButton: boolean = true;\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    activeTasks: TaskDetailsModel[] = [];\n    completedTasks: TaskDetailsModel[] = [];\nprivate taskObserver: Observer<TaskDetailsModel>;\nprivate completedTaskObserver: Observer<TaskDetailsModel>;\n\n    task$: Observable<TaskDetailsModel>;\n    completedTask$: Observable<TaskDetailsModel>;\n\n    message: string;\n    processId: string;\n\n    // @ViewChild('dialog')\n    // dialog: any;\n\n    \n    startDialog: any;\n\n    \n    taskdetails: any;\n\n    \n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n/**\n * @param {?} activitiProcess\n * @param {?} logService\n * @param {?} dialog\n */\nconstructor(private activitiProcess: ProcessService,\nprivate logService: LogService,\nprivate dialog: MatDialog) {\n        this.task$ = new Observable<TaskDetailsModel>(observer => this.taskObserver = observer).share();\n        this.completedTask$ = new Observable<TaskDetailsModel>(observer => this.completedTaskObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.task$.subscribe((task: TaskDetailsModel) => {\n            this.activeTasks.push(task);\n        });\n        this.completedTask$.subscribe((task: TaskDetailsModel) => {\n            this.completedTasks.push(task);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ processInstanceDetails = changes['processInstanceDetails'];\n        if (processInstanceDetails && processInstanceDetails.currentValue) {\n            this.load(processInstanceDetails.currentValue.id);\n        }\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nload(processInstanceId: string) {\n        this.loadActive(processInstanceId);\n        this.loadCompleted(processInstanceId);\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nloadActive(processInstanceId: string) {\n        this.activeTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, null).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.activeTasks = [];\n        }\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nloadCompleted(processInstanceId: string) {\n        this.completedTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, 'completed').subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.completedTaskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.completedTasks = [];\n        }\n    }\n/**\n * @return {?}\n */\nhasStartFormDefined(): boolean {\n        return this.processInstanceDetails && this.processInstanceDetails.startFormDefined === true;\n    }\n/**\n * @param {?} user\n * @return {?}\n */\ngetUserFullName(user: any) {\n        if (user) {\n            return (user.firstName && user.firstName !== 'null'\n                    ? user.firstName + ' ' : '') +\n                user.lastName;\n        }\n        return 'Nobody';\n    }\n/**\n * @param {?} value\n * @param {?} format\n * @return {?}\n */\ngetFormatDate(value, format: string) {\n        let /** @type {?} */ datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch ( /** @type {?} */err) {\n            this.logService.error(`ProcessListInstanceTask: error parsing date ${value} to format ${format}`);\n        }\n    }\n/**\n * @param {?} $event\n * @param {?} task\n * @return {?}\n */\nclickTask($event: any, task: TaskDetailsModel) {\n        let /** @type {?} */ args = new TaskDetailsEvent(task);\n        this.taskClick.emit(args);\n    }\n/**\n * @return {?}\n */\nclickStartTask() {\n        this.processId = this.processInstanceDetails.id;\n        this.showStartDialog();\n    }\n/**\n * @return {?}\n */\nshowStartDialog() {\n        this.dialog.open(this.startDialog, { height: '500px', width: '700px' });\n    }\n/**\n * @return {?}\n */\ncloseSartDialog() {\n        this.dialog.closeAll();\n    }\n/**\n * @return {?}\n */\nonRefreshClicked() {\n        this.load(this.processInstanceDetails.id);\n    }\n/**\n * @return {?}\n */\nonFormContentClick() {\n        this.closeSartDialog();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-tasks',\n    template: `\n      <div  *ngIf=\"showRefreshButton\" class=\"process-tasks-refresh\" >\n          <button mat-icon-button (click)=\"onRefreshClicked()\">\n              <mat-icon class=\"md-24\" aria-label=\"Refresh\">refresh</mat-icon>\n          </button>\n      </div>\n\n      <!-- ACTIVE FORM -->\n\n      <mat-chip-list>\n          <span class=\"adf-chip-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_ACTIVE'|translate }}</span>\n          <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{activeTasks?.length}}</mat-chip>\n      </mat-chip-list>\n\n      <div class=\"menu-container\" *ngIf=\"activeTasks?.length > 0\" data-automation-id=\"active-tasks\">\n          <mat-list>\n              <mat-list-item class=\"process-tasks__task-item\" *ngFor=\"let task of activeTasks\" (click)=\"clickTask($event, task)\">\n                      <mat-icon mat-list-icon>assignment</mat-icon>\n                      <h3 matLine>{{task.name || 'Nameless task'}}</h3>\n                      <span matLine>\n                          {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user: getUserFullName(task.assignee), created: getFormatDate(task.created, 'mediumDate') } }}\n                      </span>\n              </mat-list-item>\n          </mat-list>\n      </div>\n\n      <!-- START FORM -->\n\n      <div *ngIf=\"activeTasks?.length === 0\" data-automation-id=\"active-tasks-none\" class=\"no-results\">\n          {{ 'ADF_PROCESS_LIST.DETAILS.TASKS.NO_ACTIVE' | translate }}\n      </div>\n\n      <div *ngIf=\"hasStartFormDefined()\">\n          <span class=\"activiti-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</span>\n\n          <!--IF START TASK COMPLETED -->\n          <div class=\"menu-container\">\n              <mat-list>\n                  <mat-list-item class=\"process-tasks__task-item\" (click)=\"clickStartTask($event)\">\n                      <mat-icon mat-list-icon>assignment</mat-icon>\n                      <h3 matLine>{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</h3>\n                      <span matLine>\n                          {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user:getUserFullName(processInstanceDetails.startedBy), created: getFormatDate(processInstanceDetails.started, 'mediumDate') } }}\n                      </span>\n                  </mat-list-item>\n              </mat-list>\n          </div>\n\n      </div>\n\n      <!-- COMPLETED FORM -->\n      <mat-chip-list>\n              <span class=\"adf-chip-label\">{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASKS_COMPLETED'|translate }}</span>\n              <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{completedTasks?.length}}</mat-chip>\n      </mat-chip-list>\n\n      <div class=\"menu-container\" *ngIf=\"completedTasks?.length > 0\" data-automation-id=\"completed-tasks\">\n          <mat-list>\n              <mat-list-item class=\"process-tasks__task-item\" *ngFor=\"let task of completedTasks\" (click)=\"clickTask($event, task)\">\n                  <mat-icon mat-list-icon>assignment</mat-icon>\n                  <h3 matLine>{{task.name || 'Nameless task'}}</h3>\n                  <span matLine>\n                      {{ 'ADF_PROCESS_LIST.DETAILS.LABELS.TASK_SUBTITLE' | translate:{user:getUserFullName(task.assignee), created: getFormatDate(task.created, 'mediumDate') } }}\n                  </span>\n              </mat-list-item>\n          </mat-list>\n      </div>\n\n      <div *ngIf=\"completedTasks?.length === 0\" data-automation-id=\"completed-tasks-none\" class=\"no-results\">\n          {{ 'ADF_PROCESS_LIST.DETAILS.TASKS.NO_COMPLETED' | translate }}\n      </div>\n\n      <ng-template *ngIf=\"hasStartFormDefined()\" #startDialog>\n          <div id=\"adf-start-process-dialog\" class=\"adf-start-process-dialog\">\n              <h4 matDialogTitle>{{ 'ADF_PROCESS_LIST.DETAILS.LABELS.START_FORM'|translate }}</h4>\n              <div mat-dialog-content class=\"adf-start-process-dialog-content\">\n                  <adf-start-form [processId]=\"processId\"\n                                       [showRefreshButton]=\"false\" [readOnlyForm]=\"true\"\n                                       (formContentClicked)='onFormContentClick($event)'>\n                  </adf-start-form>\n              </div>\n              <div mat-dialog-actions class=\"adf-start-process-dialog-actions\">\n                  <button mat-button type=\"button\" (click)=\"closeSartDialog()\">{{ 'ADF_PROCESS_LIST.DETAILS.TASKS.TASK_CLOSE' | translate }}</button>\n              </div>\n          </div>\n      </ng-template>\n    `,\n    styles: [`\n      :host {\n          width: 100%;\n      }\n\n      .activiti-label {\n          font-weight: bolder;\n          vertical-align: top;\n      }\n\n      .adf-process-badge {\n          pointer-events: none;\n          outline: none;\n      }\n\n      .adf-chip-label {\n          position: relative;\n          top: 5px;\n          margin-right: 8px;\n          font-weight: bold;\n      }\n\n      .menu-container {\n          margin-bottom: 32px;\n      }\n\n      .activiti-label + .icon {\n          position: relative;\n          top: -2px;\n      }\n\n      .task-details-dialog {\n          position: fixed;\n          top: 50%;\n          -webkit-transform: translate(0, -50%);\n                  transform: translate(0, -50%);\n          width: 40%;\n      }\n\n      .process-tasks-refresh {\n          float: right;\n      }\n\n      .adf-start-process-dialog {\n          width: 100%;\n          height: 100%;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-box-orient: vertical;\n          -webkit-box-direction: normal;\n              -ms-flex-direction: column;\n                  flex-direction: column;\n      }\n\n      .adf-start-process-dialog-content {\n          -webkit-box-flex: 1;\n              -ms-flex-positive: 1;\n                  flex-grow: 1;\n      }\n\n      .adf-start-process-dialog-actions {\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-box-pack: end;\n              -ms-flex-pack: end;\n                  justify-content: flex-end;\n      }\n\n      .no-results {\n          margin-left: 9px;\n          font-size: 14px;\n          font-weight: 400;\n          letter-spacing: 0;\n          line-height: 18px;\n          color: rgba(0, 0, 0, .54);\n          display: block;\n          padding: 12px;\n      }\n\n      .process-tasks__task-item {\n          cursor: pointer;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessService, },\n{type: LogService, },\n{type: MatDialog, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstanceDetails': [{ type: Input },],\n'showRefreshButton': [{ type: Input },],\n'error': [{ type: Output },],\n'startDialog': [{ type: ViewChild, args: ['startDialog', ] },],\n'taskdetails': [{ type: ViewChild, args: ['taskdetails', ] },],\n'taskClick': [{ type: Output },],\n};\n}\n\nfunction ProcessInstanceTasksComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstanceTasksComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessInstanceTasksComponent.ctorParameters;\n/** @type {?} */\nProcessInstanceTasksComponent.propDecorators;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.processInstanceDetails;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.showRefreshButton;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.error;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.activeTasks;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.completedTasks;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.taskObserver;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.completedTaskObserver;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.task$;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.completedTask$;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.message;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.processId;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.startDialog;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.taskdetails;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.taskClick;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.activitiProcess;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.logService;\n/** @type {?} */\nProcessInstanceTasksComponent.prototype.dialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TaskListComponent,ChecklistComponent,TaskHeaderComponent,NoTaskDetailsTemplateDirective,TaskFiltersComponent,TaskDetailsComponent,TaskAuditDirective,StartTaskComponent,TaskListService,ProcessUploadService,TaskUploadService,TaskFilterService,AppDefinitionRepresentationModel,FilterParamsModel,FilterRepresentationModel,FilterParamRepresentationModel,TaskQueryRequestRepresentationModel,TaskDetailsModel,TaskDetailsEvent,UserEventModel,StartTaskModel,TaskListModel} from './public-api';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {TaskListComponent} from './components/task-list.component';\nexport {ChecklistComponent} from './components/checklist.component';\nexport {TaskHeaderComponent} from './components/task-header.component';\nexport {NoTaskDetailsTemplateDirective} from './components/no-task-detail-template.directive';\nexport {TaskFiltersComponent} from './components/task-filters.component';\nexport {TaskDetailsComponent} from './components/task-details.component';\nexport {TaskAuditDirective} from './components/task-audit.directive';\nexport {StartTaskComponent} from './components/start-task.component';\n\nexport {TaskListService} from './services/tasklist.service';\nexport {ProcessUploadService} from './services/process-upload.service';\nexport {TaskUploadService} from './services/task-upload.service';\nexport {TaskFilterService} from './services/task-filter.service';\n\nexport {AppDefinitionRepresentationModel,FilterParamsModel,FilterRepresentationModel,FilterParamRepresentationModel,TaskQueryRequestRepresentationModel} from './models/filter.model';\nexport {TaskDetailsModel} from './models/task-details.model';\nexport {TaskDetailsEvent} from './models/task-details.event';\nexport {UserEventModel} from './models/user-event.model';\nexport {StartTaskModel} from './models/start-task.model';\nexport {TaskListModel} from './models/task-list.model';\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { TaskDetailsModel } from './task-details.model';\nexport class TaskDetailsEvent {\nprivate _value: TaskDetailsModel;\nprivate _defaultPrevented: boolean = false;\n/**\n * @return {?}\n */\nget value(): TaskDetailsModel {\n        return this._value;\n    }\n/**\n * @return {?}\n */\nget defaultPrevented() {\n        return this._defaultPrevented;\n    }\n/**\n * @param {?} value\n */\nconstructor(value: TaskDetailsModel) {\n        this._value = value;\n    }\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n}\n\nfunction TaskDetailsEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskDetailsEvent.prototype._value;\n/** @type {?} */\nTaskDetailsEvent.prototype._defaultPrevented;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CardViewDateItemModel, CardViewItem, CardViewTextItemModel } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ProcessInstance } from '../models/process-instance.model';\nexport class ProcessInstanceHeaderComponent implements OnChanges {\n\n    \n    processInstance: ProcessInstance;\n\n    properties: CardViewItem [];\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n/**\n * @return {?}\n */\nrefreshData() {\n        if (this.processInstance) {\n            this.properties = [\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.STATUS',\n                        value: this.getProcessStatus(),\n                        key: 'status'\n                    }),\n                new CardViewDateItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE',\n                        value: this.processInstance.ended,\n                        format: 'MMM DD YYYY',\n                        key: 'ended',\n                        default: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT'\n                    }),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY',\n                        value: this.processInstance.processDefinitionCategory,\n                        key: 'category',\n                        default: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT'\n                    }),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY',\n                        value: this.processInstance.businessKey,\n                        key: 'businessKey',\n                        default: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT'\n                    }),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY',\n                        value: this.getStartedByFullName(),\n                        key: 'assignee',\n                        default: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT'\n                    }),\n                new CardViewDateItemModel(\n                    {\n                        label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n                        value: this.processInstance.started,\n                        format: 'MMM DD YYYY',\n                        key: 'created'\n                    }),\n                new CardViewTextItemModel(\n                    {label: 'ADF_PROCESS_LIST.PROPERTIES.ID',\n                    value: this.processInstance.id,\n                    key: 'id'\n                }),\n                new CardViewTextItemModel(\n                    {label: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION',\n                    value: this.processInstance.processDefinitionDescription,\n                    key: 'description',\n                    default: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT'\n                })\n            ];\n        }\n    }\n/**\n * @return {?}\n */\ngetProcessStatus(): string {\n        if (this.processInstance) {\n            return this.isRunning() ? 'Running' : 'Completed';\n        }\n    }\n/**\n * @return {?}\n */\ngetStartedByFullName(): string {\n        let /** @type {?} */ fullName = '';\n        if (this.processInstance && this.processInstance.startedBy) {\n            fullName += this.processInstance.startedBy.firstName || '';\n            fullName += fullName ? ' ' : '';\n            fullName += this.processInstance.startedBy.lastName || '';\n        }\n        return fullName;\n    }\n/**\n * @return {?}\n */\nisRunning(): boolean {\n        return this.processInstance && !this.processInstance.ended;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-header',\n    template: `\n      <mat-card *ngIf=\"processInstance\" class=\"adf-card-container\">\n          <mat-card-content>\n              <adf-card-view [properties]=\"properties\"></adf-card-view>\n          </mat-card-content>\n      </mat-card>\n    `,\n    styles: [`\n      :host {\n          width: 100%;\n      }\n\n      .adf-card-container {\n          font-family: inherit;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstance': [{ type: Input },],\n};\n}\n\nfunction ProcessInstanceHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstanceHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessInstanceHeaderComponent.ctorParameters;\n/** @type {?} */\nProcessInstanceHeaderComponent.propDecorators;\n/** @type {?} */\nProcessInstanceHeaderComponent.prototype.processInstance;\n/** @type {?} */\nProcessInstanceHeaderComponent.prototype.properties;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nexport class ProcessFiltersComponent implements OnInit, OnChanges {\n\n    \n    filterParam: FilterProcessRepresentationModel;\n\n    \n    filterClick: EventEmitter<ProcessInstanceFilterRepresentation> = new EventEmitter<ProcessInstanceFilterRepresentation>();\n\n    \n    success: EventEmitter<ProcessInstanceFilterRepresentation[]> = new EventEmitter<ProcessInstanceFilterRepresentation[]>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    appId: number;\n\n    \n    appName: string;\n\n    \n    showIcon: boolean = true;\nprivate filterObserver: Observer<ProcessInstanceFilterRepresentation>;\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n\n    currentFilter: ProcessInstanceFilterRepresentation;\n\n    filters: ProcessInstanceFilterRepresentation [] = [];\n/**\n * @param {?} processFilterService\n * @param {?} appsProcessService\n */\nconstructor(private processFilterService: ProcessFilterService,\nprivate appsProcessService: AppsProcessService) {\n        this.filter$ = new Observable<ProcessInstanceFilterRepresentation>(observer => this.filterObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.filter$.subscribe((filter: ProcessInstanceFilterRepresentation) => {\n            this.filters.push(filter);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ appId = changes['appId'];\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n            return;\n        }\n        let /** @type {?} */ appName = changes['appName'];\n        if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n            return;\n        }\n    }\n/**\n * Return the filter list filtered by appId\n * @param {?=} appId - optional\n * @return {?}\n */\ngetFiltersByAppId(appId?: number) {\n        this.processFilterService.getProcessFilters(appId).subscribe(\n            (res: ProcessInstanceFilterRepresentation[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.processFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: ProcessInstanceFilterRepresentation[]) => {\n                            this.resetFilter();\n                            resDefault.forEach((filter) => {\n                                this.filterObserver.next(filter);\n                            });\n\n                            this.selectProcessFilter(this.filterParam);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    res.forEach((filter) => {\n                        this.filterObserver.next(filter);\n                    });\n\n                    this.selectProcessFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * Return the filter list filtered by appName\n * @param {?} appName\n * @return {?}\n */\ngetFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            application => {\n                this.getFiltersByAppId(application.id);\n                this.selectProcessFilter(this.filterParam);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n/**\n * Pass the selected filter as next\n * @param {?} filter\n * @return {?}\n */\npublic selectFilter(filter: ProcessInstanceFilterRepresentation) {\n        this.currentFilter = filter;\n        this.filterClick.emit(filter);\n    }\n/**\n * Select the first filter of a list if present\n * @param {?} filterParam\n * @return {?}\n */\npublic selectProcessFilter(filterParam: FilterProcessRepresentationModel) {\n        if (filterParam) {\n            this.filters.filter((processFilter: ProcessInstanceFilterRepresentation, index) => {\n                if (filterParam.name && filterParam.name.toLowerCase() === processFilter.name.toLowerCase() || filterParam.index === index) {\n                    this.currentFilter = processFilter;\n                }\n            });\n        }\n        if (this.isCurrentFilterEmpty()) {\n            this.selectDefaultTaskFilter();\n        }\n    }\n/**\n * Select the Running filter\n * @return {?}\n */\npublic selectRunningFilter() {\n        this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null));\n    }\n/**\n * Select as default task filter the first in the list\n * @return {?}\n */\npublic selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n/**\n * Return the current task\n * @return {?}\n */\ngetCurrentFilter(): ProcessInstanceFilterRepresentation {\n        return this.currentFilter;\n    }\n/**\n * Check if the filter list is empty\n * @return {?}\n */\nisFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n/**\n * Reset the filters properties\n * @return {?}\n */\nprivate resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n/**\n * @return {?}\n */\nprivate isCurrentFilterEmpty(): boolean {\n        return this.currentFilter === undefined || null ? true : false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-filters',\n    template: `\n      <div class=\"menu-container\">\n          <mat-list>\n              <mat-list-item (click)=\"selectFilter(filter)\" *ngFor=\"let filter of filters\"\n                              class=\"adf-filters__entry\" [class.active]=\"currentFilter === filter\">\n                  <mat-icon *ngIf=\"hasIcon\" matListIcon class=\"adf-filters__entry-icon\">assignment</mat-icon>\n                  <span matLine [attr.data-automation-id]=\"filter.name + '_filter'\">{{filter.name}}</span>\n              </mat-list-item>\n          </mat-list>\n      </div>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProcessFilterService, },\n{type: AppsProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filterParam': [{ type: Input },],\n'filterClick': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'appId': [{ type: Input },],\n'appName': [{ type: Input },],\n'showIcon': [{ type: Input },],\n};\n}\n\nfunction ProcessFiltersComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessFiltersComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessFiltersComponent.ctorParameters;\n/** @type {?} */\nProcessFiltersComponent.propDecorators;\n/** @type {?} */\nProcessFiltersComponent.prototype.filterParam;\n/** @type {?} */\nProcessFiltersComponent.prototype.filterClick;\n/** @type {?} */\nProcessFiltersComponent.prototype.success;\n/** @type {?} */\nProcessFiltersComponent.prototype.error;\n/** @type {?} */\nProcessFiltersComponent.prototype.appId;\n/** @type {?} */\nProcessFiltersComponent.prototype.appName;\n/** @type {?} */\nProcessFiltersComponent.prototype.showIcon;\n/** @type {?} */\nProcessFiltersComponent.prototype.filterObserver;\n/** @type {?} */\nProcessFiltersComponent.prototype.filter$;\n/** @type {?} */\nProcessFiltersComponent.prototype.currentFilter;\n/** @type {?} */\nProcessFiltersComponent.prototype.filters;\n/** @type {?} */\nProcessFiltersComponent.prototype.processFilterService;\n/** @type {?} */\nProcessFiltersComponent.prototype.appsProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport'rxjs/add/observable/throw';\nexport class ProcessFilterService {\n/**\n * @param {?} alfrescoApiService\n */\nconstructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n/**\n * @param {?} appId\n * @return {?}\n */\ngetProcessFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        return Observable.fromPromise(this.callApiProcessFilters(appId))\n            .map((response: any) => {\n                let /** @type {?} */ filters: FilterProcessRepresentationModel[] = [];\n                response.data.forEach((filter: FilterProcessRepresentationModel) => {\n                    let /** @type {?} */ filterModel = new FilterProcessRepresentationModel(filter);\n                    filters.push(filterModel);\n                });\n                return filters;\n            })\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * Retrieve the process filter by id\n * @param {?} filterId - number - The id of the filter\n * @param {?=} appId - string - optional - The id of app\n * @return {?}\n */\ngetProcessFilterById(filterId: number, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return Observable.fromPromise(this.callApiProcessFilters(appId))\n            .map((response: any) => {\n                return response.data.find(filter => filter.id === filterId);\n            }).catch(err => this.handleProcessError(err));\n    }\n/**\n * Retrieve the process filter by name\n * @param {?} filterName - string - The name of the filter\n * @param {?=} appId - string - optional - The id of app\n * @return {?}\n */\ngetProcessFilterByName(filterName: string, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return Observable.fromPromise(this.callApiProcessFilters(appId))\n            .map((response: any) => {\n                return response.data.find(filter => filter.name === filterName);\n            }).catch(err => this.handleProcessError(err));\n    }\n/**\n * Create and return the default filters\n * @param {?} appId\n * @return {?}\n */\npublic createDefaultFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        let /** @type {?} */ runningFilter = this.getRunningFilterInstance(appId);\n        let /** @type {?} */ runningObservable = this.addProcessFilter(runningFilter);\n\n        let /** @type {?} */ completedFilter = this.getCompletedFilterInstance(appId);\n        let /** @type {?} */ completedObservable = this.addProcessFilter(completedFilter);\n\n        let /** @type {?} */ allFilter = this.getAllFilterInstance(appId);\n        let /** @type {?} */ allObservable = this.addProcessFilter(allFilter);\n\n        return Observable.create(observer => {\n            Observable.forkJoin(\n                runningObservable,\n                completedObservable,\n                allObservable\n            ).subscribe(\n                (res) => {\n                    let /** @type {?} */ filters: FilterProcessRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === runningFilter.name) {\n                            filters.push(runningFilter);\n                        } else if (filter.name === completedFilter.name) {\n                            filters.push(completedFilter);\n                        } else if (filter.name === allFilter.name) {\n                            filters.push(allFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.handleProcessError(err);\n                });\n        });\n    }\n/**\n * @param {?} appId\n * @return {?}\n */\npublic getRunningFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Running',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-random',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'running' }\n        });\n    }\n/**\n * Return a static Completed filter instance\n * @param {?} appId\n * @return {?}\n */\nprivate getCompletedFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Completed',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed' }\n        });\n    }\n/**\n * Return a static All filter instance\n * @param {?} appId\n * @return {?}\n */\nprivate getAllFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'All',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-th',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'all' }\n        });\n    }\n/**\n * Add a filter\n * @param {?} filter - FilterProcessRepresentationModel\n * @return {?}\n */\naddProcessFilter(filter: FilterProcessRepresentationModel): Observable<FilterProcessRepresentationModel> {\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.userFiltersApi.createUserProcessInstanceFilter(filter))\n            .map(res => res)\n            .map((response: FilterProcessRepresentationModel) => {\n                return response;\n            }).catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?=} appId\n * @return {?}\n */\ncallApiProcessFilters(appId?: number) {\n        if (appId) {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters({ appId: appId });\n        } else {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters();\n        }\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleProcessError(error: any) {\n        return Observable.throw(error || 'Server error');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n];\n}\n\nfunction ProcessFilterService_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessFilterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessFilterService.ctorParameters;\n/** @type {?} */\nProcessFilterService.prototype.alfrescoApiService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ProcessFilterRequestRepresentation, ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from 'alfresco-js-api';\nexport class FilterProcessRepresentationModel implements UserProcessInstanceFilterRepresentation {\n    appId: number;\n    filter: ProcessInstanceFilterRepresentation;\n    icon: number;\n    id: number;\n    index: number;\n    name: string;\n    recent: boolean;\n/**\n * @param {?} obj\n */\nconstructor(obj: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = obj.filter || null;\n            this.index = obj.index;\n        }\n    }\n/**\n * @return {?}\n */\nhasFilter() {\n        return !!this.filter;\n    }\n}\n\nfunction FilterProcessRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.appId;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.filter;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.icon;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.id;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.index;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.name;\n/** @type {?} */\nFilterProcessRepresentationModel.prototype.recent;\n}\n\n/**\n * \n * This object represent the parameters of a process filter.\n * \n * \n */\nexport class ProcessFilterParamRepresentationModel implements ProcessFilterRequestRepresentation {\n\n    processDefinitionId?: number;\n    appDefinitionId?: number;\n    state?: string;\n    sort?: string;\n    page?: number;\n    size?: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.appDefinitionId = obj.appDefinitionId || null;\n        this.state = obj.state || null;\n        this.sort = obj.sort || null;\n        this.page = obj.page || null;\n        this.size = obj.size || null;\n    }\n}\n\nfunction ProcessFilterParamRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.processDefinitionId;\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.appDefinitionId;\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.state;\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.sort;\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.page;\n/** @type {?} */\nProcessFilterParamRepresentationModel.prototype.size;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessService } from './../services/process.service';\n\nconst /** @type {?} */ JSON_FORMAT: string = 'json';\nconst /** @type {?} */ PDF_FORMAT: string = 'pdf';\nexport class ProcessAuditDirective implements OnChanges {\n\n    \n    processId: string;\n\n    \n    fileName: string = 'Audit';\n\n    \n    format: string = 'pdf';\n\n    \n    download: boolean = true;\n\n    \n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\npublic audit: any;\n/**\n *\n * @param {?} contentService\n * @param {?} processListService\n */\nconstructor(private contentService: ContentService,\nprivate processListService: ProcessService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n/**\n * @return {?}\n */\nisValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\nsetDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n/**\n * fetch the audit information in the requested format\n * @return {?}\n */\nfetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.processListService.fetchProcessAuditPdfById(this.processId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.processListService.fetchProcessAuditJsonById(this.processId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n/**\n * @return {?}\n */\nonClickAudit() {\n        this.fetchAuditInfo();\n    }\n/**\n * @return {?}\n */\nisJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n/**\n * @return {?}\n */\nisPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'button[adf-process-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentService, },\n{type: ProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processId': [{ type: Input, args: ['process-id', ] },],\n'fileName': [{ type: Input },],\n'format': [{ type: Input },],\n'download': [{ type: Input },],\n'clicked': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction ProcessAuditDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessAuditDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessAuditDirective.ctorParameters;\n/** @type {?} */\nProcessAuditDirective.propDecorators;\n/** @type {?} */\nProcessAuditDirective.prototype.processId;\n/** @type {?} */\nProcessAuditDirective.prototype.fileName;\n/** @type {?} */\nProcessAuditDirective.prototype.format;\n/** @type {?} */\nProcessAuditDirective.prototype.download;\n/** @type {?} */\nProcessAuditDirective.prototype.clicked;\n/** @type {?} */\nProcessAuditDirective.prototype.error;\n/** @type {?} */\nProcessAuditDirective.prototype.audit;\n/** @type {?} */\nProcessAuditDirective.prototype.contentService;\n/** @type {?} */\nProcessAuditDirective.prototype.processListService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { TaskDetailsModel } from '../../task-list';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessDefinitionRepresentation } from '../models/process-definition.model';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport'rxjs/add/observable/throw';\n\ndeclare let moment: any;\nexport class ProcessService {\n/**\n * @param {?} alfrescoApiService\n */\nconstructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n/**\n * @param {?} requestNode\n * @param {?=} processDefinitionKey\n * @return {?}\n */\ngetProcessInstances(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessInstance[]> {\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstances(requestNode))\n            .map((res: any) => {\n                if (processDefinitionKey) {\n                    return res.data.filter(process => process.processDefinitionKey === processDefinitionKey);\n                } else {\n                    return res.data;\n                }\n            }).catch(err => this.handleProcessError(err));\n    }\n/**\n * fetch the Process Audit information as a pdf\n * @param {?} processId - the process id\n * @return {?}\n */\nfetchProcessAuditPdfById(processId: string): Observable<Blob> {\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditPdf(processId))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * fetch the Process Audit information in a json format\n * @param {?} processId - the process id\n * @return {?}\n */\nfetchProcessAuditJsonById(processId: string): Observable<any> {\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditJson(processId))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\ngetProcess(processInstanceId: string): Observable<ProcessInstance> {\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstance(processInstanceId))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @param {?=} state\n * @return {?}\n */\ngetProcessTasks(processInstanceId: string, state?: string): Observable<TaskDetailsModel[]> {\n        let /** @type {?} */ taskOpts = state ? {\n                processInstanceId: processInstanceId,\n                state: state\n            } : {\n                processInstanceId: processInstanceId\n            };\n        return Observable.fromPromise(this.alfrescoApiService.getInstance().activiti.taskApi.listTasks(taskOpts))\n            .map(this.extractData)\n            .map(tasks => tasks.map((task: any) => {\n                task.created = moment(task.created, 'YYYY-MM-DD').format();\n                return task;\n            }))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?=} appId\n * @return {?}\n */\ngetProcessDefinitions(appId?: number): Observable<ProcessDefinitionRepresentation[]> {\n        let /** @type {?} */ opts = appId ? {\n                latest: true,\n                appDefinitionId: appId\n            } : {\n                latest: true\n            };\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processApi.getProcessDefinitions(opts)\n        )\n            .map(this.extractData)\n            .map(processDefs => processDefs.map((pd) => new ProcessDefinitionRepresentation(pd)))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processDefinitionId\n * @param {?} name\n * @param {?=} outcome\n * @param {?=} startFormValues\n * @param {?=} variables\n * @return {?}\n */\nstartProcess(processDefinitionId: string, name: string, outcome?: string, startFormValues?: any, variables?: ProcessInstanceVariable[]): Observable<ProcessInstance> {\n        let /** @type {?} */ startRequest: any = {\n            name: name,\n            processDefinitionId: processDefinitionId\n        };\n        if (outcome) {\n            startRequest.outcome = outcome;\n        }\n        if (startFormValues) {\n            startRequest.values = startFormValues;\n        }\n        if (variables) {\n            startRequest.variables = variables;\n        }\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processApi.startNewProcessInstance(startRequest)\n        )\n            .map((pd) => new ProcessInstance(pd))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\ncancelProcess(processInstanceId: string): Observable<void> {\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processApi.deleteProcessInstance(processInstanceId)\n        )\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\ngetProcessInstanceVariables(processInstanceId: string): Observable<ProcessInstanceVariable[]> {\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId)\n        )\n            .map((processVars: any[]) => processVars.map((pd) => new ProcessInstanceVariable(pd)))\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @param {?} variables\n * @return {?}\n */\ncreateOrUpdateProcessInstanceVariables(processInstanceId: string, variables: ProcessInstanceVariable[]): Observable<ProcessInstanceVariable[]> {\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(processInstanceId, variables)\n        )\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} processInstanceId\n * @param {?} variableName\n * @return {?}\n */\ndeleteProcessInstanceVariable(processInstanceId: string, variableName: string): Observable<void> {\n        return Observable.fromPromise(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.deleteProcessInstanceVariable(processInstanceId, variableName)\n        )\n            .catch(err => this.handleProcessError(err));\n    }\n/**\n * @param {?} res\n * @return {?}\n */\nprivate extractData(res: any) {\n        return res.data || {};\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleProcessError(error: any) {\n        return Observable.throw(error || 'Server error');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n];\n}\n\nfunction ProcessService_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessService.ctorParameters;\n/** @type {?} */\nProcessService.prototype.alfrescoApiService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { LightUserRepresentation, ProcessInstanceRepresentation, RestVariable } from 'alfresco-js-api';\nexport class ProcessInstance implements ProcessInstanceRepresentation {\n\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    tenantId?: string;\n    variables?: RestVariable[];\n/**\n * @param {?=} data\n */\nconstructor(data?: any) {\n        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;\n        this.ended = data && data.ended !== undefined ? data.ended : null;\n        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;\n        this.id = data && data.id !== undefined ? data.id : null;\n        this.name = data && data.name !== undefined ? data.name : null;\n        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;\n        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;\n        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;\n        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;\n        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;\n        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;\n        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;\n        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;\n        this.started = data && data.started !== undefined ? data.started : null;\n        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;\n        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;\n        this.variables = data && data.variables !== undefined ? data.variables : null;\n    }\n\n}\n\nfunction ProcessInstance_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstance.prototype.businessKey;\n/** @type {?} */\nProcessInstance.prototype.ended;\n/** @type {?} */\nProcessInstance.prototype.graphicalNotationDefined;\n/** @type {?} */\nProcessInstance.prototype.id;\n/** @type {?} */\nProcessInstance.prototype.name;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionCategory;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionDeploymentId;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionDescription;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionId;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionKey;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionName;\n/** @type {?} */\nProcessInstance.prototype.processDefinitionVersion;\n/** @type {?} */\nProcessInstance.prototype.startFormDefined;\n/** @type {?} */\nProcessInstance.prototype.started;\n/** @type {?} */\nProcessInstance.prototype.startedBy;\n/** @type {?} */\nProcessInstance.prototype.tenantId;\n/** @type {?} */\nProcessInstance.prototype.variables;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { RestVariable } from 'alfresco-js-api';\nexport class ProcessInstanceVariable implements RestVariable {\n\n    name?: string;\n    scope?: string;\n    type?: string;\n    value?: string;\n    valueUrl?: string;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.name = obj && obj.name !== undefined ? obj.name : null;\n        this.scope = obj && obj.scope !== undefined ? obj.scope : null;\n        this.value = obj && obj.value !== undefined ? obj.value : null;\n        this.valueUrl = obj && obj.valueUrl !== undefined ? obj.valueUrl : null;\n    }\n}\n\nfunction ProcessInstanceVariable_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessInstanceVariable.prototype.name;\n/** @type {?} */\nProcessInstanceVariable.prototype.scope;\n/** @type {?} */\nProcessInstanceVariable.prototype.type;\n/** @type {?} */\nProcessInstanceVariable.prototype.value;\n/** @type {?} */\nProcessInstanceVariable.prototype.valueUrl;\n}\n\n","\nexport class ProcessDefinitionRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    key: string;\n    category: string;\n    version: number;\n    deploymentId: string;\n    tenantId: string;\n    metaDataValues: any[];\n    hasStartForm: boolean;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.key = obj && obj.key || null;\n        this.category = obj && obj.category || null;\n        this.version = obj && obj.version || 0;\n        this.deploymentId = obj && obj.deploymentId || null;\n        this.tenantId = obj && obj.tenantId || null;\n        this.metaDataValues = obj && obj.metaDataValues || [];\n        this.hasStartForm = obj && obj.hasStartForm === true ? true : false;\n    }\n}\n\nfunction ProcessDefinitionRepresentation_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.id;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.name;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.description;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.key;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.category;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.version;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.deploymentId;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.tenantId;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.metaDataValues;\n/** @type {?} */\nProcessDefinitionRepresentation.prototype.hasStartForm;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormModule } from '@alfresco/adf-core';\n\nimport { CardViewModule, DataColumnModule,  DataTableModule, DirectiveModule, InfoDrawerModule } from '@alfresco/adf-core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { PeopleModule } from '../people/people.module';\nimport { CommentsModule } from '../comments/comments.module';\nimport { TaskUploadService } from './services/task-upload.service';\nimport { ProcessUploadService } from './services/process-upload.service';\nimport { TaskListService } from './services/tasklist.service';\nimport { TaskFilterService } from './services/task-filter.service';\n\nimport { ChecklistComponent } from './components/checklist.component';\nimport { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';\nimport { StartTaskComponent } from './components/start-task.component';\nimport { TaskAuditDirective } from './components/task-audit.directive';\nimport { TaskDetailsComponent } from './components/task-details.component';\nimport { TaskFiltersComponent } from './components/task-filters.component';\nimport { TaskHeaderComponent } from './components/task-header.component';\nimport { TaskListComponent } from './components/task-list.component';\nexport class TaskListModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        CardViewModule,\n        DataTableModule,\n        DataColumnModule,\n        DirectiveModule,\n        FormModule,\n        FlexLayoutModule,\n        InfoDrawerModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PeopleModule,\n        CommentsModule\n    ],\n    declarations: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent\n    ],\n    providers: [\n        TaskListService,\n        TaskFilterService,\n        TaskUploadService,\n        ProcessUploadService,\n        DatePipe\n    ],\n    exports: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TaskListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskListModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataColumn, DataRowEvent, DataTableAdapter, ObjectDataColumn, ObjectDataRow, ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AppConfigService, DataColumnListComponent } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { taskPresetsDefaultModel } from '../models/task-preset.model';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst /** @type {?} */ DEFAULT_SIZE = 5;\nexport class TaskListComponent implements OnChanges, OnInit, AfterContentInit {\n\n    requestNode: TaskQueryRequestRepresentationModel;\n\n     columnList: DataColumnListComponent;\n\n    \n    appId: number;\n\n    \n    processInstanceId: string;\n\n    \n    processDefinitionKey: string;\n\n    \n    state: string;\n\n    \n    assignment: string;\n\n    \n    sort: string;\n\n    \n    name: string;\n\n    \n    landingTaskId: string;\n\n    \n    data: DataTableAdapter;\n\n    \n    selectionMode: string = 'single'; // none|single|multiple\n\n    \n    presetColumn: string;\n\n    \n    multiselect: boolean = false;\n\n    \n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    \n    rowsSelected: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    \n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    selectedInstances: any[];\n    layoutPresets = {};\n\n    \n    page: number = 0;\n\n    \n    size: number = DEFAULT_SIZE;\n\n    isLoading: boolean = true;\n/**\n * Toggles custom data source mode.\n * When enabled the component reloads data from it's current source instead of the server side.\n * This allows generating and displaying custom data sets (i.e. filtered out content).\n * \n * \\@memberOf TaskListComponent\n */\nhasCustomDataSource: boolean = false;\n    isStreamLoaded = false;\n/**\n * @param {?} taskListService\n * @param {?} appConfig\n */\nconstructor(private taskListService: TaskListService,\nprivate appConfig: AppConfigService) {\n    }\n/**\n * @return {?}\n */\ninitStream() {\n        if (!this.isStreamLoaded) {\n            this.isStreamLoaded = true;\n            this.taskListService.tasksList$.subscribe(\n                (tasks) => {\n                    let /** @type {?} */ instancesRow = this.createDataRow(tasks.data);\n                    this.renderInstances(instancesRow);\n                    this.selectTask(this.landingTaskId);\n                    this.success.emit(tasks);\n                    this.isLoading = false;\n                }, (error) => {\n                    this.error.emit(error);\n                    this.isLoading = false;\n                });\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.data === undefined) {\n            this.data = new ObjectDataTableAdapter();\n        }\n        this.initStream();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.loadLayoutPresets();\n        this.setupSchema();\n    }\n/**\n * Setup html-based (html definitions) or code behind (data adapter) schema.\n * If component is assigned with an empty data adater the default schema settings applied.\n * @return {?}\n */\nsetupSchema(): void {\n        let /** @type {?} */ schema: DataColumn[] = [];\n\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map(c => /** @type {?} */(( <DataColumn> c)));\n        }\n\n        if (!this.data) {\n            this.data = new ObjectDataTableAdapter([], schema.length > 0 ? schema :  this.presetColumn  ? this.getLayoutPreset(this.presetColumn) : this.getLayoutPreset());\n\n        } else {\n            if (schema && schema.length > 0) {\n                this.data.setColumns(schema);\n            } else if (this.data.getColumns().length === 0) {\n                this.presetColumn ? this.setupDefaultColumns(this.presetColumn) : this.setupDefaultColumns();\n            }\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.initStream();\n        if (this.isPropertyChanged(changes)) {\n            this.reload();\n        }\n    }\n/**\n * @param {?} rows\n * @return {?}\n */\nsetCustomDataSource(rows: ObjectDataRow[]): void {\n        if (this.data) {\n            this.data.setRows(rows);\n            this.hasCustomDataSource = true;\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate isPropertyChanged(changes: SimpleChanges): boolean {\n        let /** @type {?} */ changed: boolean = true;\n\n        let /** @type {?} */ landingTaskId = changes['landingTaskId'];\n        if (landingTaskId && landingTaskId.currentValue && this.isEqualToCurrentId(landingTaskId.currentValue)) {\n            changed = false;\n        }\n        return changed;\n    }\n/**\n * @return {?}\n */\nreload(): void {\n        if (!this.hasCustomDataSource) {\n            this.requestNode = this.createRequestNode();\n            this.load(this.requestNode);\n        }\n    }\n/**\n * @param {?} requestNode\n * @return {?}\n */\nprivate load(requestNode: TaskQueryRequestRepresentationModel) {\n        this.isLoading = true;\n        this.loadTasksByState().subscribe();\n    }\n/**\n * @return {?}\n */\nprivate loadTasksByState(): Observable<TaskListModel> {\n        return this.requestNode.state === 'all'\n               ? this.taskListService.findAllTasksWithoutState(this.requestNode)\n               : this.taskListService.findTasksByState(this.requestNode);\n    }\n/**\n * Create an array of ObjectDataRow\n * @param {?} instances\n * @return {?}\n */\nprivate createDataRow(instances: any[]): ObjectDataRow[] {\n        let /** @type {?} */ instancesRows: ObjectDataRow[] = [];\n        instances.forEach((row) => {\n            instancesRows.push(new ObjectDataRow(row));\n        });\n        return instancesRows;\n    }\n/**\n * Render the instances list\n * \n * @param {?} instances\n * @return {?}\n */\nprivate renderInstances(instances: any[]) {\n        instances = this.optimizeNames(instances);\n        this.data.setRows(instances);\n    }\n/**\n * Select the task given in input if present\n * @param {?} taskIdSelected\n * @return {?}\n */\nselectTask(taskIdSelected: string): void {\n        if (!this.isListEmpty()) {\n            let /** @type {?} */ rows = this.data.getRows();\n            if (rows.length > 0) {\n                let /** @type {?} */ dataRow;\n                if (taskIdSelected) {\n                    dataRow = rows.find((currentRow: any) => {\n                        return currentRow.getValue('id') === taskIdSelected;\n                    });\n\n                    if (!dataRow) {\n                        dataRow = rows[0];\n                    }\n                } else {\n                    dataRow = rows[0];\n                }\n\n                this.data.selectedRow = dataRow;\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow.getValue('id');\n            }\n        } else {\n            if (this.data) {\n                this.data.selectedRow = null;\n            }\n\n            this.currentInstanceId = null;\n        }\n    }\n/**\n * Return the current id\n * @return {?}\n */\ngetCurrentId(): string {\n        return this.currentInstanceId;\n    }\n/**\n * Check if the taskId is the same of the selected task\n * @param {?} taskId\n * @return {?}\n */\nisEqualToCurrentId(taskId: string) {\n        return this.currentInstanceId === taskId ? true : false;\n    }\n/**\n * Check if the list is empty\n * @return {?}\n */\nisListEmpty(): boolean {\n        return this.data === undefined ||\n            (this.data && this.data.getRows() && this.data.getRows().length === 0);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n/**\n * Optimize name field\n * @param {?} istances\n * @return {?}\n */\nprivate optimizeNames(istances: any[]) {\n        istances = istances.map(t => {\n            t.obj.name = t.obj.name || 'No name';\n            return t;\n        });\n        return istances;\n    }\n/**\n * @return {?}\n */\nprivate createRequestNode() {\n\n        let /** @type {?} */ requestNode = {\n            appDefinitionId: this.appId,\n            processInstanceId: this.processInstanceId,\n            processDefinitionKey: this.processDefinitionKey,\n            text: this.name,\n            assignment: this.assignment,\n            state: this.state,\n            sort: this.sort,\n            landingTaskId: this.landingTaskId,\n            page: this.page,\n            size: this.size,\n            start: 0\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n/**\n * @param {?=} preset\n * @return {?}\n */\nsetupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const /** @type {?} */ columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n/**\n * @return {?}\n */\nprivate loadLayoutPresets(): void {\n        const /** @type {?} */ externalSettings = this.appConfig.get('adf-task-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, taskPresetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = taskPresetsDefaultModel;\n        }\n\n    }\n/**\n * @param {?=} name\n * @return {?}\n */\nprivate getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-tasklist',\n    template: `\n      <div *ngIf=\"!requestNode\">{{ 'ADF_TASK_LIST.FILTERS.MESSAGES.NONE' | translate }}</div>\n      <div *ngIf=\"requestNode\">\n          <div>\n              <adf-datatable\n                  [data]=\"data\"\n                  [loading]=\"isLoading\"\n                  [multiselect]=\"multiselect\"\n                  [selectionMode]=\"selectionMode\"\n                  (row-select)=\"onRowSelect($event)\"\n                  (row-unselect)=\"onRowUnselect($event)\"\n                  (rowClick)=\"onRowClick($event)\"\n                  (row-keyup)=\"onRowKeyUp($event)\">\n                  <loading-content-template>\n                      <ng-template>\n                          <!--Add your custom loading template here-->\n                          <mat-progress-spinner\n                          class=\"adf-task-list-loading-margin\"\n                          [color]=\"'primary'\"\n                          [mode]=\"'indeterminate'\">\n                          </mat-progress-spinner>\n                      </ng-template>\n                  </loading-content-template>\n                  <no-content-template>\n                      <!--Add your custom empty template here-->\n                      <ng-template>\n                          <div class=\"no-content-message\">\n                              {{ 'ADF_TASK_LIST.LIST.MESSAGES.NONE' | translate }}\n                          </div>\n                      </ng-template>\n                  </no-content-template>\n              </adf-datatable>\n          </div>\n      </div>\n    `,\n    styles: [`\n      alfresco-datatable >>> .column-header {\n          color: #232323;\n          font-size: 15px;\n      }\n\n      alfresco-datatable >>> .data-cell {\n          cursor: pointer !important;\n      }\n\n      alfresco-datatable >>> .cell-value{\n          width: 250px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis\n      }\n\n      .adf-task-list-loading-margin {\n          margin-left: calc((100% - 100px) / 2);\n          margin-right: calc((100% - 100px) / 2);\n      }\n\n      .no-content-message {\n          font-size: 16px;\n          font-weight: bold;\n          text-align: center;\n          opacity: 0.54;\n          color: #000;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskListService, },\n{type: AppConfigService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnList': [{ type: ContentChild, args: [DataColumnListComponent, ] },],\n'appId': [{ type: Input },],\n'processInstanceId': [{ type: Input },],\n'processDefinitionKey': [{ type: Input },],\n'state': [{ type: Input },],\n'assignment': [{ type: Input },],\n'sort': [{ type: Input },],\n'name': [{ type: Input },],\n'landingTaskId': [{ type: Input },],\n'data': [{ type: Input },],\n'selectionMode': [{ type: Input },],\n'presetColumn': [{ type: Input },],\n'multiselect': [{ type: Input },],\n'rowClick': [{ type: Output },],\n'rowsSelected': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'page': [{ type: Input },],\n'size': [{ type: Input },],\n};\n}\n\nfunction TaskListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskListComponent.ctorParameters;\n/** @type {?} */\nTaskListComponent.propDecorators;\n/** @type {?} */\nTaskListComponent.prototype.requestNode;\n/** @type {?} */\nTaskListComponent.prototype.columnList;\n/** @type {?} */\nTaskListComponent.prototype.appId;\n/** @type {?} */\nTaskListComponent.prototype.processInstanceId;\n/** @type {?} */\nTaskListComponent.prototype.processDefinitionKey;\n/** @type {?} */\nTaskListComponent.prototype.state;\n/** @type {?} */\nTaskListComponent.prototype.assignment;\n/** @type {?} */\nTaskListComponent.prototype.sort;\n/** @type {?} */\nTaskListComponent.prototype.name;\n/** @type {?} */\nTaskListComponent.prototype.landingTaskId;\n/** @type {?} */\nTaskListComponent.prototype.data;\n/** @type {?} */\nTaskListComponent.prototype.selectionMode;\n/** @type {?} */\nTaskListComponent.prototype.presetColumn;\n/** @type {?} */\nTaskListComponent.prototype.multiselect;\n/** @type {?} */\nTaskListComponent.prototype.rowClick;\n/** @type {?} */\nTaskListComponent.prototype.rowsSelected;\n/** @type {?} */\nTaskListComponent.prototype.success;\n/** @type {?} */\nTaskListComponent.prototype.error;\n/** @type {?} */\nTaskListComponent.prototype.currentInstanceId;\n/** @type {?} */\nTaskListComponent.prototype.selectedInstances;\n/** @type {?} */\nTaskListComponent.prototype.layoutPresets;\n/** @type {?} */\nTaskListComponent.prototype.page;\n/** @type {?} */\nTaskListComponent.prototype.size;\n/** @type {?} */\nTaskListComponent.prototype.isLoading;\n/**\n * Toggles custom data source mode.\n * When enabled the component reloads data from it's current source instead of the server side.\n * This allows generating and displaying custom data sets (i.e. filtered out content).\n * \n * \\@memberOf TaskListComponent\n * @type {?}\n */\nTaskListComponent.prototype.hasCustomDataSource;\n/** @type {?} */\nTaskListComponent.prototype.isStreamLoaded;\n/** @type {?} */\nTaskListComponent.prototype.taskListService;\n/** @type {?} */\nTaskListComponent.prototype.appConfig;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let /** @type {?} */ taskPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { BpmUserService, CardViewDateItemModel, CardViewItem, CardViewMapItemModel, CardViewTextItemModel, LogService } from '@alfresco/adf-core';\n\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nexport class TaskHeaderComponent implements OnChanges, OnInit {\n\n    \n    formName: string = null;\n\n    \n    taskDetails: TaskDetailsModel;\n\n    \n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    unclaim: EventEmitter<any> = new EventEmitter<any>();\nprivate currentUserId: number;\n\n    properties: CardViewItem [];\n    inEdit: boolean = false;\n/**\n * @param {?} activitiTaskService\n * @param {?} bpmUserService\n * @param {?} logService\n */\nconstructor(private activitiTaskService: TaskListService,\nprivate bpmUserService: BpmUserService,\nprivate logService: LogService) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.loadCurrentBpmUserId();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n/**\n * Refresh the card data\n * @return {?}\n */\nrefreshData() {\n        if (this.taskDetails) {\n            const /** @type {?} */ parentInfoMap = this.getParentInfo();\n            this.properties = [\n                new CardViewTextItemModel(\n                    {\n                     label: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n                     value: this.taskDetails.getFullName(),\n                     key: 'assignee',\n                     default: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT',\n                     clickable: !this.isCompleted()\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.STATUS',\n                        value: this.getTaskStatus(),\n                        key: 'status'\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.PRIORITY',\n                        value: this.taskDetails.priority,\n                        key: 'priority'\n                    }\n                ),\n                new CardViewDateItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE',\n                        value: this.taskDetails.dueDate,\n                        key: 'dueDate',\n                        default: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT',\n                        editable: true\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.CATEGORY',\n                        value: this.taskDetails.category,\n                        key: 'category',\n                        default: 'ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT'\n                    }\n                ),\n                new CardViewMapItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME',\n                        value: parentInfoMap, key: 'parentName',\n                        default: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT',\n                        clickable: true\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.CREATED_BY',\n                        value: this.taskDetails.getFullName(),\n                        key: 'created-by'\n                    }\n                ),\n                new CardViewDateItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.CREATED',\n                        value: this.taskDetails.created,\n                        key: 'created'\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.ID',\n                        value: this.taskDetails.id,\n                        key: 'id'\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION',\n                        value: this.taskDetails.description,\n                        key: 'description',\n                        default: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT',\n                        multiline: true,\n                        editable: true\n                    }\n                ),\n                new CardViewTextItemModel(\n                    {\n                        label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                        value: this.formName,\n                        key: 'formName',\n                        default: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'\n                    }\n                )\n            ];\n        }\n    }\n/**\n * Loads current bpm userId\n * @return {?}\n */\nprivate loadCurrentBpmUserId(): void {\n        this.bpmUserService.getCurrentUserInfo().subscribe((res) => {\n            this.currentUserId = res ? +res.id : null;\n        });\n    }\n/**\n * Return the process parent information\n * @return {?}\n */\ngetParentInfo() {\n        if (this.taskDetails.processInstanceId && this.taskDetails.processDefinitionName) {\n            return new Map([[this.taskDetails.processInstanceId, this.taskDetails.processDefinitionName]]);\n        }\n    }\n/**\n * Does the task have an assignee\n * @return {?}\n */\npublic hasAssignee(): boolean {\n        return !!this.taskDetails.assignee ? true : false;\n    }\n/**\n * Returns true if the task is assigne to logged in user\n * @param {?} userId\n * @return {?}\n */\npublic isAssignedTo(userId): boolean {\n        return this.hasAssignee() ? this.taskDetails.assignee.id === userId : false;\n    }\n/**\n * Return true if the task assigned\n * @return {?}\n */\npublic isAssignedToCurrentUser(): boolean {\n        return this.hasAssignee() && this.isAssignedTo(this.currentUserId);\n    }\n/**\n * Return true if the user is a candidate member\n * @return {?}\n */\nisCandidateMember() {\n        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n    }\n/**\n * Return true if the task claimable\n * @return {?}\n */\npublic isTaskClaimable(): boolean {\n        return !this.hasAssignee() && this.isCandidateMember();\n    }\n/**\n * Return true if the task claimed by candidate member.\n * @return {?}\n */\npublic isTaskClaimedByCandidateMember(): boolean {\n        return this.isCandidateMember() && this.isAssignedToCurrentUser() && !this.isCompleted();\n    }\n/**\n * Returns task's status\n * @return {?}\n */\ngetTaskStatus(): string {\n        return (this.taskDetails && this.taskDetails.isCompleted()) ? 'Completed' : 'Running';\n    }\n/**\n * Claim task\n * \n * @param {?} taskId\n * @return {?}\n */\nclaimTask(taskId: string) {\n        this.activitiTaskService.claimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task claimed');\n                this.claim.emit(taskId);\n            });\n    }\n/**\n * Unclaim task\n * \n * @param {?} taskId\n * @return {?}\n */\nunclaimTask(taskId: string) {\n        this.activitiTaskService.unclaimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task unclaimed');\n                this.unclaim.emit(taskId);\n            });\n    }\n/**\n * Returns true if the task is completed\n * @return {?}\n */\nisCompleted(): boolean {\n        return this.taskDetails && !!this.taskDetails.endDate;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-task-header',\n    template: `\n      <mat-card *ngIf=\"taskDetails\" class=\"adf-card-container\">\n          <mat-card-content>\n              <adf-card-view [properties]=\"properties\" [editable]=\"!isCompleted()\"></adf-card-view>\n          </mat-card-content>\n\n          <mat-card-actions class=\"adf-controls\">\n              <button *ngIf=\"isTaskClaimedByCandidateMember()\" mat-button data-automation-id=\"header-unclaim-button\" id=\"unclaim-task\" (click)=\"unclaimTask(taskDetails.id)\" class=\"adf-claim-controls\">{{ 'ADF_TASK_LIST.DETAILS.BUTTON.UNCLAIM' | translate }}\n              </button>\n              <button *ngIf=\"isTaskClaimable()\" mat-button data-automation-id=\"header-claim-button\" id=\"claim-task\" (click)=\"claimTask(taskDetails.id)\" class=\"adf-claim-controls\">{{ 'ADF_TASK_LIST.DETAILS.BUTTON.CLAIM' | translate }}\n              </button>\n          </mat-card-actions>\n      </mat-card>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskListService, },\n{type: BpmUserService, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formName': [{ type: Input },],\n'taskDetails': [{ type: Input },],\n'claim': [{ type: Output },],\n'unclaim': [{ type: Output },],\n};\n}\n\nfunction TaskHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskHeaderComponent.ctorParameters;\n/** @type {?} */\nTaskHeaderComponent.propDecorators;\n/** @type {?} */\nTaskHeaderComponent.prototype.formName;\n/** @type {?} */\nTaskHeaderComponent.prototype.taskDetails;\n/** @type {?} */\nTaskHeaderComponent.prototype.claim;\n/** @type {?} */\nTaskHeaderComponent.prototype.unclaim;\n/** @type {?} */\nTaskHeaderComponent.prototype.currentUserId;\n/** @type {?} */\nTaskHeaderComponent.prototype.properties;\n/** @type {?} */\nTaskHeaderComponent.prototype.inEdit;\n/** @type {?} */\nTaskHeaderComponent.prototype.activitiTaskService;\n/** @type {?} */\nTaskHeaderComponent.prototype.bpmUserService;\n/** @type {?} */\nTaskHeaderComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { FilterParamsModel, FilterRepresentationModel } from '../models/filter.model';\nimport { TaskFilterService } from './../services/task-filter.service';\nimport { TaskListService } from './../services/tasklist.service';\nexport class TaskFiltersComponent implements OnInit, OnChanges {\n\n    \n    filterParam: FilterParamsModel;\n\n    \n    filterClick: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    \n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    appId: number;\n\n    \n    appName: string;\n\n    \n    hasIcon: boolean = true;\nprivate filterObserver: Observer<FilterRepresentationModel>;\n    filter$: Observable<FilterRepresentationModel>;\n\n    currentFilter: FilterRepresentationModel;\n\n    filters: FilterRepresentationModel [] = [];\n/**\n * @param {?} taskFilterService\n * @param {?} taskListService\n * @param {?} appsProcessService\n */\nconstructor(private taskFilterService: TaskFilterService,\nprivate taskListService: TaskListService,\nprivate appsProcessService: AppsProcessService) {\n        this.filter$ = new Observable<FilterRepresentationModel>(observer => this.filterObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.filter$.subscribe((filter: FilterRepresentationModel) => {\n            this.filters.push(filter);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ appId = changes['appId'];\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n            return;\n        }\n        let /** @type {?} */ appName = changes['appName'];\n        if (appName && appName !== null && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n            return;\n        }\n\n        this.getFiltersByAppId();\n    }\n/**\n * Return the task list filtered by appId or by appName\n * @param {?=} appId\n * @param {?=} appName\n * @return {?}\n */\ngetFilters(appId?: number, appName?: string) {\n        if (appName) {\n            this.getFiltersByAppName(appName);\n        } else {\n            this.getFiltersByAppId(appId);\n        }\n    }\n/**\n * Return the filter list filtered by appId\n * @param {?=} appId - optional\n * @return {?}\n */\ngetFiltersByAppId(appId?: number) {\n        this.taskFilterService.getTaskListFilters(appId).subscribe(\n            (res: FilterRepresentationModel[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.taskFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: FilterRepresentationModel[]) => {\n                            this.resetFilter();\n                            resDefault.forEach((filter) => {\n                                this.filterObserver.next(filter);\n                            });\n\n                            this.selectTaskFilter(this.filterParam, this.filters);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    res.forEach((filter) => {\n                        this.filterObserver.next(filter);\n                    });\n\n                    this.selectTaskFilter(this.filterParam, this.filters);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n/**\n * Return the filter list filtered by appName\n * @param {?} appName\n * @return {?}\n */\ngetFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            application => {\n                this.getFiltersByAppId(application.id);\n                this.selectTaskFilter(this.filterParam, this.filters);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n/**\n * Pass the selected filter as next\n * @param {?} filter\n * @return {?}\n */\npublic selectFilter(filter: FilterRepresentationModel) {\n        this.currentFilter = filter;\n        this.filterClick.emit(filter);\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\npublic selectFilterWithTask(taskId: string) {\n        let /** @type {?} */ filteredFilterList: FilterRepresentationModel[] = [];\n        this.taskListService.getFilterForTaskById(taskId, this.filters).subscribe(\n            (filter: FilterRepresentationModel) => {\n                filteredFilterList.push(filter);\n            },\n            (err) => {\n                this.error.emit(err);\n            },\n            () => {\n                if (filteredFilterList.length > 0) {\n                    this.selectTaskFilter(new FilterParamsModel({name: 'My Tasks'}), filteredFilterList);\n                    this.filterClick.emit(this.currentFilter);\n                }\n            });\n    }\n/**\n * Select the first filter of a list if present\n * @param {?} filterParam\n * @param {?} filteredFilterList\n * @return {?}\n */\npublic selectTaskFilter(filterParam: FilterParamsModel, filteredFilterList: FilterRepresentationModel[]) {\n        let /** @type {?} */ findTaskFilter;\n        if (filterParam) {\n            filteredFilterList.filter((taskFilter: FilterRepresentationModel, index) => {\n                if (filterParam.name && filterParam.name.toLowerCase() === taskFilter.name.toLowerCase() ||\n                    filterParam.id === taskFilter.id.toString()\n                    || filterParam.index === index) {\n                    findTaskFilter = taskFilter;\n                }\n            });\n        }\n        if (findTaskFilter) {\n            this.currentFilter = findTaskFilter;\n        } else {\n             this.selectDefaultTaskFilter(filteredFilterList);\n        }\n    }\n/**\n * Select as default task filter the first in the list\n * @param {?} filteredFilterList\n * @return {?}\n */\npublic selectDefaultTaskFilter(filteredFilterList: FilterRepresentationModel[]) {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n/**\n * Return the current task\n * @return {?}\n */\ngetCurrentFilter(): FilterRepresentationModel {\n        return this.currentFilter;\n    }\n/**\n * Check if the filter list is empty\n * @return {?}\n */\nisFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n/**\n * Reset the filters properties\n * @return {?}\n */\nprivate resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-filters, taskListService-filters',\n    template: `\n      <div class=\"menu-container\">\n          <mat-list>\n              <mat-list-item (click)=\"selectFilter(filter)\" *ngFor=\"let filter of filters\"\n                            class=\"adf-filters__entry\" [class.active]=\"currentFilter === filter\">\n                  <mat-icon *ngIf=\"hasIcon\" matListIcon class=\"adf-filters__entry-icon\">assignment</mat-icon>\n                  <span matLine [attr.data-automation-id]=\"filter.name + '_filter'\">{{filter.name}}</span>\n              </mat-list-item>\n          </mat-list>\n      </div>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskFilterService, },\n{type: TaskListService, },\n{type: AppsProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filterParam': [{ type: Input },],\n'filterClick': [{ type: Output },],\n'success': [{ type: Output },],\n'error': [{ type: Output },],\n'appId': [{ type: Input },],\n'appName': [{ type: Input },],\n'hasIcon': [{ type: Input },],\n};\n}\n\nfunction TaskFiltersComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskFiltersComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskFiltersComponent.ctorParameters;\n/** @type {?} */\nTaskFiltersComponent.propDecorators;\n/** @type {?} */\nTaskFiltersComponent.prototype.filterParam;\n/** @type {?} */\nTaskFiltersComponent.prototype.filterClick;\n/** @type {?} */\nTaskFiltersComponent.prototype.success;\n/** @type {?} */\nTaskFiltersComponent.prototype.error;\n/** @type {?} */\nTaskFiltersComponent.prototype.appId;\n/** @type {?} */\nTaskFiltersComponent.prototype.appName;\n/** @type {?} */\nTaskFiltersComponent.prototype.hasIcon;\n/** @type {?} */\nTaskFiltersComponent.prototype.filterObserver;\n/** @type {?} */\nTaskFiltersComponent.prototype.filter$;\n/** @type {?} */\nTaskFiltersComponent.prototype.currentFilter;\n/** @type {?} */\nTaskFiltersComponent.prototype.filters;\n/** @type {?} */\nTaskFiltersComponent.prototype.taskFilterService;\n/** @type {?} */\nTaskFiltersComponent.prototype.taskListService;\n/** @type {?} */\nTaskFiltersComponent.prototype.appsProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst /** @type {?} */ JSON_FORMAT: string = 'json';\nconst /** @type {?} */ PDF_FORMAT: string = 'pdf';\nexport class TaskAuditDirective implements OnChanges {\n\n    \n    taskId: string;\n\n    \n    fileName: string = 'Audit';\n\n    \n    format: string = 'pdf';\n\n    \n    download: boolean = true;\n\n    \n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\npublic audit: any;\n/**\n *\n * @param {?} contentService\n * @param {?} taskListService\n */\nconstructor(private contentService: ContentService,\nprivate taskListService: TaskListService) {\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n/**\n * @return {?}\n */\nisValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\nsetDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n/**\n * fetch the audit information in the requested format\n * @return {?}\n */\nfetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n/**\n * @return {?}\n */\nonClickAudit() {\n        this.fetchAuditInfo();\n    }\n/**\n * @return {?}\n */\nisJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n/**\n * @return {?}\n */\nisPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'button[adf-task-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ContentService, },\n{type: TaskListService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'taskId': [{ type: Input, args: ['task-id', ] },],\n'fileName': [{ type: Input },],\n'format': [{ type: Input },],\n'download': [{ type: Input },],\n'clicked': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction TaskAuditDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskAuditDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskAuditDirective.ctorParameters;\n/** @type {?} */\nTaskAuditDirective.propDecorators;\n/** @type {?} */\nTaskAuditDirective.prototype.taskId;\n/** @type {?} */\nTaskAuditDirective.prototype.fileName;\n/** @type {?} */\nTaskAuditDirective.prototype.format;\n/** @type {?} */\nTaskAuditDirective.prototype.download;\n/** @type {?} */\nTaskAuditDirective.prototype.clicked;\n/** @type {?} */\nTaskAuditDirective.prototype.error;\n/** @type {?} */\nTaskAuditDirective.prototype.audit;\n/** @type {?} */\nTaskAuditDirective.prototype.contentService;\n/** @type {?} */\nTaskAuditDirective.prototype.taskListService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { LogService, PeopleProcessService, UserPreferencesService, UserProcessModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MOMENT_DATE_FORMATS, MomentDateAdapter } from '@alfresco/adf-core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Form } from '../models/form.model';\nimport { StartTaskModel } from '../models/start-task.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nexport class StartTaskComponent implements OnInit {\npublic FORMAT_DATE: string = 'DD/MM/YYYY';\n\n    \n    appId: number;\n\n    \n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    people: UserProcessModel[] = [];\n\n    startTaskmodel: StartTaskModel = new StartTaskModel();\n\n    forms: Form[];\n\n    assigneeId: number;\n\n    formKey: number;\n\n    taskId: string;\n\n    dateError: boolean;\n/**\n * Constructor\n * @param {?} taskService\n * @param {?} peopleService\n * @param {?} dateAdapter\n * @param {?} preferences\n * @param {?} logService\n */\nconstructor(private taskService: TaskListService,\nprivate peopleService: PeopleProcessService,\nprivate dateAdapter: DateAdapter<Moment>,\nprivate preferences: UserPreferencesService,\nprivate logService: LogService) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.preferences.locale$.subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        this.loadFormsTask();\n        this.getUsers();\n    }\n/**\n * @return {?}\n */\npublic start(): void {\n        if (this.startTaskmodel.name) {\n            if (this.appId) {\n                this.startTaskmodel.category = this.appId.toString();\n            }\n            this.taskService.createNewTask(new TaskDetailsModel(this.startTaskmodel))\n                .switchMap((createRes: any) =>\n                    this.attachForm(createRes.id, this.formKey).defaultIfEmpty(createRes)\n                        .switchMap((attachRes: any) =>\n                            this.assignTaskByUserId(createRes.id, this.assigneeId).defaultIfEmpty(attachRes ? attachRes : createRes)\n                        )\n                )\n                .subscribe(\n                    (res: any) => {\n                        this.success.emit(res);\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.logService.error('An error occurred while creating new task');\n                    });\n        }\n    }\n/**\n * @param {?} taskId\n * @param {?} formKey\n * @return {?}\n */\nprivate attachForm(taskId: string, formKey: number): Observable<any> {\n        let /** @type {?} */ response = Observable.of();\n        if (taskId && formKey) {\n            response = this.taskService.attachFormToATask(taskId, formKey);\n        }\n        return response;\n    }\n/**\n * @param {?} taskId\n * @param {?} userId\n * @return {?}\n */\nprivate assignTaskByUserId(taskId: string, userId: any): Observable<any> {\n        let /** @type {?} */ response = Observable.of();\n        if (taskId && userId) {\n            response = this.taskService.assignTaskByUserId(taskId, userId);\n        }\n        return response;\n    }\n/**\n * @return {?}\n */\npublic onCancel(): void {\n        this.cancel.emit();\n    }\n/**\n * @return {?}\n */\nprivate loadFormsTask(): void {\n        this.taskService.getFormList().subscribe((res: Form[]) => {\n                this.forms = res;\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to get the forms');\n            });\n    }\n/**\n * @return {?}\n */\nprivate getUsers(): void {\n        this.peopleService.getWorkflowUsers().subscribe((users) => {\n            this.people = users;\n        }, (err) => {\n            this.error.emit(err);\n            this.logService.error('Could not load users');\n        });\n    }\n/**\n * @param {?} user\n * @return {?}\n */\npublic isUserNameEmpty(user: UserProcessModel): boolean {\n        return !user || (this.isEmpty(user.firstName) && this.isEmpty(user.lastName));\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate isEmpty(data: string): boolean {\n        return data === undefined || data === null || data.trim().length === 0;\n    }\n/**\n * @param {?} firstName\n * @param {?} lastName\n * @param {?=} delimiter\n * @return {?}\n */\npublic getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n/**\n * @param {?} newDateValue\n * @return {?}\n */\nonDateChanged(newDateValue): void {\n        this.dateError = false;\n\n        if (newDateValue) {\n            let /** @type {?} */ momentDate = moment(newDateValue, this.FORMAT_DATE, true);\n            if (!momentDate.isValid()) {\n                this.dateError = true;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-start-task',\n    template: `\n      <mat-card class=\"adf-new-task-layout-card\">\n          <mat-grid-list cols=\"1\" rowHeight=\"60px\">\n              <mat-grid-tile>\n                  <div class=\"adf-new-task-heading\">{{'ADF_TASK_LIST.START_TASK.FORM.TITLE'|translate}}</div>\n              </mat-grid-tile>\n          </mat-grid-list>\n          <mat-card-content>\n              <mat-grid-list cols=\"1\" rowHeight=\"80px\">\n                  <mat-grid-tile>\n                      <mat-form-field class=\"adf-new-task-text-width\">\n                          <input matInput placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.NAME'|translate}}\"\n                                 [(ngModel)]=\"startTaskmodel.name\" required id=\"name_id\">\n                      </mat-form-field>\n                  </mat-grid-tile>\n              </mat-grid-list>\n              <mat-grid-list cols=\"1\" rowHeight=\"80px\">\n                  <mat-grid-tile>\n                      <mat-form-field class=\"adf-new-task-text-width\">\n                          <textarea matInput placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.DESCRIPTION'|translate}}\"\n                                    [(ngModel)]=\"startTaskmodel.description\" id=\"description_id\"></textarea>\n                      </mat-form-field>\n                  </mat-grid-tile>\n              </mat-grid-list>\n              <mat-grid-list cols=\"2\" rowHeight=\"80px\">\n                  <mat-grid-tile>\n                      <mat-form-field class=\"adf-start-task-input-container\">\n                          <input matInput\n                                 [matDatepicker]=\"taskDatePicker\"\n                                 (keydown)=\"true\"\n                                 (focusout)=\"onDateChanged($event.srcElement.value)\"\n                                 placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.DATE'|translate}}\"\n                                 [(ngModel)]=\"startTaskmodel.dueDate\" id=\"date_id\">\n                          <mat-datepicker-toggle matSuffix [for]=\"taskDatePicker\"></mat-datepicker-toggle>\n                      </mat-form-field>\n                      <mat-datepicker #taskDatePicker [touchUi]=\"true\"\n                                     (dateChanged)=\"onDateChanged($event)\"></mat-datepicker>\n                      <div class=\"adf-error-text-container\">\n                          <div *ngIf=\"dateError\">\n                              <div class=\"adf-error-text\">{{'ADF_TASK_LIST.START_TASK.FORM.DATE.ERROR'|translate}}</div>\n                              <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                          </div>\n                      </div>\n                  </mat-grid-tile>\n                  <mat-grid-tile>\n                    <mat-form-field class=\"adf-start-task-input-container\">\n                      <mat-select placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.ASSIGNEE'|translate}}\" id=\"assignee_id\"\n                                 class=\"adf-mat-select\" [(ngModel)]=\"assigneeId\">\n                          <mat-option>{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.NONE'|translate}}</mat-option>\n                          <span *ngFor=\"let user of people\">\n                              <mat-option [value]=\"user.id\" *ngIf=\"!isUserNameEmpty(user)\">{{ getDisplayUser(user.firstName,\n                                  user.lastName, ' ')}}\n                              </mat-option>\n                          </span>\n                      </mat-select>\n                    </mat-form-field>\n                  </mat-grid-tile>\n              </mat-grid-list>\n              <mat-grid-list cols=\"2\" rowHeight=\"80px\">\n                  <mat-grid-tile>\n                      <mat-form-field class=\"adf-start-task-input-container\">\n                          <mat-select placeholder=\"{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.FORM'|translate}}\" id=\"form_id\" [(ngModel)]=\"formKey\">\n                              <mat-option>{{'ADF_TASK_LIST.START_TASK.FORM.LABEL.NONE'|translate}}</mat-option>\n                              <mat-option *ngFor=\"let form of forms\" [value]=\"form.id\">{{ form.name }}</mat-option>\n                          </mat-select>\n                      </mat-form-field>\n                  </mat-grid-tile>\n                  <mat-grid-tile></mat-grid-tile>\n              </mat-grid-list>\n          </mat-card-content>\n          <mat-card-actions>\n              <mat-grid-list cols=\"1\" rowHeight=\"60px\">\n                  <mat-grid-tile>\n                      <div class=\"adf-new-task-footer\">\n                          <button mat-button (click)=\"onCancel()\" id=\"button-cancle\">\n                              {{'ADF_TASK_LIST.START_TASK.FORM.ACTION.CANCEL'|translate}}\n                          </button>\n                          <button mat-button [disabled]=\"!startTaskmodel.name || dateError\" (click)=\"start()\" id=\"button-start\">\n                              {{'ADF_TASK_LIST.START_TASK.FORM.ACTION.START'|translate}}\n                          </button>\n                      </div>\n                  </mat-grid-tile>\n              </mat-grid-list>\n          </mat-card-actions>\n      </mat-card>\n    `,\n    styles: [`\n\n    `],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskListService, },\n{type: PeopleProcessService, },\n{type: DateAdapter, },\n{type: UserPreferencesService, },\n{type: LogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'appId': [{ type: Input },],\n'success': [{ type: Output },],\n'cancel': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\nfunction StartTaskComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nStartTaskComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStartTaskComponent.ctorParameters;\n/** @type {?} */\nStartTaskComponent.propDecorators;\n/** @type {?} */\nStartTaskComponent.prototype.FORMAT_DATE;\n/** @type {?} */\nStartTaskComponent.prototype.appId;\n/** @type {?} */\nStartTaskComponent.prototype.success;\n/** @type {?} */\nStartTaskComponent.prototype.cancel;\n/** @type {?} */\nStartTaskComponent.prototype.error;\n/** @type {?} */\nStartTaskComponent.prototype.people;\n/** @type {?} */\nStartTaskComponent.prototype.startTaskmodel;\n/** @type {?} */\nStartTaskComponent.prototype.forms;\n/** @type {?} */\nStartTaskComponent.prototype.assigneeId;\n/** @type {?} */\nStartTaskComponent.prototype.formKey;\n/** @type {?} */\nStartTaskComponent.prototype.taskId;\n/** @type {?} */\nStartTaskComponent.prototype.dateError;\n/** @type {?} */\nStartTaskComponent.prototype.taskService;\n/** @type {?} */\nStartTaskComponent.prototype.peopleService;\n/** @type {?} */\nStartTaskComponent.prototype.dateAdapter;\n/** @type {?} */\nStartTaskComponent.prototype.preferences;\n/** @type {?} */\nStartTaskComponent.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent of the StartTaskModel.\n *\n *\n * @returns {StartTaskModel} .\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nexport class StartTaskModel {\n\n    name: string;\n    description: string;\n    assignee: UserProcessModel;\n    dueDate: any;\n    formKey: any;\n    category: string;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.assignee = obj && obj.assignee ? new UserProcessModel(obj.assignee) : null;\n        this.dueDate = obj && obj.dueDate || null;\n        this.formKey = obj && obj.formKey || null;\n        this.category = obj && obj.category || null;\n    }\n}\n\nfunction StartTaskModel_tsickle_Closure_declarations() {\n/** @type {?} */\nStartTaskModel.prototype.name;\n/** @type {?} */\nStartTaskModel.prototype.description;\n/** @type {?} */\nStartTaskModel.prototype.assignee;\n/** @type {?} */\nStartTaskModel.prototype.dueDate;\n/** @type {?} */\nStartTaskModel.prototype.formKey;\n/** @type {?} */\nStartTaskModel.prototype.category;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { TaskDetailsComponent } from './task-details.component';\nexport class NoTaskDetailsTemplateDirective implements AfterContentInit {\n\n    \n    template: any;\n/**\n * @param {?} activitiTaskDetails\n */\nconstructor(\nprivate activitiTaskDetails: TaskDetailsComponent) {\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'no-task-details-template'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskDetailsComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction NoTaskDetailsTemplateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNoTaskDetailsTemplateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoTaskDetailsTemplateDirective.ctorParameters;\n/** @type {?} */\nNoTaskDetailsTemplateDirective.propDecorators;\n/** @type {?} */\nNoTaskDetailsTemplateDirective.prototype.template;\n/** @type {?} */\nNoTaskDetailsTemplateDirective.prototype.activitiTaskDetails;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { PeopleProcessService, UserProcessModel } from '@alfresco/adf-core';\nimport { AuthenticationService, CardViewUpdateService, ClickNotification, LogService, UpdateNotification } from '@alfresco/adf-core';\nimport { Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { ContentLinkModel, FormFieldValidator, FormModel, FormOutcomeEvent } from '@alfresco/adf-core';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { CommentsComponent } from '../../comments';\nexport class TaskDetailsComponent implements OnInit, OnChanges {\n\n    \n    activiticomments: CommentsComponent;\n\n    \n    activitichecklist: any;\n\n    \n    errorDialog: TemplateRef<any>;\n\n    \n    debugMode: boolean = false;\n\n    \n    taskId: string;\n\n    \n    showNextTask: boolean = true;\n\n    \n    showHeader: boolean = true;\n\n    \n    showHeaderContent: boolean = true;\n\n    \n    showInvolvePeople: boolean = true;\n\n    \n    showComments: boolean = true;\n\n    \n    showChecklist: boolean = true;\n\n    \n    showFormTitle: boolean = true;\n\n    \n    showFormCompleteButton: boolean = true;\n\n    \n    showFormSaveButton: boolean = true;\n\n    \n    readOnlyForm: boolean = false;\n\n    \n    showFormRefreshButton: boolean = true;\n\n    \n    fieldValidators: FormFieldValidator[] = [];\n\n    \n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    \n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    \n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    \n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    \n    taskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    \n    taskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    \n    assignTask: EventEmitter<void> = new EventEmitter<void>();\n\n    taskDetails: TaskDetailsModel;\n    taskFormName: string = null;\n\n    taskPeople: UserProcessModel[] = [];\n\n    noTaskDetailsTemplateComponent: TemplateRef<any>;\n\n    showAssignee: boolean = false;\nprivate peopleSearchObserver: Observer<UserProcessModel[]>;\npublic errorDialogRef: MatDialogRef<TemplateRef<any>>;\n\n    peopleSearch$: Observable<UserProcessModel[]>;\n/**\n * @param {?} taskListService\n * @param {?} authService\n * @param {?} peopleProcessService\n * @param {?} logService\n * @param {?} cardViewUpdateService\n * @param {?} dialog\n */\nconstructor(private taskListService: TaskListService,\nprivate authService: AuthenticationService,\nprivate peopleProcessService: PeopleProcessService,\nprivate logService: LogService,\nprivate cardViewUpdateService: CardViewUpdateService,\nprivate dialog: MatDialog) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>(observer => this.peopleSearchObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.taskId) {\n            this.loadDetails(this.taskId);\n        }\n\n        this.cardViewUpdateService.itemUpdated$.subscribe(this.updateTaskDetails.bind(this));\n        this.cardViewUpdateService.itemClicked$.subscribe(this.clickTaskDetails.bind(this));\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        let /** @type {?} */ taskId = changes.taskId;\n        this.showAssignee = false;\n\n        if (taskId && !taskId.currentValue) {\n            this.reset();\n        } else if (taskId && taskId.currentValue) {\n            this.taskFormName = null;\n            this.loadDetails(taskId.currentValue);\n        }\n    }\n/**\n * Reset the task details\n * @return {?}\n */\nprivate reset() {\n        this.taskDetails = null;\n    }\n/**\n * Check if the task has a form\n * @return {?}\n */\nhasFormKey() {\n        return (this.taskDetails\n        && this.taskDetails.formKey\n        && this.taskDetails.formKey !== 'null');\n    }\n/**\n * @return {?}\n */\nisTaskActive() {\n        return this.taskDetails && this.taskDetails.duration === null;\n    }\n/**\n * Save a task detail and update it after a successful response\n * \n * @param {?} updateNotification\n * @return {?}\n */\nprivate updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskListService.updateTask(this.taskId, updateNotification.changed)\n            .subscribe(\n                () => {\n                    this.loadDetails(this.taskId);\n                }\n            );\n    }\n/**\n * @param {?} clickNotification\n * @return {?}\n */\nprivate clickTaskDetails(clickNotification: ClickNotification) {\n        if (clickNotification.target.key === 'assignee') {\n            this.showAssignee = true;\n        }\n    }\n/**\n * Load the activiti task details\n * @param {?} taskId\n * @return {?}\n */\nprivate loadDetails(taskId: string) {\n        this.taskPeople = [];\n        this.readOnlyForm = false;\n\n        if (taskId) {\n            this.taskListService.getTaskDetails(taskId).subscribe(\n                (res: TaskDetailsModel) => {\n                    this.taskDetails = res;\n\n                    if (this.taskDetails.name === 'null') {\n                        this.taskDetails.name = 'No name';\n                    }\n\n                    let /** @type {?} */ endDate: any = res.endDate;\n                    this.readOnlyForm = this.readOnlyForm ? this.readOnlyForm : !!(endDate && !isNaN(endDate.getTime()));\n                    if (this.taskDetails && this.taskDetails.involvedPeople) {\n                        this.taskDetails.involvedPeople.forEach((user) => {\n                            this.taskPeople.push(new UserProcessModel(user));\n                        });\n                    }\n                });\n        }\n    }\n/**\n * @return {?}\n */\nisAssigned(): boolean {\n        return this.taskDetails.assignee ? true : false;\n    }\n/**\n * @return {?}\n */\nisAssignedToMe(): boolean {\n        return this.taskDetails.assignee.email === this.authService.getBpmUsername();\n    }\n/**\n * Retrieve the next open task\n * @param {?} processInstanceId\n * @param {?} processDefinitionId\n * @return {?}\n */\nprivate loadNextTask(processInstanceId: string, processDefinitionId: string): void {\n        let /** @type {?} */ requestNode = new TaskQueryRequestRepresentationModel(\n            {\n                processInstanceId: processInstanceId,\n                processDefinitionId: processDefinitionId\n            }\n        );\n        this.taskListService.getTasks(requestNode).subscribe(\n            (response) => {\n                if (response && response.length > 0) {\n                    this.taskDetails = new TaskDetailsModel(response[0]);\n                } else {\n                    this.reset();\n                }\n            }, (error) => {\n                this.error.emit(error);\n            });\n    }\n/**\n * Complete button clicked\n * @return {?}\n */\nonComplete(): void {\n        this.taskListService.completeTask(this.taskId).subscribe(\n            (res) => this.onFormCompleted(null)\n        );\n    }\n/**\n * @param {?} content\n * @return {?}\n */\nonFormContentClick(content: ContentLinkModel): void {\n        this.formContentClicked.emit(content);\n    }\n/**\n * @param {?} form\n * @return {?}\n */\nonFormSaved(form: FormModel): void {\n        this.formSaved.emit(form);\n    }\n/**\n * @param {?} form\n * @return {?}\n */\nonFormCompleted(form: FormModel): void {\n        this.formCompleted.emit(form);\n        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {\n            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);\n        }\n    }\n/**\n * @param {?} form\n * @return {?}\n */\nonFormLoaded(form: FormModel): void {\n        this.taskFormName = (form && form.name ? form.name : null);\n        this.formLoaded.emit(form);\n    }\n/**\n * @param {?} task\n * @return {?}\n */\nonChecklistTaskCreated(task: TaskDetailsModel): void {\n        this.taskCreated.emit(task);\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nonChecklistTaskDeleted(taskId: string): void {\n        this.taskDeleted.emit(taskId);\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nonFormError(error: any): void {\n        this.errorDialogRef = this.dialog.open(this.errorDialog, {width: '500px'});\n        this.error.emit(error);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonFormExecuteOutcome(event: FormOutcomeEvent): void {\n        this.executeOutcome.emit(event);\n    }\n/**\n * @return {?}\n */\ncloseErrorDialog(): void {\n        this.dialog.closeAll();\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nonClaimAction(taskId: string): void {\n        this.loadDetails(taskId);\n    }\n/**\n * @return {?}\n */\ntoggleHeaderContent(): void {\n        this.showHeaderContent = !this.showHeaderContent;\n    }\n/**\n * @return {?}\n */\nisCompletedTask(): boolean {\n        return this.taskDetails && this.taskDetails.endDate ? true : undefined;\n    }\n/**\n * @param {?} searchedWord\n * @return {?}\n */\nsearchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(null, searchedWord)\n            .subscribe((users) => {\n                users = users.filter((user) => user.id !== this.taskDetails.assignee.id);\n                this.peopleSearchObserver.next(users);\n            }, error => this.logService.error('Could not load users'));\n    }\n/**\n * @return {?}\n */\nonCloseSearch() {\n        this.showAssignee = false;\n    }\n/**\n * @param {?} selectedUser\n * @return {?}\n */\nassignTaskToUser(selectedUser: UserProcessModel) {\n        this.taskListService.assignTask(this.taskDetails.id, selectedUser).subscribe(\n            (res: any) => {\n                this.logService.info('Task Assigned to ' + selectedUser.email);\n                this.assignTask.emit();\n            });\n        this.showAssignee = false;\n    }\n/**\n * @return {?}\n */\ngetTaskHeaderViewClass(): string {\n        if (this.showAssignee) {\n            return 'assign-edit-view';\n        } else {\n            return 'default-view';\n        }\n    }\n/**\n * @return {?}\n */\nisReadOnlyComment(): boolean {\n        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-task-details',\n    template: `\n      <div *ngIf=\"!taskDetails\">\n          <ng-template *ngIf=\"noTaskDetailsTemplateComponent\" ngFor [ngForOf]=\"[data]\"\n                       [ngForTemplate]=\"noTaskDetailsTemplateComponent\">\n              {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n          </ng-template>\n          <div *ngIf=\"!noTaskDetailsTemplateComponent\">\n              {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.NONE' | translate }}\n          </div>\n      </div>\n      <div *ngIf=\"taskDetails\" class=\"adf-task-details\">\n\n          <div *ngIf=\"showHeader\" class=\"adf-task-details-header\">\n              <h2 class=\"activiti-task-details__header\">\n                  <span>{{taskDetails.name || 'No name'}}</span>\n              </h2>\n          </div>\n\n          <div class=\"adf-task-details-core\"\n              fxLayout=\"column\"\n              fxLayoutGap=\"8px\"\n              fxLayout.lt-lg=\"column\">\n\n              <div class=\"adf-task-details-core-form\">\n                  <div *ngIf=\"isAssigned()\">\n                      <adf-form *ngIf=\"hasFormKey()\" #activitiForm\n                                [showDebugButton]=\"debugMode\"\n                                [taskId]=\"taskDetails.id\"\n                                [showTitle]=\"showFormTitle\"\n                                [showRefreshButton]=\"showFormRefreshButton\"\n                                [showCompleteButton]=\"showFormCompleteButton\"\n                                [disableCompleteButton]=\"!isAssignedToMe()\"\n                                [showSaveButton]=\"showFormSaveButton\"\n                                [readOnly]=\"readOnlyForm\"\n                                [fieldValidators]=\"fieldValidators\"\n                                (formSaved)='onFormSaved($event)'\n                                (formCompleted)='onFormCompleted($event)'\n                                (formContentClicked)='onFormContentClick($event)'\n                                (formLoaded)='onFormLoaded($event)'\n                                (error)='onFormError($event)'\n                                (executeOutcome)='onFormExecuteOutcome($event)'>\n                          <div empty-form><h3 class=\"adf-task-title\">Please select a Task</h3></div>\n                      </adf-form>\n                  </div>\n                  <div *ngIf=\"!isAssigned()\">\n                      {{ 'ADF_TASK_LIST.DETAILS.MESSAGES.CLAIM' | translate }}\n                  </div>\n                  <button mat-raised-button class=\"activiti-task-details__action-button\"\n                          *ngIf=\"!hasFormKey() && isTaskActive()\" (click)=\"onComplete()\">\n                      {{ 'ADF_TASK_LIST.DETAILS.BUTTON.COMPLETE' | translate }}\n                  </button>\n              </div>\n              <div class=\"adf-task-details-core-sidebar\">\n                  <adf-info-drawer *ngIf=\"showHeaderContent\" title=\"{{ 'ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TITLE' | translate }}\" class=\"adf-task-details-core-sidebar-drawer\">\n                      <adf-info-drawer-tab label=\"{{ 'ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_DETAILS_TITLE' | translate }}\">\n                          <div class=\"assignment-container\" *ngIf=\"showAssignee\">\n                              <adf-people-search\n                                  (searchPeople)=\"searchUser($event)\"\n                                  (success)=\"assignTaskToUser($event)\"\n                                  (closeSearch)=\"onCloseSearch()\"\n                                  [results]=\"peopleSearch$\">\n                                  <ng-container people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_ASSIGNEE' | translate }}\n                                  </ng-container>\n                                  <ng-container people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_ASSIGNEE' | translate }}\n                                  </ng-container>\n                              </adf-people-search>\n                          </div>\n                          <adf-task-header\n                              [class]=\"getTaskHeaderViewClass()\"\n                              [taskDetails]=\"taskDetails\"\n                              [formName]=\"taskFormName\"\n                              (claim)=\"onClaimAction($event)\"\n                              (unclaim)=\"onClaimAction($event)\">\n                          </adf-task-header>\n                          <adf-people *ngIf=\"showInvolvePeople\" #people\n                                      [people]=\"taskPeople\"\n                                      [readOnly]=\"readOnlyForm\"\n                                      [taskId]=\"taskDetails.id\">\n                          </adf-people>\n                      </adf-info-drawer-tab>\n\n                      <adf-info-drawer-tab label=\"{{ 'ADF_TASK_LIST.DETAILS.LABELS.INFO_DRAWER_TAB_ACTIVITY_TITLE' | translate }}\">\n                          <mat-card *ngIf=\"showComments\">\n                              <mat-card-content>\n                                  <adf-comments #activiticomments\n                                                [readOnly]=\"isReadOnlyComment()\"\n                                                [taskId]=\"taskDetails.id\">\n                                  </adf-comments>\n                              </mat-card-content>\n                          </mat-card>\n                      </adf-info-drawer-tab>\n\n                  </adf-info-drawer>\n\n                  <div *ngIf=\"showHeaderContent\" class=\"adf-task-details-core-sidebar-checklist\">\n                      <div *ngIf=\"showChecklist\">\n                          <adf-checklist #activitichecklist\n                                         [readOnly]=\"readOnlyForm\"\n                                         [taskId]=\"taskDetails.id\"\n                                         [assignee]=\"taskDetails?.assignee?.id\"\n                                         (checklistTaskCreated)=\"onChecklistTaskCreated($event)\"\n                                         (checklistTaskDeleted)=\"onChecklistTaskDeleted($event)\">\n                          </adf-checklist>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <ng-template #errorDialog>\n              <h3 matDialogTitle>{{'ADF_TASK_LIST.DETAILS.ERROR.TITLE'|translate}}</h3>\n              <mat-dialog-content>\n                  <p>{{'ADF_TASK_LIST.DETAILS.ERROR.DESCRIPTION'|translate}}</p>\n              </mat-dialog-content>\n              <mat-dialog-actions>\n                  <button mat-button type=\"button\" (click)=\"closeErrorDialog()\">{{'ADF_TASK_LIST.DETAILS.ERROR.CLOSE'|translate}}\n                  </button>\n              </mat-dialog-actions>\n          </ng-template>\n\n      </div>\n    `,\n    styles: [`\n      :host {\n        width: 100%; }\n\n      .error-dialog h3 {\n        margin: 16px 0; }\n\n      .activiti-task-details__header {\n        -ms-flex-item-align: end;\n            align-self: flex-end;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        font-size: 24px;\n        font-weight: 300;\n        line-height: normal;\n        overflow: hidden;\n        margin: 8px 0 16px 0;\n        cursor: pointer;\n        user-select: none;\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none; }\n\n      .activiti-task-details__action-button {\n        text-transform: uppercase; }\n\n      adf-people ::ng-deep .assignment-top-container {\n        background-color: #fff; }\n\n      .assignment-container {\n        background: #fff;\n        border: 1px solid #e1e1e1;\n        padding: 10px 20px;\n        width: auto; }\n\n      adf-task-header.assign-edit-view ::ng-deep adf-card-view ::ng-deep .adf-property[data-automation-id=\"header-assignee\"] {\n        display: none; }\n\n      .adf-task-details-header {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: justify;\n            -ms-flex-pack: justify;\n                justify-content: space-between; }\n        .adf-task-details-header-toggle {\n          position: relative;\n          top: 10px;\n          margin-right: 2px;\n          height: 23px;\n          cursor: pointer;\n          user-select: none;\n          -moz-user-select: none;\n          -webkit-user-select: none;\n          -ms-user-select: none; }\n\n      .adf-task-details-core {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: justify;\n            -ms-flex-pack: justify;\n                justify-content: space-between; }\n        @media screen and (max-width: 1279px) {\n          .adf-task-details-core-sidebar-drawer {\n            margin-left: 0px; } }\n        .adf-task-details-core-sidebar-checklist {\n          margin-top: 30px;\n          padding-left: 20px;\n          padding-right: 20px; }\n        .adf-task-details-core-form {\n          -webkit-box-flex: 1;\n              -ms-flex-positive: 1;\n                  flex-grow: 1; }\n          .adf-task-details-core-form ::ng-deep .adf-form-debug-container {\n            padding: 20px 0 0 0; }\n            .adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle {\n              float: right; }\n              .adf-task-details-core-form ::ng-deep .adf-form-debug-container .mat-slide-toggle + div {\n                background-color: black;\n                padding: 20px;\n                clear: both;\n                margin-top: 30px;\n                color: white; }\n          .adf-task-details-core-form ::ng-deep .mat-tab-label {\n            -webkit-box-flex: 1;\n                -ms-flex-positive: 1;\n                    flex-grow: 1; }\n    `],\n    providers: [\n        CardViewUpdateService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskListService, },\n{type: AuthenticationService, },\n{type: PeopleProcessService, },\n{type: LogService, },\n{type: CardViewUpdateService, },\n{type: MatDialog, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activiticomments': [{ type: ViewChild, args: ['activiticomments', ] },],\n'activitichecklist': [{ type: ViewChild, args: ['activitichecklist', ] },],\n'errorDialog': [{ type: ViewChild, args: ['errorDialog', ] },],\n'debugMode': [{ type: Input },],\n'taskId': [{ type: Input },],\n'showNextTask': [{ type: Input },],\n'showHeader': [{ type: Input },],\n'showHeaderContent': [{ type: Input },],\n'showInvolvePeople': [{ type: Input },],\n'showComments': [{ type: Input },],\n'showChecklist': [{ type: Input },],\n'showFormTitle': [{ type: Input },],\n'showFormCompleteButton': [{ type: Input },],\n'showFormSaveButton': [{ type: Input },],\n'readOnlyForm': [{ type: Input },],\n'showFormRefreshButton': [{ type: Input },],\n'fieldValidators': [{ type: Input },],\n'formSaved': [{ type: Output },],\n'formCompleted': [{ type: Output },],\n'formContentClicked': [{ type: Output },],\n'formLoaded': [{ type: Output },],\n'taskCreated': [{ type: Output },],\n'taskDeleted': [{ type: Output },],\n'error': [{ type: Output },],\n'executeOutcome': [{ type: Output },],\n'assignTask': [{ type: Output },],\n};\n}\n\nfunction TaskDetailsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskDetailsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskDetailsComponent.ctorParameters;\n/** @type {?} */\nTaskDetailsComponent.propDecorators;\n/** @type {?} */\nTaskDetailsComponent.prototype.activiticomments;\n/** @type {?} */\nTaskDetailsComponent.prototype.activitichecklist;\n/** @type {?} */\nTaskDetailsComponent.prototype.errorDialog;\n/** @type {?} */\nTaskDetailsComponent.prototype.debugMode;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskId;\n/** @type {?} */\nTaskDetailsComponent.prototype.showNextTask;\n/** @type {?} */\nTaskDetailsComponent.prototype.showHeader;\n/** @type {?} */\nTaskDetailsComponent.prototype.showHeaderContent;\n/** @type {?} */\nTaskDetailsComponent.prototype.showInvolvePeople;\n/** @type {?} */\nTaskDetailsComponent.prototype.showComments;\n/** @type {?} */\nTaskDetailsComponent.prototype.showChecklist;\n/** @type {?} */\nTaskDetailsComponent.prototype.showFormTitle;\n/** @type {?} */\nTaskDetailsComponent.prototype.showFormCompleteButton;\n/** @type {?} */\nTaskDetailsComponent.prototype.showFormSaveButton;\n/** @type {?} */\nTaskDetailsComponent.prototype.readOnlyForm;\n/** @type {?} */\nTaskDetailsComponent.prototype.showFormRefreshButton;\n/** @type {?} */\nTaskDetailsComponent.prototype.fieldValidators;\n/** @type {?} */\nTaskDetailsComponent.prototype.formSaved;\n/** @type {?} */\nTaskDetailsComponent.prototype.formCompleted;\n/** @type {?} */\nTaskDetailsComponent.prototype.formContentClicked;\n/** @type {?} */\nTaskDetailsComponent.prototype.formLoaded;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskCreated;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskDeleted;\n/** @type {?} */\nTaskDetailsComponent.prototype.error;\n/** @type {?} */\nTaskDetailsComponent.prototype.executeOutcome;\n/** @type {?} */\nTaskDetailsComponent.prototype.assignTask;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskDetails;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskFormName;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskPeople;\n/** @type {?} */\nTaskDetailsComponent.prototype.noTaskDetailsTemplateComponent;\n/** @type {?} */\nTaskDetailsComponent.prototype.showAssignee;\n/** @type {?} */\nTaskDetailsComponent.prototype.peopleSearchObserver;\n/** @type {?} */\nTaskDetailsComponent.prototype.errorDialogRef;\n/** @type {?} */\nTaskDetailsComponent.prototype.peopleSearch$;\n/** @type {?} */\nTaskDetailsComponent.prototype.taskListService;\n/** @type {?} */\nTaskDetailsComponent.prototype.authService;\n/** @type {?} */\nTaskDetailsComponent.prototype.peopleProcessService;\n/** @type {?} */\nTaskDetailsComponent.prototype.logService;\n/** @type {?} */\nTaskDetailsComponent.prototype.cardViewUpdateService;\n/** @type {?} */\nTaskDetailsComponent.prototype.dialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nexport class ChecklistComponent implements OnInit, OnChanges {\n\n    \n    taskId: string;\n\n    \n    readOnly: boolean = false;\n\n    \n    assignee: string;\n\n    \n    checklistTaskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    \n    checklistTaskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    \n    addNewDialog: any;\n\n    taskName: string;\n\n    checklist: TaskDetailsModel [] = [];\nprivate taskObserver: Observer<TaskDetailsModel>;\n    task$: Observable<TaskDetailsModel>;\n/**\n * Constructor\n * @param {?} activitiTaskList\n * @param {?} dialog\n */\nconstructor(\nprivate activitiTaskList: TaskListService,\nprivate dialog: MatDialog\n    ) {\n        this.task$ = new Observable<TaskDetailsModel>(observer => this.taskObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.task$.subscribe((task: TaskDetailsModel) => {\n            this.checklist.push(task);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getTaskChecklist(taskId.currentValue);\n            return;\n        }\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\npublic getTaskChecklist(taskId: string) {\n        this.checklist = [];\n        if (this.taskId) {\n            this.activitiTaskList.getTaskChecklist(this.taskId).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n        } else {\n            this.checklist = [];\n        }\n    }\n/**\n * @return {?}\n */\nshowDialog() {\n        this.dialog.open(this.addNewDialog, { width: '350px' });\n    }\n/**\n * @return {?}\n */\npublic add() {\n        let /** @type {?} */ newTask = new TaskDetailsModel({\n            name: this.taskName,\n            parentTaskId: this.taskId,\n            assignee: { id: this.assignee }\n        });\n        this.activitiTaskList.addTask(newTask).subscribe(\n            (res: TaskDetailsModel) => {\n                this.checklist.push(res);\n                this.checklistTaskCreated.emit(res);\n                this.taskName = '';\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n        this.cancel();\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\npublic delete(taskId: string) {\n        this.activitiTaskList.deleteTask(taskId).subscribe(\n            () => {\n                this.checklist = this.checklist.filter(check => check.id !== taskId);\n                this.checklistTaskDeleted.emit(taskId);\n            },\n            (error) => {\n                this.error.emit(error);\n            });\n    }\n/**\n * @return {?}\n */\npublic cancel() {\n        this.dialog.closeAll();\n        // if (this.addNewDialog) {\n        //     this.addNewDialog.nativeElement.close();\n        // }\n        this.taskName = '';\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-checklist',\n    template: `\n      <div class=\"adf-checklist-control\">\n          <mat-chip-list id=\"checklist-label\">\n              <span class=\"activiti-label\">{{ 'ADF_TASK_LIST.DETAILS.LABELS.CHECKLIST' | translate }}</span>\n              <mat-chip class=\"adf-process-badge\" color=\"accent\" selected=\"true\">{{checklist?.length}}</mat-chip>\n          </mat-chip-list>\n\n\n          <button mat-icon-button *ngIf=\"!readOnly\" matTooltip=\"Add a checklist\" [matTooltipPosition]=\"'before'\" id=\"add-checklist\" class=\"adf-add-to-checklist-button\" (click)=\"showDialog()\">\n              <mat-icon>add</mat-icon>\n          </button>\n      </div>\n\n      <div class=\"adf-checklist-menu-container\" *ngIf=\"checklist?.length > 0\">\n          <mat-chip-list class=\"mat-chip-list-stacked\">\n              <mat-chip id=\"check-{{check.id}}\" class=\"adf-checklist-chip\" *ngFor=\"let check of checklist\">\n                  <span>{{check.name}}</span>\n                  <button  *ngIf=\"!readOnly\" mat-icon-button type=\"button\" class=\"adf-checklist-cancel-button\" (click)=\"delete(check.id)\">\n                      <mat-icon id=\"remove-{{check.id}}\" matChipRemove>cancel</mat-icon>\n                  </button>\n              </mat-chip>\n          </mat-chip-list>\n\n      </div>\n      <div *ngIf=\"checklist?.length === 0\" id=\"checklist-none-message\">\n          {{ 'ADF_TASK_LIST.DETAILS.CHECKLIST.NONE' | translate }}\n      </div>\n\n      <ng-template #dialog>\n          <div class=\"adf-checklist-dialog\" id=\"checklist-dialog\">\n              <h4 matDialogTitle id=\"add-checklist-title\">New Check</h4>\n              <mat-dialog-content>\n                  <mat-form-field>\n                      <input matInput placeholder=\"Name\" [(ngModel)]=\"taskName\" id=\"checklist-name\"  data-automation-id=\"checklist-name\">\n                  </mat-form-field>\n              </mat-dialog-content>\n              <mat-dialog-actions class=\"adf-checklist-dialog-actions\">\n                  <button mat-button type=\"button\" id=\"close-check-dialog\" (click)=\"cancel()\">Cancel</button>\n                  <button mat-button type=\"button\" id=\"add-check\" (click)=\"add()\">Add Checklist</button>\n              </mat-dialog-actions>\n          </div>\n      </ng-template>\n    `,\n    styles: [`\n      :host {\n        width: 100%; }\n\n      .activiti-label {\n        font-weight: bolder; }\n\n      .mat-form-field {\n        width: 100%; }\n\n      .adf-checklist-cancel-button {\n        margin-top: -13px;\n        margin-right: -13px;\n        float: right; }\n\n      .adf-checklist-chip {\n        outline: none; }\n\n      .adf-checklist-menu-container {\n        margin-top: 10px; }\n\n      #checklist-none-message {\n        margin-top: 10px;\n        color: rgba(0, 0, 0, 0.5); }\n\n      .adf-checklist-control {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: justify;\n            -ms-flex-pack: justify;\n                justify-content: space-between; }\n        .adf-checklist-control .activiti-label {\n          margin-top: 6px;\n          margin-right: 10px; }\n        .adf-checklist-control .adf-add-to-checklist-button {\n          float: right; }\n\n      .adf-checklist-dialog-actions {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: end;\n            -ms-flex-pack: end;\n                justify-content: flex-end; }\n    `],\n    providers: [TaskListService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TaskListService, },\n{type: MatDialog, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'taskId': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'assignee': [{ type: Input },],\n'checklistTaskCreated': [{ type: Output },],\n'checklistTaskDeleted': [{ type: Output },],\n'error': [{ type: Output },],\n'addNewDialog': [{ type: ViewChild, args: ['dialog', ] },],\n};\n}\n\nfunction ChecklistComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nChecklistComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChecklistComponent.ctorParameters;\n/** @type {?} */\nChecklistComponent.propDecorators;\n/** @type {?} */\nChecklistComponent.prototype.taskId;\n/** @type {?} */\nChecklistComponent.prototype.readOnly;\n/** @type {?} */\nChecklistComponent.prototype.assignee;\n/** @type {?} */\nChecklistComponent.prototype.checklistTaskCreated;\n/** @type {?} */\nChecklistComponent.prototype.checklistTaskDeleted;\n/** @type {?} */\nChecklistComponent.prototype.error;\n/** @type {?} */\nChecklistComponent.prototype.addNewDialog;\n/** @type {?} */\nChecklistComponent.prototype.taskName;\n/** @type {?} */\nChecklistComponent.prototype.checklist;\n/** @type {?} */\nChecklistComponent.prototype.taskObserver;\n/** @type {?} */\nChecklistComponent.prototype.task$;\n/** @type {?} */\nChecklistComponent.prototype.activitiTaskList;\n/** @type {?} */\nChecklistComponent.prototype.dialog;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { FilterRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport'rxjs/add/observable/throw';\nexport class TaskFilterService {\nprivate tasksListSubject = new Subject<TaskListModel>();\npublic tasksList$: Observable<TaskListModel>;\n/**\n * @param {?} apiService\n * @param {?} logService\n */\nconstructor(private apiService: AlfrescoApiService,\nprivate logService: LogService) {\n        this.tasksList$ = this.tasksListSubject.asObservable();\n    }\n/**\n * Create and return the default filters\n * @param {?} appId\n * @return {?}\n */\npublic createDefaultFilters(appId: number): Observable<FilterRepresentationModel[]> {\n        let /** @type {?} */ involvedTasksFilter = this.getInvolvedTasksFilterInstance(appId);\n        let /** @type {?} */ involvedObservable = this.addFilter(involvedTasksFilter);\n\n        let /** @type {?} */ myTasksFilter = this.getMyTasksFilterInstance(appId);\n        let /** @type {?} */ myTaskObservable = this.addFilter(myTasksFilter);\n\n        let /** @type {?} */ queuedTasksFilter = this.getQueuedTasksFilterInstance(appId);\n        let /** @type {?} */ queuedObservable = this.addFilter(queuedTasksFilter);\n\n        let /** @type {?} */ completedTasksFilter = this.getCompletedTasksFilterInstance(appId);\n        let /** @type {?} */ completeObservable = this.addFilter(completedTasksFilter);\n\n        return Observable.create(observer => {\n            Observable.forkJoin(\n                involvedObservable,\n                myTaskObservable,\n                queuedObservable,\n                completeObservable\n            ).subscribe(\n                (res) => {\n                    let /** @type {?} */ filters: FilterRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === involvedTasksFilter.name) {\n                            filters.push(involvedTasksFilter);\n                        } else if (filter.name === myTasksFilter.name) {\n                            filters.push(myTasksFilter);\n                        } else if (filter.name === queuedTasksFilter.name) {\n                            filters.push(queuedTasksFilter);\n                        } else if (filter.name === completedTasksFilter.name) {\n                            filters.push(completedTasksFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.logService.error(err);\n                });\n        });\n    }\n/**\n * Retrieve all the Tasks filters\n * @param {?=} appId\n * @return {?}\n */\ngetTaskListFilters(appId?: number): Observable<any> {\n        return Observable.fromPromise(this.callApiTaskFilters(appId))\n            .map((response: any) => {\n                let /** @type {?} */ filters: FilterRepresentationModel[] = [];\n                response.data.forEach((filter: FilterRepresentationModel) => {\n                    let /** @type {?} */ filterModel = new FilterRepresentationModel(filter);\n                    filters.push(filterModel);\n                });\n                return filters;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve the Tasks filter by id\n * @param {?} filterId - number - The id of the filter\n * @param {?=} appId - string - optional - The id of app\n * @return {?}\n */\ngetTaskFilterById(filterId: number, appId?: number): Observable<FilterRepresentationModel> {\n        return Observable.fromPromise(this.callApiTaskFilters(appId))\n            .map((response: any) => {\n                return response.data.find(filter => filter.id === filterId);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve the Tasks filter by name\n * @param {?} taskName - string - The name of the filter\n * @param {?=} appId\n * @return {?}\n */\ngetTaskFilterByName(taskName: string, appId?: number): Observable<FilterRepresentationModel> {\n        return Observable.fromPromise(this.callApiTaskFilters(appId))\n            .map((response: any) => {\n                return response.data.find(filter => filter.name === taskName);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Add a filter\n * @param {?} filter - FilterRepresentationModel\n * @return {?}\n */\naddFilter(filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.userFiltersApi.createUserTaskFilter(filter))\n            .map(res => res)\n            .map((response: FilterRepresentationModel) => {\n                return response;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * @param {?=} appId\n * @return {?}\n */\ncallApiTaskFilters(appId?: number) {\n        if (appId) {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters({appId: appId});\n        } else {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters();\n        }\n    }\n/**\n * Return a static Involved filter instance\n * @param {?} appId\n * @return {?}\n */\ngetInvolvedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Involved Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-align-left',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'involved'}\n        });\n    }\n/**\n * Return a static My task filter instance\n * @param {?} appId\n * @return {?}\n */\ngetMyTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'My Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-inbox',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'assignee'}\n        });\n    }\n/**\n * Return a static Queued filter instance\n * @param {?} appId\n * @return {?}\n */\ngetQueuedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Queued Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-record',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'candidate'}\n        });\n    }\n/**\n * Return a static Completed filter instance\n * @param {?} appId\n * @return {?}\n */\ngetCompletedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Completed Tasks',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-ok-sign',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'completed', 'assignment': 'involved'}\n        });\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: any) {\n        this.logService.error(error);\n        this.tasksListSubject.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: LogService, },\n];\n}\n\nfunction TaskFilterService_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskFilterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskFilterService.ctorParameters;\n/** @type {?} */\nTaskFilterService.prototype.tasksListSubject;\n/** @type {?} */\nTaskFilterService.prototype.tasksList$;\n/** @type {?} */\nTaskFilterService.prototype.apiService;\n/** @type {?} */\nTaskFilterService.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport'rxjs/add/observable/throw';\nimport'rxjs/add/observable/forkJoin';\nimport'rxjs/add/observable/fromPromise';\nimport'rxjs/operator/switchMap';\nexport class TaskListService {\nprivate tasksListSubject = new Subject<TaskListModel>();\npublic tasksList$: Observable<TaskListModel>;\n/**\n * @param {?} apiService\n * @param {?} logService\n */\nconstructor(private apiService: AlfrescoApiService,\nprivate logService: LogService) {\n        this.tasksList$ = this.tasksListSubject.asObservable();\n    }\n/**\n * Return all the filters in the list where the task id belong\n * @param {?} taskId - string\n * @param {?} filterList\n * @return {?}\n */\ngetFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel> {\n        return Observable.from(filterList)\n            .flatMap((filter: FilterRepresentationModel) => this.isTaskRelatedToFilter(taskId, filter))\n            .filter((filter: FilterRepresentationModel) => filter != null);\n    }\n/**\n * Return the search node for query task based on the given filter\n * @param {?} filter - FilterRepresentationModel\n * @return {?}\n */\nprivate generateTaskRequestNodeFromFilter(filter: FilterRepresentationModel): TaskQueryRequestRepresentationModel {\n        let /** @type {?} */ requestNode = {\n            appDefinitionId: filter.appId,\n            assignment: filter.filter.assignment,\n            state: filter.filter.state,\n            sort: filter.filter.sort\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n/**\n * Check if a taskId is filtered with the given filter\n * @param {?} taskId - string\n * @param {?} filter - FilterRepresentationModel\n * @return {?}\n */\nisTaskRelatedToFilter(taskId: string, filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        let /** @type {?} */ requestNodeForFilter = this.generateTaskRequestNodeFromFilter(filter);\n        return Observable.fromPromise(this.callApiTasksFiltered(requestNodeForFilter))\n            .map((res: any) => {\n                return res.data.find(element => element.id === taskId) ? filter : null;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve all the tasks filtered by filterModel\n * @param {?} requestNode\n * @return {?}\n */\ngetTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return Observable.fromPromise(this.callApiTasksFiltered(requestNode))\n            .map((res: any) => {\n                this.tasksListSubject.next(res);\n                return res;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve tasks filtered by filterModel and state\n * @param {?} requestNode\n * @param {?=} state\n * @return {?}\n */\nfindTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTasks(requestNode);\n    }\n/**\n * Retrieve all tasks filtered by filterModel and state\n * @param {?} requestNode\n * @param {?=} state\n * @return {?}\n */\nfindAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTotalTasks(requestNode).switchMap((res: any) => {\n            requestNode.size = res.total;\n            return this.getTasks(requestNode);\n        });\n    }\n/**\n * Retrieve all tasks filtered by filterModel irrespective of state\n * @param {?} requestNode\n * @return {?}\n */\nfindAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return Observable.forkJoin(\n                this.findTasksByState(requestNode, 'open'),\n                this.findAllTaskByState(requestNode, 'completed'),\n                (activeTasks: TaskListModel, completedTasks: TaskListModel) => {\n                    const /** @type {?} */ tasks = Object.assign({}, activeTasks);\n                    tasks.total += completedTasks.total;\n                    tasks.data = tasks.data.concat(completedTasks.data);\n                    this.tasksListSubject.next(tasks);\n                    return tasks;\n                }\n            );\n    }\n/**\n * Retrieve all the task details\n * @param {?} taskId\n * @return {?}\n */\ngetTaskDetails(taskId: string): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.callApiTaskDetails(taskId))\n            .map(res => res)\n            .map((details: any) => {\n                return new TaskDetailsModel(details);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve all the task's checklist\n * @param {?} id - taskId\n * @return {?}\n */\ngetTaskChecklist(id: string): Observable<TaskDetailsModel[]> {\n        return Observable.fromPromise(this.callApiTaskChecklist(id))\n            .map(res => res)\n            .map((response: any) => {\n                let /** @type {?} */ checklists: TaskDetailsModel[] = [];\n                response.data.forEach((checklist) => {\n                    checklists.push(new TaskDetailsModel(checklist));\n                });\n                return checklists;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Retrieve all the form shared with this user\n * @return {?}\n */\ngetFormList(): Observable<Form []> {\n        let /** @type {?} */ opts = {\n            'filter': 'myReusableForms', // String | filter\n            'sort': 'modifiedDesc', // String | sort\n            'modelType': 2 // Integer | modelType\n        };\n\n        return Observable.fromPromise(this.apiService.getInstance().activiti.modelsApi.getModels(opts)).map(res => res)\n            .map((response: any) => {\n                let /** @type {?} */ forms: Form[] = [];\n                response.data.forEach((form) => {\n                    forms.push(new Form(form.id, form.name));\n                });\n                return forms;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * @param {?} taskId\n * @param {?} formId\n * @return {?}\n */\nattachFormToATask(taskId: string, formId: number): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.attachForm(taskId, {'formId': formId})).catch(err => this.handleError(err));\n    }\n/**\n * Add a task\n * @param {?} task - TaskDetailsModel\n * @return {?}\n */\naddTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.callApiAddTask(task))\n            .map(res => res)\n            .map((response: TaskDetailsModel) => {\n                return new TaskDetailsModel(response);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Delete a task\n * @param {?} taskId - string\n * @return {?}\n */\ndeleteTask(taskId: string): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.callApiDeleteTask(taskId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Make the task completed\n * @param {?} taskId\n * @return {?}\n */\ncompleteTask(taskId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.completeTask(taskId))\n            .map(res => res)\n            .catch(err => this.handleError(err));\n    }\n/**\n * Return the total number of the tasks by filter\n * @param {?} requestNode - TaskFilterRepresentationModel\n * @return {?}\n */\npublic getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any> {\n        requestNode.size = 0;\n        return Observable.fromPromise(this.callApiTasksFiltered(requestNode))\n            .map((res: any) => {\n                return res;\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Create a new standalone task\n * @param {?} task - TaskDetailsModel\n * @return {?}\n */\ncreateNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.callApiCreateTask(task))\n            .map(res => res)\n            .map((response: TaskDetailsModel) => {\n                return new TaskDetailsModel(response);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Assign task to user/group\n * @param {?} taskId - string\n * @param {?} requestNode - any\n * @return {?}\n */\nassignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel> {\n        let /** @type {?} */ assignee = {assignee: requestNode.id};\n        return Observable.fromPromise(this.callApiAssignTask(taskId, assignee))\n            .map(res => res)\n            .map((response: TaskDetailsModel) => {\n                return new TaskDetailsModel(response);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * @param {?} taskId\n * @param {?} userId\n * @return {?}\n */\nassignTaskByUserId(taskId: string, userId: number): Observable<TaskDetailsModel> {\n        let /** @type {?} */ assignee = {assignee: userId};\n        return Observable.fromPromise(this.callApiAssignTask(taskId, assignee))\n            .map(res => res)\n            .map((response: TaskDetailsModel) => {\n                return new TaskDetailsModel(response);\n            }).catch(err => this.handleError(err));\n    }\n/**\n * Claim a task\n * @param {?} taskId\n * @return {?}\n */\nclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.claimTask(taskId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Unclaim a task\n * @param {?} taskId\n * @return {?}\n */\nunclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.unclaimTask(taskId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * Update due date\n * @param {?} taskId\n * @param {?} updated\n * @return {?}\n */\nupdateTask(taskId: any, updated): Observable<TaskDetailsModel> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.updateTask(taskId, updated))\n            .catch(err => this.handleError(err));\n    }\n/**\n * fetch the Task Audit information as a pdf\n * @param {?} taskId - the task id\n * @return {?}\n */\nfetchTaskAuditPdfById(taskId: string): Observable<Blob> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.getTaskAuditPdf(taskId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * fetch the Task Audit information in a json format\n * @param {?} taskId - the task id\n * @return {?}\n */\nfetchTaskAuditJsonById(taskId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.getTaskAuditJson(taskId))\n            .catch(err => this.handleError(err));\n    }\n/**\n * @param {?} requestNode\n * @return {?}\n */\nprivate callApiTasksFiltered(requestNode: TaskQueryRequestRepresentationModel) {\n        return this.apiService.getInstance().activiti.taskApi.listTasks(requestNode);\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nprivate callApiTaskDetails(taskId: string) {\n        return this.apiService.getInstance().activiti.taskApi.getTask(taskId);\n    }\n/**\n * @param {?} task\n * @return {?}\n */\nprivate callApiAddTask(task: TaskDetailsModel) {\n        return this.apiService.getInstance().activiti.taskApi.addSubtask(task.parentTaskId, task);\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nprivate callApiDeleteTask(taskId: string) {\n        return this.apiService.getInstance().activiti.taskApi.deleteTask(taskId);\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nprivate callApiTaskChecklist(taskId: string) {\n        return this.apiService.getInstance().activiti.taskApi.getChecklist(taskId);\n    }\n/**\n * @param {?} task\n * @return {?}\n */\nprivate callApiCreateTask(task: TaskDetailsModel) {\n        return this.apiService.getInstance().activiti.taskApi.createNewTask(task);\n    }\n/**\n * @param {?} taskId\n * @param {?} requestNode\n * @return {?}\n */\nprivate callApiAssignTask(taskId: string, requestNode: any) {\n        return this.apiService.getInstance().activiti.taskApi.assignTask(taskId, requestNode);\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: any) {\n        this.logService.error(error);\n        this.tasksListSubject.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: LogService, },\n];\n}\n\nfunction TaskListService_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskListService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskListService.ctorParameters;\n/** @type {?} */\nTaskListService.prototype.tasksListSubject;\n/** @type {?} */\nTaskListService.prototype.tasksList$;\n/** @type {?} */\nTaskListService.prototype.apiService;\n/** @type {?} */\nTaskListService.prototype.logService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent the details of a task.\n *\n *\n * @returns {TaskDetailsModel} .\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { TaskRepresentation } from 'alfresco-js-api';\nimport { UserGroupModel } from './user-group.model';\nexport class TaskDetailsModel implements TaskRepresentation {\n    id: string;\n    name: string;\n    assignee: UserProcessModel;\n    priority: number;\n    adhocTaskCanBeReassigned: boolean;\n    category: string;\n    created: Date;\n    description: string;\n    dueDate: Date;\n    duration: number;\n    endDate: Date;\n    executionId: string;\n    formKey: string;\n    initiatorCanCompleteTask: boolean;\n    managerOfCandidateGroup: boolean;\n    memberOfCandidateGroup: boolean;\n    memberOfCandidateUsers: boolean;\n    involvedGroups: UserGroupModel [];\n    involvedPeople: UserProcessModel [];\n    parentTaskId: string;\n    parentTaskName: string;\n    processDefinitionCategory: string;\n    processDefinitionDeploymentId: string;\n    processDefinitionDescription: string;\n    processDefinitionId: string;\n    processDefinitionKey: string;\n    processDefinitionName: string;\n    processDefinitionVersion: number = 0;\n    processInstanceId: string;\n    processInstanceName: string;\n    processInstanceStartUserId: string;\n    taskDefinitionKey: string;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.priority = obj.priority;\n            this.assignee = obj.assignee ? new UserProcessModel(obj.assignee) : null;\n            this.adhocTaskCanBeReassigned = obj.adhocTaskCanBeReassigned;\n            this.category = obj.category || null;\n            this.created = obj.created || null;\n            this.description = obj.description || null;\n            this.dueDate = obj.dueDate || null;\n            this.duration = obj.duration || null;\n            this.endDate = obj.endDate || null;\n            this.executionId = obj.executionId || null;\n            this.formKey = obj.formKey || null;\n            this.initiatorCanCompleteTask = !!obj.initiatorCanCompleteTask;\n            this.managerOfCandidateGroup = !!obj.managerOfCandidateGroup;\n            this.memberOfCandidateGroup = !!obj.memberOfCandidateGroup;\n            this.memberOfCandidateUsers = !!obj.memberOfCandidateUsers;\n            this.involvedGroups = obj.involvedGroups;\n            this.involvedPeople = obj.involvedPeople;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.parentTaskName = obj.parentTaskName || null;\n            this.processDefinitionCategory = obj.processDefinitionCategory || null;\n            this.processDefinitionDeploymentId = obj.processDefinitionDeploymentId || null;\n            this.processDefinitionDescription = obj.processDefinitionDescription || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionVersion = obj.processDefinitionVersion || 0;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processInstanceName = obj.processInstanceName || null;\n            this.processInstanceStartUserId = obj.processInstanceStartUserId || null;\n            this.taskDefinitionKey = obj.taskDefinitionKey || null;\n        }\n    }\n/**\n * @return {?}\n */\ngetFullName(): string {\n        let /** @type {?} */ fullName: string = '';\n\n        if (this.assignee) {\n            let /** @type {?} */ firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            let /** @type {?} */ lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n/**\n * @return {?}\n */\nisCompleted(): boolean {\n        return !!this.endDate;\n    }\n}\n\nfunction TaskDetailsModel_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskDetailsModel.prototype.id;\n/** @type {?} */\nTaskDetailsModel.prototype.name;\n/** @type {?} */\nTaskDetailsModel.prototype.assignee;\n/** @type {?} */\nTaskDetailsModel.prototype.priority;\n/** @type {?} */\nTaskDetailsModel.prototype.adhocTaskCanBeReassigned;\n/** @type {?} */\nTaskDetailsModel.prototype.category;\n/** @type {?} */\nTaskDetailsModel.prototype.created;\n/** @type {?} */\nTaskDetailsModel.prototype.description;\n/** @type {?} */\nTaskDetailsModel.prototype.dueDate;\n/** @type {?} */\nTaskDetailsModel.prototype.duration;\n/** @type {?} */\nTaskDetailsModel.prototype.endDate;\n/** @type {?} */\nTaskDetailsModel.prototype.executionId;\n/** @type {?} */\nTaskDetailsModel.prototype.formKey;\n/** @type {?} */\nTaskDetailsModel.prototype.initiatorCanCompleteTask;\n/** @type {?} */\nTaskDetailsModel.prototype.managerOfCandidateGroup;\n/** @type {?} */\nTaskDetailsModel.prototype.memberOfCandidateGroup;\n/** @type {?} */\nTaskDetailsModel.prototype.memberOfCandidateUsers;\n/** @type {?} */\nTaskDetailsModel.prototype.involvedGroups;\n/** @type {?} */\nTaskDetailsModel.prototype.involvedPeople;\n/** @type {?} */\nTaskDetailsModel.prototype.parentTaskId;\n/** @type {?} */\nTaskDetailsModel.prototype.parentTaskName;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionCategory;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionDeploymentId;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionDescription;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionId;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionKey;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionName;\n/** @type {?} */\nTaskDetailsModel.prototype.processDefinitionVersion;\n/** @type {?} */\nTaskDetailsModel.prototype.processInstanceId;\n/** @type {?} */\nTaskDetailsModel.prototype.processInstanceName;\n/** @type {?} */\nTaskDetailsModel.prototype.processInstanceStartUserId;\n/** @type {?} */\nTaskDetailsModel.prototype.taskDefinitionKey;\n}\n\n","\n/**\n * \n * This object represent of the Form.\n * \n * \n */\nexport class Form {\n\n    id: number;\n    name: string;\n/**\n * @param {?} id\n * @param {?} name\n */\nconstructor(id: number, name: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n\nfunction Form_tsickle_Closure_declarations() {\n/** @type {?} */\nForm.prototype.id;\n/** @type {?} */\nForm.prototype.name;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { TaskQueryRequestRepresentation, UserTaskFilterRepresentation } from 'alfresco-js-api';\nexport class AppDefinitionRepresentationModel {\n    defaultAppId: string;\n    deploymentId: string;\n    name: string;\n    description: string;\n    theme: string;\n    icon: string;\n    id: number;\n    modelId: number;\n    tenantId: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;\n            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;\n            this.name = obj.name ? obj.name : null;\n            this.description = obj.description ? obj.description : null;\n            this.theme = obj.theme ? obj.theme : null;\n            this.icon = obj.icon ? obj.icon : null;\n            this.id = obj.id ? obj.id : null;\n            this.modelId = obj.modelId ? obj.modelId : null;\n            this.tenantId = obj.tenantId ? obj.tenantId : null;\n        }\n    }\n}\n\nfunction AppDefinitionRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.defaultAppId;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.deploymentId;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.name;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.description;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.theme;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.icon;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.id;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.modelId;\n/** @type {?} */\nAppDefinitionRepresentationModel.prototype.tenantId;\n}\n\nexport class FilterParamsModel {\n    id: string;\n    name: string;\n    index: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.index = obj.index;\n        }\n    }\n}\n\nfunction FilterParamsModel_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterParamsModel.prototype.id;\n/** @type {?} */\nFilterParamsModel.prototype.name;\n/** @type {?} */\nFilterParamsModel.prototype.index;\n}\n\nexport class FilterRepresentationModel implements UserTaskFilterRepresentation {\n    id: number;\n    appId: number;\n    name: string;\n    recent: boolean;\n    icon: string;\n    filter: FilterParamRepresentationModel;\n    index: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = new FilterParamRepresentationModel(obj.filter);\n            this.index = obj.index;\n        }\n    }\n/**\n * @return {?}\n */\nhasFilter() {\n        return this.filter ? true : false;\n    }\n}\n\nfunction FilterRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRepresentationModel.prototype.id;\n/** @type {?} */\nFilterRepresentationModel.prototype.appId;\n/** @type {?} */\nFilterRepresentationModel.prototype.name;\n/** @type {?} */\nFilterRepresentationModel.prototype.recent;\n/** @type {?} */\nFilterRepresentationModel.prototype.icon;\n/** @type {?} */\nFilterRepresentationModel.prototype.filter;\n/** @type {?} */\nFilterRepresentationModel.prototype.index;\n}\n\nexport class FilterParamRepresentationModel {\n    processDefinitionId: string;\n    processDefinitionKey: string;\n    name: string;\n    state: string;\n    sort: string;\n    assignment: string;\n    dueAfter: Date;\n    dueBefore: Date;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.name = obj.name || null;\n            this.state = obj.state || null;\n            this.sort = obj.sort || null;\n            this.assignment = obj.assignment || null;\n            this.dueAfter = obj.dueAfter || null;\n            this.dueBefore = obj.dueBefore || null;\n        }\n    }\n}\n\nfunction FilterParamRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterParamRepresentationModel.prototype.processDefinitionId;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.processDefinitionKey;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.name;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.state;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.sort;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.assignment;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.dueAfter;\n/** @type {?} */\nFilterParamRepresentationModel.prototype.dueBefore;\n}\n\nexport class TaskQueryRequestRepresentationModel implements TaskQueryRequestRepresentation {\n    appDefinitionId: string;\n    processInstanceId: string;\n    processDefinitionId: string;\n    text: string;\n    assignment: string;\n    state: string;\n    start: string;\n    sort: string;\n    page: number;\n    size: number;\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        if (obj) {\n            this.appDefinitionId = obj.appDefinitionId || null;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.text = obj.text || null;\n            this.assignment = obj.assignment || null;\n            this.state = obj.state || null;\n            this.start = obj.start || null;\n            this.sort = obj.sort || null;\n            this.page = obj.page || 0;\n            this.size = obj.size || 25;\n        }\n    }\n}\n\nfunction TaskQueryRequestRepresentationModel_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.appDefinitionId;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.processInstanceId;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.processDefinitionId;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.text;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.assignment;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.state;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.start;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.sort;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.page;\n/** @type {?} */\nTaskQueryRequestRepresentationModel.prototype.size;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/throw';\nexport class ProcessUploadService extends UploadService {\n\n    instanceApi: AlfrescoApiService;\n/**\n * @param {?} apiService\n * @param {?} appConfigService\n */\nconstructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n        this.instanceApi = apiService;\n    }\n/**\n * @param {?} file\n * @return {?}\n */\ngetUploadPromise(file: any): any {\n        let /** @type {?} */ opts = {\n            isRelatedContent: true\n        };\n        let /** @type {?} */ processInstanceId = file.options.parentId;\n        let /** @type {?} */ promise = this.instanceApi.getInstance().activiti.contentApi.createRelatedContentOnProcessInstance(processInstanceId, file.file, opts);\n\n        promise.catch(err => this.handleError(err));\n\n        return promise;\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: any) {\n        return Observable.throw(error || 'Server error');\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: AppConfigService, },\n];\n}\n\nfunction ProcessUploadService_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessUploadService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessUploadService.ctorParameters;\n/** @type {?} */\nProcessUploadService.prototype.instanceApi;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/throw';\nexport class TaskUploadService extends UploadService {\n\n    instanceApi: AlfrescoApiService;\n/**\n * @param {?} apiService\n * @param {?} appConfigService\n */\nconstructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n        this.instanceApi = apiService;\n    }\n/**\n * @param {?} file\n * @return {?}\n */\ngetUploadPromise(file: any): any {\n        let /** @type {?} */ opts = {\n            isRelatedContent: true\n        };\n        let /** @type {?} */ taskId = file.options.parentId;\n        let /** @type {?} */ promise = this.instanceApi.getInstance().activiti.contentApi.createRelatedContentOnTask(taskId, file.file, opts);\n\n        promise.catch(err => this.handleError(err));\n\n        return promise;\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleError(error: any) {\n        return Observable.throw(error || 'Server error');\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlfrescoApiService, },\n{type: AppConfigService, },\n];\n}\n\nfunction TaskUploadService_tsickle_Closure_declarations() {\n/** @type {?} */\nTaskUploadService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTaskUploadService.ctorParameters;\n/** @type {?} */\nTaskUploadService.prototype.instanceApi;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule, DataTableModule } from '@alfresco/adf-core';\n\nimport { ProcessCommentsComponent } from './process-comments.component';\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\nexport class CommentsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule\n    ],\n    declarations: [\n        ProcessCommentsComponent,\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        ProcessCommentsComponent,\n        CommentListComponent,\n        CommentsComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CommentsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCommentsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommentsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommentProcessModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nexport class CommentsComponent implements OnChanges {\n\n    \n    taskId: string;\n\n    \n    readOnly: boolean = false;\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentProcessModel [] = [];\nprivate commentObserver: Observer<CommentProcessModel>;\n    comment$: Observable<CommentProcessModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n/**\n * @param {?} commentProcessService\n */\nconstructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentProcessModel>(observer =>  this.commentObserver = observer).share();\n        this.comment$.subscribe((comment: CommentProcessModel) => {\n            this.comments.push(comment);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ taskId = changes['taskId'];\n        if (taskId) {\n            if (taskId.currentValue) {\n                this.getTaskComments(taskId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n/**\n * @param {?} taskId\n * @return {?}\n */\nprivate getTaskComments(taskId: string): void {\n        this.resetComments();\n        if (taskId) {\n            this.commentProcessService.getTaskComments(taskId).subscribe(\n                (res: CommentProcessModel[]) => {\n                    res = res.sort((comment1: CommentProcessModel, comment2: CommentProcessModel) => {\n                        let /** @type {?} */ date1 = new Date(comment1.created);\n                        let /** @type {?} */ date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                    },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n/**\n * @return {?}\n */\nprivate resetComments(): void {\n        this.comments = [];\n    }\n/**\n * @return {?}\n */\nadd(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addTaskComment(this.taskId, this.message)\n            .subscribe(\n                (res: CommentProcessModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.beingAdded = false;\n                }\n            );\n        }\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        this.message = '';\n    }\n/**\n * @return {?}\n */\nisReadOnly(): boolean {\n        return this.readOnly;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-comments',\n    template: `\n      <div class=\"adf-comments-container\">\n          <div id=\"comment-header\" class=\"adf-comments-header\">\n              {{'ADF_TASK_LIST.DETAILS.COMMENTS.HEADER' | translate: { count: comments?.length} }}\n          </div>\n          <div class=\"adf-comments-input-container\" *ngIf=\"!isReadOnly()\">\n                  <mat-form-field class=\"adf-full-width\">\n                      <input matInput id=\"comment-input\" placeholder=\"{{'ADF_TASK_LIST.DETAILS.COMMENTS.ADD' | translate}}\" [(ngModel)]=\"message\" (keyup.enter)=\"add()\" (keyup.esc)=\"clear()\">\n                  </mat-form-field>\n          </div>\n\n          <div *ngIf=\"comments.length > 0\">\n              <adf-comment-list [comments]=\"comments\">\n              </adf-comment-list>\n          </div>\n      </div>\n    `,\n    styles: [`\n      .adf-comments-container {\n          height: 100%;\n          width: 100%;\n          overflow: auto;\n      }\n\n      .adf-comments-header {\n          padding: 10px 20px;\n          font-size: 14px;\n          font-weight: 600;\n          border-bottom: 1px solid #e1e1e1;\n          color: #a1a1a1;\n      }\n\n      .adf-comments-input-container {\n          padding: 0 15px;\n          width: calc(100% - 30px);\n          padding-top: 8px;\n          border-bottom: 1px solid #e1e1e1;\n      }\n\n      .adf-full-width {\n          width: 100%;\n      }\n\n      adf-comment-list {\n          float: left;\n          overflow: auto;\n          height: calc(100% - 101px);\n          width: 100%;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CommentProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'taskId': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'error': [{ type: Output },],\n};\n}\n\nfunction CommentsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCommentsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommentsComponent.ctorParameters;\n/** @type {?} */\nCommentsComponent.propDecorators;\n/** @type {?} */\nCommentsComponent.prototype.taskId;\n/** @type {?} */\nCommentsComponent.prototype.readOnly;\n/** @type {?} */\nCommentsComponent.prototype.error;\n/** @type {?} */\nCommentsComponent.prototype.comments;\n/** @type {?} */\nCommentsComponent.prototype.commentObserver;\n/** @type {?} */\nCommentsComponent.prototype.comment$;\n/** @type {?} */\nCommentsComponent.prototype.message;\n/** @type {?} */\nCommentsComponent.prototype.beingAdded;\n/** @type {?} */\nCommentsComponent.prototype.commentProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommentProcessModel, PeopleProcessService, UserProcessModel } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class CommentListComponent {\n\n    \n    comments: CommentProcessModel[];\n\n    \n    clickRow: EventEmitter<CommentProcessModel> = new EventEmitter<CommentProcessModel>();\n\n    selectedComment: CommentProcessModel;\n/**\n * @param {?} datePipe\n * @param {?} peopleProcessService\n */\nconstructor(private datePipe: DatePipe,\npublic peopleProcessService: PeopleProcessService) {\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectComment(event: any): void {\n        this.selectedComment = event.value.obj;\n        this.clickRow.emit(this.selectedComment);\n    }\n/**\n * @param {?} user\n * @return {?}\n */\ngetUserShortName(user: UserProcessModel): string {\n        let /** @type {?} */ shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n/**\n * @param {?} aDate\n * @return {?}\n */\ntransformDate(aDate: string): string {\n        let /** @type {?} */ formattedDate: string;\n        let /** @type {?} */ givenDate = Number.parseInt(this.datePipe.transform(aDate, 'yMMdd'));\n        let /** @type {?} */ today = Number.parseInt(this.datePipe.transform(Date.now(), 'yMMdd'));\n        if (givenDate === today) {\n            formattedDate = 'Today, ' + this.datePipe.transform(aDate, 'hh:mm a');\n        } else {\n            let /** @type {?} */ yesterday = Number.parseInt(this.datePipe.transform(Date.now() - 24 * 3600 * 1000, 'yMMdd'));\n            if (givenDate === yesterday) {\n                formattedDate = 'Yesterday, ' + this.datePipe.transform(aDate, 'hh:mm a');\n            } else {\n                formattedDate = this.datePipe.transform(aDate, 'MMM dd y, hh:mm a');\n            }\n        }\n        return formattedDate;\n    }\n/**\n * @return {?}\n */\nhasComments(): boolean {\n        return this.comments && this.comments.length && true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-comment-list',\n    template: `\n      <adf-datatable\n          [rows]=\"comments\"\n          (rowClick)=\"selectComment($event)\" *ngIf=\"hasComments()\">\n\n          <data-columns>\n              <data-column key=\"createdBy\" title=\"{{'ADF_TASK_LIST.DETAILS.COMMENTS.CREATED_BY_HEADER' | translate }}\">\n                  <ng-template let-entry=\"$implicit\">\n                      <div id=\"comment-user-icon\"\n                      class=\"adf-comment-img-container\">\n                          <div\n                              *ngIf=\"!entry.row.obj.createdBy.pictureId\" class=\"adf-comment-user-icon\">\n                                  {{getUserShortName(entry.row.obj.createdBy)}}</div>\n                          <div>\n                              <img *ngIf=\"entry.row.obj.createdBy.pictureId\" class=\"adf-people-img\"\n                                  [src]=\"peopleProcessService.getUserImage(entry.row.obj.createdBy)\"/>\n                          </div>\n                      </div>\n                  </ng-template>\n              </data-column>\n              <data-column key=\"message\" title=\"{{'ADF_TASK_LIST.DETAILS.COMMENTS.MESSAGE_HEADER' | translate }}\">\n                  <ng-template let-entry=\"$implicit\">\n                      <div class=\"adf-comment-contents\">\n                          <div id=\"comment-user\" class=\"adf-comment-user-name\">\n                              {{entry.row.obj.createdBy?.firstName}} {{entry.row.obj.createdBy?.lastName}}\n                          </div>\n                          <div id=\"comment-message\" class=\"adf-comment-message\">\n                              {{entry.row.obj.message}}\n                          </div>\n                          <div id=\"comment-time\" class=\"adf-comment-message-time\">\n                              {{transformDate(entry.row.obj.created)}}\n                          </div>\n                      </div>\n                  </ng-template>\n              </data-column>\n          </data-columns>\n\n      </adf-datatable>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipe, },\n{type: PeopleProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'comments': [{ type: Input },],\n'clickRow': [{ type: Output },],\n};\n}\n\nfunction CommentListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCommentListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommentListComponent.ctorParameters;\n/** @type {?} */\nCommentListComponent.propDecorators;\n/** @type {?} */\nCommentListComponent.prototype.comments;\n/** @type {?} */\nCommentListComponent.prototype.clickRow;\n/** @type {?} */\nCommentListComponent.prototype.selectedComment;\n/** @type {?} */\nCommentListComponent.prototype.datePipe;\n/** @type {?} */\nCommentListComponent.prototype.peopleProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommentProcessModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nexport class ProcessCommentsComponent implements OnChanges {\n\n    \n    processInstanceId: string;\n\n    \n    readOnly: boolean = true;\n\n    \n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentProcessModel [] = [];\nprivate commentObserver: Observer<CommentProcessModel>;\n    comment$: Observable<CommentProcessModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n/**\n * @param {?} commentProcessService\n */\nconstructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentProcessModel>(observer =>  this.commentObserver = observer).share();\n        this.comment$.subscribe((comment: CommentProcessModel) => {\n            this.comments.push(comment);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ processInstanceId = changes['processInstanceId'];\n        if (processInstanceId) {\n            if (processInstanceId.currentValue) {\n                this.getProcessInstanceComments(processInstanceId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n/**\n * @param {?} processInstanceId\n * @return {?}\n */\nprivate getProcessInstanceComments(processInstanceId: string): void {\n        this.resetComments();\n        if (processInstanceId) {\n            this.commentProcessService.getProcessInstanceComments(processInstanceId).subscribe(\n                (res: CommentProcessModel[]) => {\n                    res = res.sort((comment1: CommentProcessModel, comment2: CommentProcessModel) => {\n                        let /** @type {?} */ date1 = new Date(comment1.created);\n                        let /** @type {?} */ date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n/**\n * @return {?}\n */\nprivate resetComments(): void {\n        this.comments = [];\n    }\n/**\n * @return {?}\n */\nadd(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addProcessInstanceComment(this.processInstanceId, this.message)\n                .subscribe(\n                    (res: CommentProcessModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.beingAdded = false;\n                    }\n                );\n        }\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        this.message = '';\n    }\n/**\n * @return {?}\n */\nisReadOnly(): boolean {\n        return this.readOnly;\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nonError(error: any) {\n        this.error.emit(error);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-process-instance-comments',\n    template: `\n      <div class=\"adf-comments-container\">\n          <div id=\"comment-header\" class=\"adf-comments-header\">\n              {{'ADF_PROCESS_LIST.DETAILS.COMMENTS.HEADER' | translate: { count: comments?.length} }}\n          </div>\n          <div class=\"adf-comments-input-container\" *ngIf=\"!isReadOnly()\">\n              <mat-form-field class=\"adf-full-width\">\n                  <input matInput id=\"comment-input\" placeholder=\"{{'ADF_PROCESS_LIST.DETAILS.COMMENTS.ADD' | translate}}\" [(ngModel)]=\"message\" (keyup.enter)=\"add()\" (keyup.esc)=\"clear()\">\n              </mat-form-field>\n          </div>\n\n          <div *ngIf=\"comments.length > 0\">\n              <adf-comment-list [comments]=\"comments\">\n              </adf-comment-list>\n          </div>\n      </div>\n    `,\n    styles: [`\n      :host {\n          width: 100%;\n      }\n\n      .activiti-label {\n          font-weight: bolder;\n          vertical-align: top;\n      }\n\n      .activiti-label + .icon {\n          position: relative;\n          top: -2px;\n      }\n\n      .list-wrap {\n          word-wrap: break-word;\n          word-break: break-all;\n          -webkit-hyphens:auto;\n          -o-hyphens:auto;\n          -ms-hyphens:auto;\n              hyphens:auto;\n      }\n\n      .hide-long-names {\n          overflow: auto;\n      }\n\n      .adf-comments-container {\n          height: 100%;\n          width: 100%;\n          overflow: auto;\n      }\n\n      .adf-comments-header {\n          padding: 10px 20px;\n          font-size: 14px;\n          font-weight: 600;\n          border-bottom: 1px solid #e1e1e1;\n          color: #a1a1a1;\n      }\n\n      .adf-comments-input-container {\n          padding: 0 15px;\n          width: calc(100% - 30px);\n          padding-top: 8px;\n          border-bottom: 1px solid #e1e1e1;\n      }\n\n      .adf-full-width {\n          width: 100%;\n      }\n\n      adf-comment-list {\n          float: left;\n          overflow: auto;\n          height: calc(100% - 101px);\n          width: 100%;\n      }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CommentProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'processInstanceId': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'error': [{ type: Output },],\n};\n}\n\nfunction ProcessCommentsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProcessCommentsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProcessCommentsComponent.ctorParameters;\n/** @type {?} */\nProcessCommentsComponent.propDecorators;\n/** @type {?} */\nProcessCommentsComponent.prototype.processInstanceId;\n/** @type {?} */\nProcessCommentsComponent.prototype.readOnly;\n/** @type {?} */\nProcessCommentsComponent.prototype.error;\n/** @type {?} */\nProcessCommentsComponent.prototype.comments;\n/** @type {?} */\nProcessCommentsComponent.prototype.commentObserver;\n/** @type {?} */\nProcessCommentsComponent.prototype.comment$;\n/** @type {?} */\nProcessCommentsComponent.prototype.message;\n/** @type {?} */\nProcessCommentsComponent.prototype.beingAdded;\n/** @type {?} */\nProcessCommentsComponent.prototype.commentProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DataColumnModule,  DataTableModule } from '@alfresco/adf-core';\nimport { PeopleComponent } from './people.component';\nimport { PeopleListComponent } from './people-list.component';\nimport { PeopleSearchActionLabelDirective, PeopleSearchComponent, PeopleSearchTitleDirective } from './people-search.component';\nexport class PeopleModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        DataTableModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule\n    ],\n    declarations: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ],\n    exports: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PeopleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { DataTableComponent } from '@alfresco/adf-core';\nimport { DataColumnListComponent, UserProcessModel } from '@alfresco/adf-core';\nimport { AfterContentInit, AfterViewInit, Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UserEventModel } from '../task-list/models/user-event.model';\nexport class PeopleListComponent implements AfterViewInit, AfterContentInit {\n\n     columnList: DataColumnListComponent;\n\n    \n    peopleDataTable: DataTableComponent;\n\n    \n    users: UserProcessModel[];\n\n    \n    actions: boolean = false;\n\n    \n    clickRow: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    \n    clickAction: EventEmitter<UserEventModel> = new EventEmitter<UserEventModel>();\n\n    user: UserProcessModel;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.peopleDataTable.columnList = this.columnList;\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectUser(event: any) {\n        this.user = event.value.obj;\n        this.clickRow.emit(this.user);\n    }\n/**\n * @return {?}\n */\nhasActions(): boolean {\n        return this.actions;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonShowRowActionsMenu(event: any) {\n\n        let /** @type {?} */ removeAction = {\n            title: 'Remove',\n            name: 'remove'\n        };\n\n        event.value.actions = [\n            removeAction\n        ];\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonExecuteRowAction(event: any) {\n        let /** @type {?} */ args = event.value;\n        let /** @type {?} */ action = args.action;\n        this.clickAction.emit(new UserEventModel({type: action.name, value: args.row.obj}));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-people-list',\n    template: `\n      <adf-datatable\n          [rows]=\"users\"\n          [actions]=\"hasActions()\"\n          (rowClick)=\"selectUser($event)\"\n          (rowDblClick)=\"selectUser($event)\"\n          (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n          (executeRowAction)=\"onExecuteRowAction($event)\">\n      </adf-datatable>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnList': [{ type: ContentChild, args: [DataColumnListComponent, ] },],\n'peopleDataTable': [{ type: ViewChild, args: [DataTableComponent, ] },],\n'users': [{ type: Input },],\n'actions': [{ type: Input },],\n'clickRow': [{ type: Output },],\n'clickAction': [{ type: Output },],\n};\n}\n\nfunction PeopleListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleListComponent.ctorParameters;\n/** @type {?} */\nPeopleListComponent.propDecorators;\n/** @type {?} */\nPeopleListComponent.prototype.columnList;\n/** @type {?} */\nPeopleListComponent.prototype.peopleDataTable;\n/** @type {?} */\nPeopleListComponent.prototype.users;\n/** @type {?} */\nPeopleListComponent.prototype.actions;\n/** @type {?} */\nPeopleListComponent.prototype.clickRow;\n/** @type {?} */\nPeopleListComponent.prototype.clickAction;\n/** @type {?} */\nPeopleListComponent.prototype.user;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \n * This object represent the User Event.\n * \n * \n */\nexport class UserEventModel {\n    type: string = '';\n    value: any = {};\n/**\n * @param {?=} obj\n */\nconstructor(obj?: any) {\n        this.type = obj && obj.type;\n        this.value = obj && obj.value || {};\n    }\n}\n\nfunction UserEventModel_tsickle_Closure_declarations() {\n/** @type {?} */\nUserEventModel.prototype.type;\n/** @type {?} */\nUserEventModel.prototype.value;\n}\n\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { LogService, UserProcessModel } from '@alfresco/adf-core';\nimport { PeopleProcessService } from '@alfresco/adf-core';\nimport { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { UserEventModel } from '../task-list/models/user-event.model';\nimport { PeopleSearchComponent } from './people-search.component';\nexport class PeopleComponent implements OnInit, AfterViewInit {\n\n    \n    people: UserProcessModel[] = [];\n\n    \n    taskId: string = '';\n\n    \n    readOnly: boolean = false;\n\n    \n    peopleSearch: PeopleSearchComponent;\n\n    showAssignment: boolean = false;\nprivate peopleSearchObserver: Observer<UserProcessModel[]>;\n    peopleSearch$: Observable<UserProcessModel[]>;\n/**\n * @param {?} logService\n * @param {?} peopleProcessService\n */\nconstructor(private logService: LogService,\npublic peopleProcessService: PeopleProcessService) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>(observer => this.peopleSearchObserver = observer).share();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    }\n/**\n * @return {?}\n */\ninvolveUserAndCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUserAndClose();\n        }\n    }\n/**\n * @return {?}\n */\ninvolveUserWithoutCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUser();\n        }\n    }\n/**\n * @param {?} searchedWord\n * @return {?}\n */\nsearchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)\n            .subscribe((users) => {\n                this.peopleSearchObserver.next(users);\n            }, error => this.logService.error(error));\n    }\n/**\n * @param {?} user\n * @return {?}\n */\ninvolveUser(user: UserProcessModel) {\n        this.peopleProcessService.involveUserWithTask(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = [...this.people, user];\n            }, error => this.logService.error('Impossible to involve user with task'));\n    }\n/**\n * @param {?} user\n * @return {?}\n */\nremoveInvolvedUser(user: UserProcessModel) {\n        this.peopleProcessService.removeInvolvedUser(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = this.people.filter((involvedUser) => {\n                    return involvedUser.id !== user.id;\n                });\n            }, error => this.logService.error('Impossible to remove involved user from task'));\n    }\n/**\n * @param {?} firstName\n * @param {?} lastName\n * @param {?=} delimiter\n * @return {?}\n */\ngetDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n/**\n * @param {?} firstName\n * @param {?} lastName\n * @return {?}\n */\ngetInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n/**\n * @return {?}\n */\nonAddAssignement() {\n        this.showAssignment = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonClickAction(event: UserEventModel) {\n        if (event.type === 'remove') {\n            this.removeInvolvedUser(event.value);\n        }\n    }\n/**\n * @return {?}\n */\nhasPeople() {\n        return this.people && this.people.length > 0;\n    }\n/**\n * @return {?}\n */\nisEditMode() {\n        return !this.readOnly;\n    }\n/**\n * @return {?}\n */\nonCloseSearch() {\n        this.showAssignment = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-people',\n    template: `\n      <mat-card class=\"assignment-top-container\">\n          <div mat-card-content class=\"assignment-top-container-content\">\n              <div class=\"assignment-header\">\n                      <div *ngIf=\"hasPeople()\" class=\"assigment-count\" id=\"people-title\">\n                          {{ 'ADF_TASK_LIST.DETAILS.LABELS.PEOPLE' | translate }} {{ ' (' + people.length + ')' }}\n                      </div>\n                      <div *ngIf=\"!hasPeople()\" class=\"assigment-count\" id=\"no-people-label\">\n                          {{ 'ADF_TASK_LIST.DETAILS.PEOPLE.NONE' | translate }}\n                      </div>\n                      <div *ngIf=\"isEditMode()\" class=\"add-people\" (click)=\"onAddAssignement()\">\n                          <mat-icon class=\"adf-add-person-icon\">person_add</mat-icon>\n                      </div>\n                  </div>\n                  <div class=\"assignment-container\" *ngIf=\"showAssignment\">\n                      <adf-people-search\n                      (searchPeople)=\"searchUser($event)\"\n                      (success)=\"involveUser($event)\"\n                      (closeSearch)=\"onCloseSearch()\"\n                      [results]=\"peopleSearch$\">\n                          <ng-container people-search-title>{{ 'ADF_TASK_LIST.DETAILS.LABELS.ADD_PEOPLE' | translate }}</ng-container>\n                          <ng-container people-search-action-label>{{ 'ADF_TASK_LIST.PEOPLE.ADD_USER' | translate }}</ng-container>\n                      </adf-people-search>\n                  </div>\n                  <div class=\"assignment-list-container\" id=\"assignment-people-list\" *ngIf=\"hasPeople()\">\n                      <adf-people-list\n                      [users]=\"people\"\n                      [actions]=\"isEditMode()\"\n                      (clickAction)=\"onClickAction($event)\">\n                          <data-columns>\n                              <data-column key=\"firstName\">\n                                  <ng-template let-entry=\"$implicit\">\n                                      <div *ngIf=\"!entry.row.obj.pictureId\" class=\"adf-people-search-people-pic\">\n                                          {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                                      <div>\n                                          <img *ngIf=\"entry.row.obj.pictureId\" class=\"people-img\"\n                                              [src]=\"peopleProcessService.getUserImage(entry.row.obj)\"/>\n                                      </div>\n                                  </ng-template>\n                              </data-column>\n                              <data-column key=\"email\" class=\"full-width\">\n                                  <ng-template let-entry=\"$implicit\">\n                                      <div class=\"people-full-name\">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ') }}</div>\n                                      <div class=\"people-email\">{{ entry.row.obj.email }}</div>\n                                      <div class=\"people-edit-label\">can edit</div>\n                                  </ng-template>\n                              </data-column>\n                          </data-columns>\n                      </adf-people-list>\n                  </div>\n          </div>\n      </mat-card>\n    `,\n    styles: [`\n\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LogService, },\n{type: PeopleProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'people': [{ type: Input },],\n'taskId': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'peopleSearch': [{ type: ViewChild, args: [PeopleSearchComponent, ] },],\n};\n}\n\nfunction PeopleComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleComponent.ctorParameters;\n/** @type {?} */\nPeopleComponent.propDecorators;\n/** @type {?} */\nPeopleComponent.prototype.people;\n/** @type {?} */\nPeopleComponent.prototype.taskId;\n/** @type {?} */\nPeopleComponent.prototype.readOnly;\n/** @type {?} */\nPeopleComponent.prototype.peopleSearch;\n/** @type {?} */\nPeopleComponent.prototype.showAssignment;\n/** @type {?} */\nPeopleComponent.prototype.peopleSearchObserver;\n/** @type {?} */\nPeopleComponent.prototype.peopleSearch$;\n/** @type {?} */\nPeopleComponent.prototype.logService;\n/** @type {?} */\nPeopleComponent.prototype.peopleProcessService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { PeopleProcessService, UserProcessModel } from '@alfresco/adf-core';\nimport { Component, Directive, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { debounceTime } from 'rxjs/operators';\nexport class PeopleSearchComponent implements OnInit {\n\n    \n    results: Observable<UserProcessModel[]>;\n\n    \n    searchPeople: EventEmitter<any> = new EventEmitter();\n\n    \n    success: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    \n    closeSearch = new EventEmitter();\n\n    searchUser: FormControl = new FormControl();\n\n    users: UserProcessModel[] = [];\n\n    selectedUser: UserProcessModel;\n/**\n * @param {?} peopleProcessService\n */\nconstructor(public peopleProcessService: PeopleProcessService) {\n        this.searchUser.valueChanges\n            .pipe(\n                debounceTime(200)\n            )\n            .subscribe((event: string) => {\n                if (event && event.trim()) {\n                    this.searchPeople.emit(event);\n                } else {\n                    this.users = [];\n                }\n            });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.results.subscribe((list) => {\n            this.users = list;\n        });\n    }\n/**\n * @param {?} user\n * @return {?}\n */\nonRowClick(user: UserProcessModel) {\n        this.selectedUser = user;\n    }\n/**\n * @return {?}\n */\ncloseSearchList() {\n        this.closeSearch.emit();\n    }\n/**\n * @return {?}\n */\ninvolveUserAndClose() {\n        this.involveUser();\n        this.closeSearchList();\n    }\n/**\n * @return {?}\n */\ninvolveUser() {\n        if (this.selectedUser === undefined) {\n            return;\n        }\n        this.success.emit(this.selectedUser);\n        this.users = this.users.filter((user) => {\n            this.searchUser.reset();\n            return user.id !== this.selectedUser.id;\n        });\n    }\n/**\n * @param {?} firstName\n * @param {?} lastName\n * @param {?=} delimiter\n * @return {?}\n */\ngetDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n/**\n * @param {?} firstName\n * @param {?} lastName\n * @return {?}\n */\ngetInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n/**\n * @return {?}\n */\nhasUsers() {\n        return (this.users && this.users.length > 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'adf-people-search',\n    template: `\n      <div class=\"search-text-header\">\n          <ng-content select=\"[people-search-title]\"></ng-content>\n      </div>\n      <mat-form-field class=\"search-text-container\">\n      \t<input matInput placeholder=\"{{'ADF_TASK_LIST.PEOPLE.SEARCH_USER'|translate}}\" type=\"text\" id=\"userSearchText\" [value]=\"\" [formControl]=\"searchUser\">\n      </mat-form-field>\n      <div class=\"search-list-container\" id=\"search-people-list\" *ngIf=\"hasUsers()\">\n          <adf-people-list\n          [users]=\"users\"\n          (clickRow)=\"onRowClick($event)\">\n              <data-columns>\n                  <data-column key=\"firstName\">\n                      <ng-template let-entry=\"$implicit\">\n                              <div *ngIf=\"!entry.row.obj.pictureId\" class=\"people-pic\">\n                                  {{getInitialUserName(entry.row.obj.firstName, entry.row.obj.lastName)}}</div>\n                              <div>\n                                  <img *ngIf=\"entry.row.obj.pictureId\" class=\"people-img\"\n                                      [src]=\"peopleProcessService.getUserImage(entry.row.obj)\"/>\n                              </div>\n                      </ng-template>\n                  </data-column>\n                  <data-column key=\"email\" class=\"full-width\">\n                      <ng-template let-entry=\"$implicit\">\n                          <div class=\"people-full-name\">{{ getDisplayUser(entry.row.obj.firstName, entry.row.obj.lastName, ' ') }}</div>\n                      </ng-template>\n                  </data-column>\n              </data-columns>\n          </adf-people-list>\n      </div>\n      <div class=\"search-list-action-container\">\n          <button mat-button type=\"button\" id=\"close-people-search\" (click)=\"closeSearchList()\">\n              {{'ADF_TASK_LIST.PEOPLE.DIALOG_CLOSE' | translate }}\n          </button>\n          <button mat-button type=\"button\" id=\"add-people\" (click)=\"involveUserAndClose()\">\n              <ng-content select=\"[people-search-action-label]\"></ng-content>\n          </button>\n      </div>\n    `,\n    styles: [`\n\n    `],\n    host: {\n        'class': 'adf-people-search'\n    },\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PeopleProcessService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'results': [{ type: Input },],\n'searchPeople': [{ type: Output },],\n'success': [{ type: Output },],\n'closeSearch': [{ type: Output },],\n};\n}\n\nfunction PeopleSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleSearchComponent.ctorParameters;\n/** @type {?} */\nPeopleSearchComponent.propDecorators;\n/** @type {?} */\nPeopleSearchComponent.prototype.results;\n/** @type {?} */\nPeopleSearchComponent.prototype.searchPeople;\n/** @type {?} */\nPeopleSearchComponent.prototype.success;\n/** @type {?} */\nPeopleSearchComponent.prototype.closeSearch;\n/** @type {?} */\nPeopleSearchComponent.prototype.searchUser;\n/** @type {?} */\nPeopleSearchComponent.prototype.users;\n/** @type {?} */\nPeopleSearchComponent.prototype.selectedUser;\n/** @type {?} */\nPeopleSearchComponent.prototype.peopleProcessService;\n}\n\nexport class PeopleSearchTitleDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'people-search-title' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PeopleSearchTitleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleSearchTitleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleSearchTitleDirective.ctorParameters;\n}\n\nexport class PeopleSearchActionLabelDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'people-search-action-label' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PeopleSearchActionLabelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPeopleSearchActionLabelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeopleSearchActionLabelDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export { audit } from './audit';\nexport { auditTime } from './auditTime';\nexport { buffer } from './buffer';\nexport { bufferCount } from './bufferCount';\nexport { bufferTime } from './bufferTime';\nexport { bufferToggle } from './bufferToggle';\nexport { bufferWhen } from './bufferWhen';\nexport { catchError } from './catchError';\nexport { combineAll } from './combineAll';\nexport { combineLatest } from './combineLatest';\nexport { concat } from './concat';\nexport { concatAll } from './concatAll';\nexport { concatMap } from './concatMap';\nexport { concatMapTo } from './concatMapTo';\nexport { count } from './count';\nexport { debounce } from './debounce';\nexport { debounceTime } from './debounceTime';\nexport { defaultIfEmpty } from './defaultIfEmpty';\nexport { delay } from './delay';\nexport { delayWhen } from './delayWhen';\nexport { dematerialize } from './dematerialize';\nexport { distinct } from './distinct';\nexport { distinctUntilChanged } from './distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './distinctUntilKeyChanged';\nexport { elementAt } from './elementAt';\nexport { every } from './every';\nexport { exhaust } from './exhaust';\nexport { exhaustMap } from './exhaustMap';\nexport { expand } from './expand';\nexport { filter } from './filter';\nexport { finalize } from './finalize';\nexport { find } from './find';\nexport { findIndex } from './findIndex';\nexport { first } from './first';\nexport { groupBy } from './groupBy';\nexport { ignoreElements } from './ignoreElements';\nexport { isEmpty } from './isEmpty';\nexport { last } from './last';\nexport { map } from './map';\nexport { mapTo } from './mapTo';\nexport { materialize } from './materialize';\nexport { max } from './max';\nexport { merge } from './merge';\nexport { mergeAll } from './mergeAll';\nexport { mergeMap } from './mergeMap';\nexport { mergeMap as flatMap } from './mergeMap';\nexport { mergeMapTo } from './mergeMapTo';\nexport { mergeScan } from './mergeScan';\nexport { min } from './min';\nexport { multicast } from './multicast';\nexport { observeOn } from './observeOn';\nexport { onErrorResumeNext } from './onErrorResumeNext';\nexport { pairwise } from './pairwise';\nexport { partition } from './partition';\nexport { pluck } from './pluck';\nexport { publish } from './publish';\nexport { publishBehavior } from './publishBehavior';\nexport { publishLast } from './publishLast';\nexport { publishReplay } from './publishReplay';\nexport { race } from './race';\nexport { reduce } from './reduce';\nexport { repeat } from './repeat';\nexport { repeatWhen } from './repeatWhen';\nexport { retry } from './retry';\nexport { retryWhen } from './retryWhen';\nexport { refCount } from './refCount';\nexport { sample } from './sample';\nexport { sampleTime } from './sampleTime';\nexport { scan } from './scan';\nexport { sequenceEqual } from './sequenceEqual';\nexport { share } from './share';\nexport { shareReplay } from './shareReplay';\nexport { single } from './single';\nexport { skip } from './skip';\nexport { skipLast } from './skipLast';\nexport { skipUntil } from './skipUntil';\nexport { skipWhile } from './skipWhile';\nexport { startWith } from './startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './subscribeOn';\nexport { switchAll } from './switchAll';\nexport { switchMap } from './switchMap';\nexport { switchMapTo } from './switchMapTo';\nexport { take } from './take';\nexport { takeLast } from './takeLast';\nexport { takeUntil } from './takeUntil';\nexport { takeWhile } from './takeWhile';\nexport { tap } from './tap';\nexport { throttle } from './throttle';\nexport { throttleTime } from './throttleTime';\nexport { timeInterval } from './timeInterval';\nexport { timeout } from './timeout';\nexport { timeoutWith } from './timeoutWith';\nexport { timestamp } from './timestamp';\nexport { toArray } from './toArray';\nexport { window } from './window';\nexport { windowCount } from './windowCount';\nexport { windowTime } from './windowTime';\nexport { windowToggle } from './windowToggle';\nexport { windowWhen } from './windowWhen';\nexport { withLatestFrom } from './withLatestFrom';\nexport { zip } from './zip';\nexport { zipAll } from './zipAll';\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  protected _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  protected _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      } else if (this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  protected _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  _isComplete = false;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  protected _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(protected source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  protected _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(): Subscription;\n  subscribe(observer: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport {\n    MAT_PLACEHOLDER_GLOBAL_OPTIONS, MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatTooltipModule\n} from '@angular/material';\n/**\n * @return {?}\n */\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule\n    ];\n}\nexport class MaterialModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [\n        {provide: MAT_PLACEHOLDER_GLOBAL_OPTIONS, useValue: { float: 'never' }}\n    ],\n    imports: modules(),\n    exports: modules()\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MaterialModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMaterialModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaterialModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Observable","PDF_FORMAT","JSON_FORMAT","moment","Subject","forms","iterator_1","__extends","iterator","isArray_1","errorObject_1","WindowSubscriber","dispatchNext","queue_1","RefCountSubscriber","RefCountOperator","refCount","Map_1","root_1","rxSubscriber_1","Set_1","debounceTime","async_1","observable_1","isArrayLike_1","observeOn","root","observable","Observer_1","global"],"mappings":"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"}
